// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/authentication_service.proto

#include "bgs/low/pb/client/authentication_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fcontent_5fhandle_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContentHandle_bgs_2flow_2fpb_2fclient_2fcontent_5fhandle_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityId_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2faccount_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountLicense_bgs_2flow_2fpb_2fclient_2faccount_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VersionInfo_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
namespace bgs {
namespace protocol {
namespace authentication {
namespace v1 {
class ModuleLoadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModuleLoadRequest> _instance;
} _ModuleLoadRequest_default_instance_;
class ModuleNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModuleNotification> _instance;
} _ModuleNotification_default_instance_;
class ModuleMessageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModuleMessageRequest> _instance;
} _ModuleMessageRequest_default_instance_;
class LogonRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogonRequest> _instance;
} _LogonRequest_default_instance_;
class LogonResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogonResult> _instance;
} _LogonResult_default_instance_;
class GenerateSSOTokenRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenerateSSOTokenRequest> _instance;
} _GenerateSSOTokenRequest_default_instance_;
class GenerateSSOTokenResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenerateSSOTokenResponse> _instance;
} _GenerateSSOTokenResponse_default_instance_;
class LogonUpdateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogonUpdateRequest> _instance;
} _LogonUpdateRequest_default_instance_;
class LogonQueueUpdateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogonQueueUpdateRequest> _instance;
} _LogonQueueUpdateRequest_default_instance_;
class AccountSettingsNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountSettingsNotification> _instance;
} _AccountSettingsNotification_default_instance_;
class ServerStateChangeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerStateChangeRequest> _instance;
} _ServerStateChangeRequest_default_instance_;
class VersionInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VersionInfo> _instance;
} _VersionInfo_default_instance_;
class VersionInfoNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VersionInfoNotification> _instance;
} _VersionInfoNotification_default_instance_;
class MemModuleLoadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MemModuleLoadRequest> _instance;
} _MemModuleLoadRequest_default_instance_;
class MemModuleLoadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MemModuleLoadResponse> _instance;
} _MemModuleLoadResponse_default_instance_;
class SelectGameAccountRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SelectGameAccountRequest> _instance;
} _SelectGameAccountRequest_default_instance_;
class GameAccountSelectedRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GameAccountSelectedRequest> _instance;
} _GameAccountSelectedRequest_default_instance_;
class GenerateWebCredentialsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenerateWebCredentialsRequest> _instance;
} _GenerateWebCredentialsRequest_default_instance_;
class GenerateWebCredentialsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenerateWebCredentialsResponse> _instance;
} _GenerateWebCredentialsResponse_default_instance_;
class VerifyWebCredentialsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VerifyWebCredentialsRequest> _instance;
} _VerifyWebCredentialsRequest_default_instance_;
}  // namespace v1
}  // namespace authentication
}  // namespace protocol
}  // namespace bgs
static void InitDefaultsscc_info_AccountSettingsNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_AccountSettingsNotification_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::AccountSettingsNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::AccountSettingsNotification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AccountSettingsNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AccountSettingsNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {
      &scc_info_AccountLicense_bgs_2flow_2fpb_2fclient_2faccount_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_GameAccountSelectedRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_GameAccountSelectedRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::GameAccountSelectedRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::GameAccountSelectedRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GameAccountSelectedRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GameAccountSelectedRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {
      &scc_info_EntityId_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_GenerateSSOTokenRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_GenerateSSOTokenRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::GenerateSSOTokenRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::GenerateSSOTokenRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenerateSSOTokenRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenerateSSOTokenRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GenerateSSOTokenResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_GenerateSSOTokenResponse_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::GenerateSSOTokenResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::GenerateSSOTokenResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenerateSSOTokenResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenerateSSOTokenResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GenerateWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_GenerateWebCredentialsRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenerateWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenerateWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GenerateWebCredentialsResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_GenerateWebCredentialsResponse_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenerateWebCredentialsResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenerateWebCredentialsResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LogonQueueUpdateRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_LogonQueueUpdateRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::LogonQueueUpdateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::LogonQueueUpdateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogonQueueUpdateRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogonQueueUpdateRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LogonRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_LogonRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::LogonRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::LogonRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogonRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogonRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LogonResult_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_LogonResult_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::LogonResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::LogonResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LogonResult_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LogonResult_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {
      &scc_info_EntityId_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_LogonUpdateRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_LogonUpdateRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::LogonUpdateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::LogonUpdateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogonUpdateRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogonUpdateRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_MemModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_MemModuleLoadRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::MemModuleLoadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::MemModuleLoadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MemModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MemModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {
      &scc_info_ContentHandle_bgs_2flow_2fpb_2fclient_2fcontent_5fhandle_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_MemModuleLoadResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_MemModuleLoadResponse_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::MemModuleLoadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::MemModuleLoadResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MemModuleLoadResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MemModuleLoadResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_ModuleLoadRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::ModuleLoadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::ModuleLoadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {
      &scc_info_ContentHandle_bgs_2flow_2fpb_2fclient_2fcontent_5fhandle_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_ModuleMessageRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_ModuleMessageRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::ModuleMessageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::ModuleMessageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModuleMessageRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModuleMessageRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ModuleNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_ModuleNotification_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::ModuleNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::ModuleNotification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModuleNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModuleNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_SelectGameAccountRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_SelectGameAccountRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::SelectGameAccountRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::SelectGameAccountRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SelectGameAccountRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SelectGameAccountRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {
      &scc_info_EntityId_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_ServerStateChangeRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_ServerStateChangeRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::ServerStateChangeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::ServerStateChangeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerStateChangeRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerStateChangeRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_VerifyWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_VerifyWebCredentialsRequest_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VerifyWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VerifyWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_VersionInfo_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_VersionInfo_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::VersionInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::VersionInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VersionInfo_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VersionInfo_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_VersionInfoNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::authentication::v1::_VersionInfoNotification_default_instance_;
    new (ptr) ::bgs::protocol::authentication::v1::VersionInfoNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::authentication::v1::VersionInfoNotification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VersionInfoNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_VersionInfoNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto}, {
      &scc_info_VersionInfo_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto[20];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleLoadRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleLoadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleLoadRequest, module_handle_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleLoadRequest, message_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleNotification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleNotification, module_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleNotification, result_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleMessageRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleMessageRequest, module_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ModuleMessageRequest, message_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, program_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, platform_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, locale_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, email_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, version_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, application_version_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, public_computer_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, allow_logon_queue_notifications_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, cached_web_credentials_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, user_agent_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonRequest, device_id_),
  0,
  1,
  2,
  3,
  4,
  8,
  9,
  10,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, error_code_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, account_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, game_account_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, email_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, available_region_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, connected_region_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, battle_tag_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, geoip_country_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, session_key_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, restricted_mode_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonResult, client_id_),
  6,
  5,
  ~0u,
  0,
  ~0u,
  7,
  1,
  2,
  3,
  8,
  4,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateSSOTokenRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateSSOTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateSSOTokenRequest, program_),
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateSSOTokenResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateSSOTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateSSOTokenResponse, sso_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateSSOTokenResponse, sso_secret_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonUpdateRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonUpdateRequest, error_code_),
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonQueueUpdateRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonQueueUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonQueueUpdateRequest, position_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonQueueUpdateRequest, estimated_time_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::LogonQueueUpdateRequest, eta_deviation_in_sec_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::AccountSettingsNotification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::AccountSettingsNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::AccountSettingsNotification, licenses_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::AccountSettingsNotification, is_using_rid_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::AccountSettingsNotification, is_playing_from_igr_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::AccountSettingsNotification, can_receive_voice_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::AccountSettingsNotification, can_send_voice_),
  ~0u,
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ServerStateChangeRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ServerStateChangeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ServerStateChangeRequest, state_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::ServerStateChangeRequest, event_time_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VersionInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VersionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VersionInfo, number_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VersionInfo, patch_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VersionInfo, is_optional_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VersionInfo, kick_time_),
  1,
  0,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VersionInfoNotification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VersionInfoNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VersionInfoNotification, version_info_),
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::MemModuleLoadRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::MemModuleLoadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::MemModuleLoadRequest, handle_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::MemModuleLoadRequest, key_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::MemModuleLoadRequest, input_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::MemModuleLoadResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::MemModuleLoadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::MemModuleLoadResponse, data_),
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::SelectGameAccountRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::SelectGameAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::SelectGameAccountRequest, game_account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GameAccountSelectedRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GameAccountSelectedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GameAccountSelectedRequest, result_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GameAccountSelectedRequest, game_account_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest, program_),
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse, web_credentials_),
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest, web_credentials_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::bgs::protocol::authentication::v1::ModuleLoadRequest)},
  { 9, 16, sizeof(::bgs::protocol::authentication::v1::ModuleNotification)},
  { 18, 25, sizeof(::bgs::protocol::authentication::v1::ModuleMessageRequest)},
  { 27, 43, sizeof(::bgs::protocol::authentication::v1::LogonRequest)},
  { 54, 70, sizeof(::bgs::protocol::authentication::v1::LogonResult)},
  { 81, 87, sizeof(::bgs::protocol::authentication::v1::GenerateSSOTokenRequest)},
  { 88, 95, sizeof(::bgs::protocol::authentication::v1::GenerateSSOTokenResponse)},
  { 97, 103, sizeof(::bgs::protocol::authentication::v1::LogonUpdateRequest)},
  { 104, 112, sizeof(::bgs::protocol::authentication::v1::LogonQueueUpdateRequest)},
  { 115, 125, sizeof(::bgs::protocol::authentication::v1::AccountSettingsNotification)},
  { 130, 137, sizeof(::bgs::protocol::authentication::v1::ServerStateChangeRequest)},
  { 139, 148, sizeof(::bgs::protocol::authentication::v1::VersionInfo)},
  { 152, 158, sizeof(::bgs::protocol::authentication::v1::VersionInfoNotification)},
  { 159, 167, sizeof(::bgs::protocol::authentication::v1::MemModuleLoadRequest)},
  { 170, 176, sizeof(::bgs::protocol::authentication::v1::MemModuleLoadResponse)},
  { 177, 183, sizeof(::bgs::protocol::authentication::v1::SelectGameAccountRequest)},
  { 184, 191, sizeof(::bgs::protocol::authentication::v1::GameAccountSelectedRequest)},
  { 193, 199, sizeof(::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest)},
  { 200, 206, sizeof(::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse)},
  { 207, 213, sizeof(::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_ModuleLoadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_ModuleNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_ModuleMessageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_LogonRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_LogonResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_GenerateSSOTokenRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_GenerateSSOTokenResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_LogonUpdateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_LogonQueueUpdateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_AccountSettingsNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_ServerStateChangeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_VersionInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_VersionInfoNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_MemModuleLoadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_MemModuleLoadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_SelectGameAccountRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_GameAccountSelectedRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_GenerateWebCredentialsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_GenerateWebCredentialsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::authentication::v1::_VerifyWebCredentialsRequest_default_instance_),
};

const char descriptor_table_protodef_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n.bgs/low/pb/client/authentication_servi"
  "ce.proto\022\036bgs.protocol.authentication.v1"
  "\032%bgs/low/pb/client/account_types.proto\032"
  ",bgs/low/pb/client/content_handle_types."
  "proto\032$bgs/low/pb/client/entity_types.pr"
  "oto\032!bgs/low/pb/client/rpc_types.proto\"X"
  "\n\021ModuleLoadRequest\0222\n\rmodule_handle\030\001 \002"
  "(\0132\033.bgs.protocol.ContentHandle\022\017\n\007messa"
  "ge\030\002 \001(\014\"7\n\022ModuleNotification\022\021\n\tmodule"
  "_id\030\002 \001(\005\022\016\n\006result\030\003 \001(\r\":\n\024ModuleMessa"
  "geRequest\022\021\n\tmodule_id\030\001 \002(\005\022\017\n\007message\030"
  "\002 \001(\014\"\216\002\n\014LogonRequest\022\017\n\007program\030\001 \001(\t\022"
  "\020\n\010platform\030\002 \001(\t\022\016\n\006locale\030\003 \001(\t\022\r\n\005ema"
  "il\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\033\n\023application"
  "_version\030\006 \001(\005\022\027\n\017public_computer\030\007 \001(\010\022"
  ".\n\037allow_logon_queue_notifications\030\n \001(\010"
  ":\005false\022\036\n\026cached_web_credentials\030\014 \001(\014\022"
  "\022\n\nuser_agent\030\016 \001(\t\022\021\n\tdevice_id\030\017 \001(\t\"\255"
  "\002\n\013LogonResult\022\022\n\nerror_code\030\001 \002(\r\022*\n\nac"
  "count_id\030\002 \001(\0132\026.bgs.protocol.EntityId\022/"
  "\n\017game_account_id\030\003 \003(\0132\026.bgs.protocol.E"
  "ntityId\022\r\n\005email\030\004 \001(\t\022\030\n\020available_regi"
  "on\030\005 \003(\r\022\030\n\020connected_region\030\006 \001(\r\022\022\n\nba"
  "ttle_tag\030\007 \001(\t\022\025\n\rgeoip_country\030\010 \001(\t\022\023\n"
  "\013session_key\030\t \001(\014\022\027\n\017restricted_mode\030\n "
  "\001(\010\022\021\n\tclient_id\030\013 \001(\t\"*\n\027GenerateSSOTok"
  "enRequest\022\017\n\007program\030\001 \001(\007\">\n\030GenerateSS"
  "OTokenResponse\022\016\n\006sso_id\030\001 \001(\014\022\022\n\nsso_se"
  "cret\030\002 \001(\014\"(\n\022LogonUpdateRequest\022\022\n\nerro"
  "r_code\030\001 \002(\r\"a\n\027LogonQueueUpdateRequest\022"
  "\020\n\010position\030\001 \002(\r\022\026\n\016estimated_time\030\002 \002("
  "\004\022\034\n\024eta_deviation_in_sec\030\003 \002(\004\"\276\001\n\033Acco"
  "untSettingsNotification\0229\n\010licenses\030\001 \003("
  "\0132\'.bgs.protocol.account.v1.AccountLicen"
  "se\022\024\n\014is_using_rid\030\002 \001(\010\022\033\n\023is_playing_f"
  "rom_igr\030\003 \001(\010\022\031\n\021can_receive_voice\030\004 \001(\010"
  "\022\026\n\016can_send_voice\030\005 \001(\010\"=\n\030ServerStateC"
  "hangeRequest\022\r\n\005state\030\001 \002(\r\022\022\n\nevent_tim"
  "e\030\002 \002(\004\"T\n\013VersionInfo\022\016\n\006number\030\001 \001(\r\022\r"
  "\n\005patch\030\002 \001(\t\022\023\n\013is_optional\030\003 \001(\010\022\021\n\tki"
  "ck_time\030\004 \001(\004\"\\\n\027VersionInfoNotification"
  "\022A\n\014version_info\030\001 \001(\0132+.bgs.protocol.au"
  "thentication.v1.VersionInfo\"_\n\024MemModule"
  "LoadRequest\022+\n\006handle\030\001 \002(\0132\033.bgs.protoc"
  "ol.ContentHandle\022\013\n\003key\030\002 \002(\014\022\r\n\005input\030\003"
  " \002(\014\"%\n\025MemModuleLoadResponse\022\014\n\004data\030\001 "
  "\002(\014\"K\n\030SelectGameAccountRequest\022/\n\017game_"
  "account_id\030\001 \002(\0132\026.bgs.protocol.EntityId"
  "\"]\n\032GameAccountSelectedRequest\022\016\n\006result"
  "\030\001 \002(\r\022/\n\017game_account_id\030\002 \001(\0132\026.bgs.pr"
  "otocol.EntityId\"0\n\035GenerateWebCredential"
  "sRequest\022\017\n\007program\030\001 \001(\007\"9\n\036GenerateWeb"
  "CredentialsResponse\022\027\n\017web_credentials\030\001"
  " \001(\014\"6\n\033VerifyWebCredentialsRequest\022\027\n\017w"
  "eb_credentials\030\001 \001(\0142\237\t\n\026AuthenticationL"
  "istener\022g\n\014OnModuleLoad\0221.bgs.protocol.a"
  "uthentication.v1.ModuleLoadRequest\032\031.bgs"
  ".protocol.NO_RESPONSE\"\t\210\002\001\202\371+\002\010\001\022h\n\017OnMo"
  "duleMessage\0224.bgs.protocol.authenticatio"
  "n.v1.ModuleMessageRequest\032\024.bgs.protocol"
  ".NoData\"\t\210\002\001\202\371+\002\010\002\022r\n\023OnServerStateChang"
  "e\0228.bgs.protocol.authentication.v1.Serve"
  "rStateChangeRequest\032\031.bgs.protocol.NO_RE"
  "SPONSE\"\006\202\371+\002\010\004\022a\n\017OnLogonComplete\022+.bgs."
  "protocol.authentication.v1.LogonResult\032\031"
  ".bgs.protocol.NO_RESPONSE\"\006\202\371+\002\010\005\022\206\001\n\017On"
  "MemModuleLoad\0224.bgs.protocol.authenticat"
  "ion.v1.MemModuleLoadRequest\0325.bgs.protoc"
  "ol.authentication.v1.MemModuleLoadRespon"
  "se\"\006\202\371+\002\010\006\022f\n\rOnLogonUpdate\0222.bgs.protoc"
  "ol.authentication.v1.LogonUpdateRequest\032"
  "\031.bgs.protocol.NO_RESPONSE\"\006\202\371+\002\010\n\022r\n\024On"
  "VersionInfoUpdated\0227.bgs.protocol.authen"
  "tication.v1.VersionInfoNotification\032\031.bg"
  "s.protocol.NO_RESPONSE\"\006\202\371+\002\010\013\022p\n\022OnLogo"
  "nQueueUpdate\0227.bgs.protocol.authenticati"
  "on.v1.LogonQueueUpdateRequest\032\031.bgs.prot"
  "ocol.NO_RESPONSE\"\006\202\371+\002\010\014\022J\n\017OnLogonQueue"
  "End\022\024.bgs.protocol.NoData\032\031.bgs.protocol"
  ".NO_RESPONSE\"\006\202\371+\002\010\r\022y\n\025OnGameAccountSel"
  "ected\022:.bgs.protocol.authentication.v1.G"
  "ameAccountSelectedRequest\032\031.bgs.protocol"
  ".NO_RESPONSE\"\t\210\002\001\202\371+\002\010\016\032=\202\371+3\n1bnet.prot"
  "ocol.authentication.AuthenticationClient"
  "\212\371+\002\010\0012\372\007\n\025AuthenticationService\022S\n\005Logo"
  "n\022,.bgs.protocol.authentication.v1.Logon"
  "Request\032\024.bgs.protocol.NoData\"\006\202\371+\002\010\001\022c\n"
  "\014ModuleNotify\0222.bgs.protocol.authenticat"
  "ion.v1.ModuleNotification\032\024.bgs.protocol"
  ".NoData\"\t\210\002\001\202\371+\002\010\002\022f\n\rModuleMessage\0224.bg"
  "s.protocol.authentication.v1.ModuleMessa"
  "geRequest\032\024.bgs.protocol.NoData\"\t\210\002\001\202\371+\002"
  "\010\003\022W\n\034SelectGameAccount_DEPRECATED\022\026.bgs"
  ".protocol.EntityId\032\024.bgs.protocol.NoData"
  "\"\t\210\002\001\202\371+\002\010\004\022\215\001\n\020GenerateSSOToken\0227.bgs.p"
  "rotocol.authentication.v1.GenerateSSOTok"
  "enRequest\0328.bgs.protocol.authentication."
  "v1.GenerateSSOTokenResponse\"\006\202\371+\002\010\005\022n\n\021S"
  "electGameAccount\0228.bgs.protocol.authenti"
  "cation.v1.SelectGameAccountRequest\032\024.bgs"
  ".protocol.NoData\"\t\210\002\001\202\371+\002\010\006\022q\n\024VerifyWeb"
  "Credentials\022;.bgs.protocol.authenticatio"
  "n.v1.VerifyWebCredentialsRequest\032\024.bgs.p"
  "rotocol.NoData\"\006\202\371+\002\010\007\022\237\001\n\026GenerateWebCr"
  "edentials\022=.bgs.protocol.authentication."
  "v1.GenerateWebCredentialsRequest\032>.bgs.p"
  "rotocol.authentication.v1.GenerateWebCre"
  "dentialsResponse\"\006\202\371+\002\010\010\032Q\202\371+3\n1bnet.pro"
  "tocol.authentication.AuthenticationServe"
  "r\202\371+\020*\016authentication\212\371+\002\020\001B\003\200\001\000"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto_deps[4] = {
  &::descriptor_table_bgs_2flow_2fpb_2fclient_2faccount_5ftypes_2eproto,
  &::descriptor_table_bgs_2flow_2fpb_2fclient_2fcontent_5fhandle_5ftypes_2eproto,
  &::descriptor_table_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto,
  &::descriptor_table_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto_sccs[20] = {
  &scc_info_AccountSettingsNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_GameAccountSelectedRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_GenerateSSOTokenRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_GenerateSSOTokenResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_GenerateWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_GenerateWebCredentialsResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_LogonQueueUpdateRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_LogonRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_LogonResult_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_LogonUpdateRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_MemModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_MemModuleLoadResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_ModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_ModuleMessageRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_ModuleNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_SelectGameAccountRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_ServerStateChangeRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_VerifyWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_VersionInfo_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
  &scc_info_VersionInfoNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto_once;
static bool descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto = {
  &descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto_initialized, descriptor_table_protodef_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto, "bgs/low/pb/client/authentication_service.proto", 4392,
  &descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto_once, descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto_sccs, descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto_deps, 20, 4,
  schemas, file_default_instances, TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto::offsets,
  file_level_metadata_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto, 20, file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto, file_level_service_descriptors_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto)), true);
namespace bgs {
namespace protocol {
namespace authentication {
namespace v1 {

// ===================================================================

void ModuleLoadRequest::InitAsDefaultInstance() {
  ::bgs::protocol::authentication::v1::_ModuleLoadRequest_default_instance_._instance.get_mutable()->module_handle_ = const_cast< ::bgs::protocol::ContentHandle*>(
      ::bgs::protocol::ContentHandle::internal_default_instance());
}
class ModuleLoadRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ModuleLoadRequest>()._has_bits_);
  static const ::bgs::protocol::ContentHandle& module_handle(const ModuleLoadRequest* msg);
  static void set_has_module_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::ContentHandle&
ModuleLoadRequest::_Internal::module_handle(const ModuleLoadRequest* msg) {
  return *msg->module_handle_;
}
void ModuleLoadRequest::clear_module_handle() {
  if (module_handle_ != nullptr) module_handle_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
ModuleLoadRequest::ModuleLoadRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.ModuleLoadRequest)
}
ModuleLoadRequest::ModuleLoadRequest(const ModuleLoadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_message()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from._internal_has_module_handle()) {
    module_handle_ = new ::bgs::protocol::ContentHandle(*from.module_handle_);
  } else {
    module_handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.ModuleLoadRequest)
}

void ModuleLoadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  module_handle_ = nullptr;
}

ModuleLoadRequest::~ModuleLoadRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.ModuleLoadRequest)
  SharedDtor();
}

void ModuleLoadRequest::SharedDtor() {
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete module_handle_;
}

void ModuleLoadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModuleLoadRequest& ModuleLoadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModuleLoadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.ModuleLoadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(module_handle_ != nullptr);
      module_handle_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ModuleLoadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .bgs.protocol.ContentHandle module_handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_module_handle(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModuleLoadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.ModuleLoadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .bgs.protocol.ContentHandle module_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::module_handle(this), target, stream);
  }

  // optional bytes message = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.ModuleLoadRequest)
  return target;
}

size_t ModuleLoadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.ModuleLoadRequest)
  size_t total_size = 0;

  // required .bgs.protocol.ContentHandle module_handle = 1;
  if (_internal_has_module_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *module_handle_);
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes message = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleLoadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.ModuleLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleLoadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModuleLoadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.ModuleLoadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.ModuleLoadRequest)
    MergeFrom(*source);
  }
}

void ModuleLoadRequest::MergeFrom(const ModuleLoadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.ModuleLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_module_handle()->::bgs::protocol::ContentHandle::MergeFrom(from._internal_module_handle());
    }
  }
}

void ModuleLoadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.ModuleLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleLoadRequest::CopyFrom(const ModuleLoadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.ModuleLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleLoadRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (_internal_has_module_handle()) {
    if (!module_handle_->IsInitialized()) return false;
  }
  return true;
}

void ModuleLoadRequest::InternalSwap(ModuleLoadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(module_handle_, other->module_handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleLoadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModuleNotification::InitAsDefaultInstance() {
}
class ModuleNotification::_Internal {
 public:
  using HasBits = decltype(std::declval<ModuleNotification>()._has_bits_);
  static void set_has_module_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ModuleNotification::ModuleNotification()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.ModuleNotification)
}
ModuleNotification::ModuleNotification(const ModuleNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&module_id_, &from.module_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&module_id_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.ModuleNotification)
}

void ModuleNotification::SharedCtor() {
  ::memset(&module_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&module_id_)) + sizeof(result_));
}

ModuleNotification::~ModuleNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.ModuleNotification)
  SharedDtor();
}

void ModuleNotification::SharedDtor() {
}

void ModuleNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModuleNotification& ModuleNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModuleNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModuleNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.ModuleNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&module_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&module_id_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ModuleNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 module_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_module_id(&has_bits);
          module_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModuleNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.ModuleNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 module_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_module_id(), target);
  }

  // optional uint32 result = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.ModuleNotification)
  return target;
}

size_t ModuleNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.ModuleNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 module_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_module_id());
    }

    // optional uint32 result = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.ModuleNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModuleNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.ModuleNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.ModuleNotification)
    MergeFrom(*source);
  }
}

void ModuleNotification::MergeFrom(const ModuleNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.ModuleNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      module_id_ = from.module_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ModuleNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.ModuleNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleNotification::CopyFrom(const ModuleNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.ModuleNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleNotification::IsInitialized() const {
  return true;
}

void ModuleNotification::InternalSwap(ModuleNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(module_id_, other->module_id_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModuleMessageRequest::InitAsDefaultInstance() {
}
class ModuleMessageRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ModuleMessageRequest>()._has_bits_);
  static void set_has_module_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ModuleMessageRequest::ModuleMessageRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.ModuleMessageRequest)
}
ModuleMessageRequest::ModuleMessageRequest(const ModuleMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_message()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  module_id_ = from.module_id_;
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.ModuleMessageRequest)
}

void ModuleMessageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModuleMessageRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  module_id_ = 0;
}

ModuleMessageRequest::~ModuleMessageRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.ModuleMessageRequest)
  SharedDtor();
}

void ModuleMessageRequest::SharedDtor() {
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModuleMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModuleMessageRequest& ModuleMessageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModuleMessageRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ModuleMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.ModuleMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  module_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ModuleMessageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int32 module_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_module_id(&has_bits);
          module_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModuleMessageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.ModuleMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 module_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_module_id(), target);
  }

  // optional bytes message = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.ModuleMessageRequest)
  return target;
}

size_t ModuleMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.ModuleMessageRequest)
  size_t total_size = 0;

  // required int32 module_id = 1;
  if (_internal_has_module_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_module_id());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes message = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleMessageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.ModuleMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleMessageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModuleMessageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.ModuleMessageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.ModuleMessageRequest)
    MergeFrom(*source);
  }
}

void ModuleMessageRequest::MergeFrom(const ModuleMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.ModuleMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      module_id_ = from.module_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ModuleMessageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.ModuleMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleMessageRequest::CopyFrom(const ModuleMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.ModuleMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleMessageRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void ModuleMessageRequest::InternalSwap(ModuleMessageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(module_id_, other->module_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleMessageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogonRequest::InitAsDefaultInstance() {
}
class LogonRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<LogonRequest>()._has_bits_);
  static void set_has_program(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_platform(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_locale(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_email(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_application_version(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_public_computer(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_allow_logon_queue_notifications(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_cached_web_credentials(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_user_agent(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_device_id(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

LogonRequest::LogonRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.LogonRequest)
}
LogonRequest::LogonRequest(const LogonRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  program_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_program()) {
    program_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  platform_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_platform()) {
    platform_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  locale_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_locale()) {
    locale_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_email()) {
    email_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  cached_web_credentials_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_cached_web_credentials()) {
    cached_web_credentials_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cached_web_credentials_);
  }
  user_agent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_user_agent()) {
    user_agent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_agent_);
  }
  device_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_device_id()) {
    device_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  ::memcpy(&application_version_, &from.application_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&allow_logon_queue_notifications_) -
    reinterpret_cast<char*>(&application_version_)) + sizeof(allow_logon_queue_notifications_));
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.LogonRequest)
}

void LogonRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LogonRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  program_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  locale_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cached_web_credentials_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_agent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&application_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_logon_queue_notifications_) -
      reinterpret_cast<char*>(&application_version_)) + sizeof(allow_logon_queue_notifications_));
}

LogonRequest::~LogonRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.LogonRequest)
  SharedDtor();
}

void LogonRequest::SharedDtor() {
  program_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  locale_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cached_web_credentials_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_agent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LogonRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogonRequest& LogonRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogonRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LogonRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.LogonRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      program_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      platform_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      locale_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      email_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      cached_web_credentials_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      user_agent_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      device_id_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&application_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&allow_logon_queue_notifications_) -
        reinterpret_cast<char*>(&application_version_)) + sizeof(allow_logon_queue_notifications_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* LogonRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string program = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_program();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonRequest.program");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string platform = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_platform();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonRequest.platform");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string locale = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_locale();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonRequest.locale");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string email = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonRequest.email");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonRequest.version");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 application_version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_application_version(&has_bits);
          application_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool public_computer = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_public_computer(&has_bits);
          public_computer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool allow_logon_queue_notifications = 10 [default = false];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_allow_logon_queue_notifications(&has_bits);
          allow_logon_queue_notifications_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes cached_web_credentials = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_cached_web_credentials();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string user_agent = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_user_agent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonRequest.user_agent");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string device_id = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_device_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonRequest.device_id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogonRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.LogonRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string program = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_program().data(), static_cast<int>(this->_internal_program().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonRequest.program");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_program(), target);
  }

  // optional string platform = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonRequest.platform");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_platform(), target);
  }

  // optional string locale = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_locale().data(), static_cast<int>(this->_internal_locale().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonRequest.locale");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_locale(), target);
  }

  // optional string email = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonRequest.email");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_email(), target);
  }

  // optional string version = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonRequest.version");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_version(), target);
  }

  // optional int32 application_version = 6;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_application_version(), target);
  }

  // optional bool public_computer = 7;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_public_computer(), target);
  }

  // optional bool allow_logon_queue_notifications = 10 [default = false];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_allow_logon_queue_notifications(), target);
  }

  // optional bytes cached_web_credentials = 12;
  if (cached_has_bits & 0x00000020u) {
    target = stream->WriteBytesMaybeAliased(
        12, this->_internal_cached_web_credentials(), target);
  }

  // optional string user_agent = 14;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_user_agent().data(), static_cast<int>(this->_internal_user_agent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonRequest.user_agent");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_user_agent(), target);
  }

  // optional string device_id = 15;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_device_id().data(), static_cast<int>(this->_internal_device_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonRequest.device_id");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_device_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.LogonRequest)
  return target;
}

size_t LogonRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.LogonRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string program = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_program());
    }

    // optional string platform = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_platform());
    }

    // optional string locale = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_locale());
    }

    // optional string email = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_email());
    }

    // optional string version = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_version());
    }

    // optional bytes cached_web_credentials = 12;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_cached_web_credentials());
    }

    // optional string user_agent = 14;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_user_agent());
    }

    // optional string device_id = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_device_id());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional int32 application_version = 6;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_application_version());
    }

    // optional bool public_computer = 7;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool allow_logon_queue_notifications = 10 [default = false];
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogonRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.LogonRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LogonRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogonRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.LogonRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.LogonRequest)
    MergeFrom(*source);
  }
}

void LogonRequest::MergeFrom(const LogonRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.LogonRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      program_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.program_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      platform_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.platform_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      locale_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.locale_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      email_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      version_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      cached_web_credentials_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cached_web_credentials_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      user_agent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_agent_);
    }
    if (cached_has_bits & 0x00000080u) {
      _has_bits_[0] |= 0x00000080u;
      device_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_id_);
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      application_version_ = from.application_version_;
    }
    if (cached_has_bits & 0x00000200u) {
      public_computer_ = from.public_computer_;
    }
    if (cached_has_bits & 0x00000400u) {
      allow_logon_queue_notifications_ = from.allow_logon_queue_notifications_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LogonRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.LogonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogonRequest::CopyFrom(const LogonRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.LogonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogonRequest::IsInitialized() const {
  return true;
}

void LogonRequest::InternalSwap(LogonRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  program_.Swap(&other->program_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platform_.Swap(&other->platform_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  locale_.Swap(&other->locale_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cached_web_credentials_.Swap(&other->cached_web_credentials_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_agent_.Swap(&other->user_agent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_id_.Swap(&other->device_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(application_version_, other->application_version_);
  swap(public_computer_, other->public_computer_);
  swap(allow_logon_queue_notifications_, other->allow_logon_queue_notifications_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogonRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogonResult::InitAsDefaultInstance() {
  ::bgs::protocol::authentication::v1::_LogonResult_default_instance_._instance.get_mutable()->account_id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
}
class LogonResult::_Internal {
 public:
  using HasBits = decltype(std::declval<LogonResult>()._has_bits_);
  static void set_has_error_code(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::bgs::protocol::EntityId& account_id(const LogonResult* msg);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_email(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_connected_region(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_battle_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_geoip_country(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_session_key(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_restricted_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_client_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::bgs::protocol::EntityId&
LogonResult::_Internal::account_id(const LogonResult* msg) {
  return *msg->account_id_;
}
void LogonResult::clear_account_id() {
  if (account_id_ != nullptr) account_id_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void LogonResult::clear_game_account_id() {
  game_account_id_.Clear();
}
LogonResult::LogonResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.LogonResult)
}
LogonResult::LogonResult(const LogonResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      game_account_id_(from.game_account_id_),
      available_region_(from.available_region_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_email()) {
    email_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  battle_tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_battle_tag()) {
    battle_tag_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.battle_tag_);
  }
  geoip_country_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_geoip_country()) {
    geoip_country_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.geoip_country_);
  }
  session_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_session_key()) {
    session_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.session_key_);
  }
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_id()) {
    client_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from._internal_has_account_id()) {
    account_id_ = new ::bgs::protocol::EntityId(*from.account_id_);
  } else {
    account_id_ = nullptr;
  }
  ::memcpy(&error_code_, &from.error_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&restricted_mode_) -
    reinterpret_cast<char*>(&error_code_)) + sizeof(restricted_mode_));
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.LogonResult)
}

void LogonResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LogonResult_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  battle_tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  geoip_country_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&restricted_mode_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(restricted_mode_));
}

LogonResult::~LogonResult() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.LogonResult)
  SharedDtor();
}

void LogonResult::SharedDtor() {
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  battle_tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  geoip_country_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete account_id_;
}

void LogonResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogonResult& LogonResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogonResult_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LogonResult::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.LogonResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  game_account_id_.Clear();
  available_region_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      email_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      battle_tag_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      geoip_country_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      session_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      client_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(account_id_ != nullptr);
      account_id_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&error_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&connected_region_) -
        reinterpret_cast<char*>(&error_code_)) + sizeof(connected_region_));
  }
  restricted_mode_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* LogonResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_error_code(&has_bits);
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.EntityId account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_account_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bgs.protocol.EntityId game_account_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_game_account_id(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // optional string email = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonResult.email");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 available_region = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_available_region(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<40>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_available_region(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 connected_region = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_connected_region(&has_bits);
          connected_region_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string battle_tag = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_battle_tag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonResult.battle_tag");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string geoip_country = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_geoip_country();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonResult.geoip_country");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes session_key = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_session_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool restricted_mode = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_restricted_mode(&has_bits);
          restricted_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string client_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.LogonResult.client_id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogonResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.LogonResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 error_code = 1;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_error_code(), target);
  }

  // optional .bgs.protocol.EntityId account_id = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::account_id(this), target, stream);
  }

  // repeated .bgs.protocol.EntityId game_account_id = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_game_account_id_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_game_account_id(i), target, stream);
  }

  // optional string email = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonResult.email");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_email(), target);
  }

  // repeated uint32 available_region = 5;
  for (int i = 0, n = this->_internal_available_region_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_available_region(i), target);
  }

  // optional uint32 connected_region = 6;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_connected_region(), target);
  }

  // optional string battle_tag = 7;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_battle_tag().data(), static_cast<int>(this->_internal_battle_tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonResult.battle_tag");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_battle_tag(), target);
  }

  // optional string geoip_country = 8;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_geoip_country().data(), static_cast<int>(this->_internal_geoip_country().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonResult.geoip_country");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_geoip_country(), target);
  }

  // optional bytes session_key = 9;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_session_key(), target);
  }

  // optional bool restricted_mode = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_restricted_mode(), target);
  }

  // optional string client_id = 11;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.LogonResult.client_id");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_client_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.LogonResult)
  return target;
}

size_t LogonResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.LogonResult)
  size_t total_size = 0;

  // required uint32 error_code = 1;
  if (_internal_has_error_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bgs.protocol.EntityId game_account_id = 3;
  total_size += 1UL * this->_internal_game_account_id_size();
  for (const auto& msg : this->game_account_id_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint32 available_region = 5;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->available_region_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_available_region_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string email = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_email());
    }

    // optional string battle_tag = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_battle_tag());
    }

    // optional string geoip_country = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_geoip_country());
    }

    // optional bytes session_key = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_session_key());
    }

    // optional string client_id = 11;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_id());
    }

    // optional .bgs.protocol.EntityId account_id = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *account_id_);
    }

  }
  // optional uint32 connected_region = 6;
  if (cached_has_bits & 0x00000080u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_connected_region());
  }

  // optional bool restricted_mode = 10;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogonResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.LogonResult)
  GOOGLE_DCHECK_NE(&from, this);
  const LogonResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogonResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.LogonResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.LogonResult)
    MergeFrom(*source);
  }
}

void LogonResult::MergeFrom(const LogonResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.LogonResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  game_account_id_.MergeFrom(from.game_account_id_);
  available_region_.MergeFrom(from.available_region_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      email_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      battle_tag_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.battle_tag_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      geoip_country_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.geoip_country_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      session_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.session_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      client_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.client_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_account_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_account_id());
    }
    if (cached_has_bits & 0x00000040u) {
      error_code_ = from.error_code_;
    }
    if (cached_has_bits & 0x00000080u) {
      connected_region_ = from.connected_region_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_restricted_mode(from._internal_restricted_mode());
  }
}

void LogonResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.LogonResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogonResult::CopyFrom(const LogonResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.LogonResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogonResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000040) != 0x00000040) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(game_account_id_)) return false;
  if (_internal_has_account_id()) {
    if (!account_id_->IsInitialized()) return false;
  }
  return true;
}

void LogonResult::InternalSwap(LogonResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  game_account_id_.InternalSwap(&other->game_account_id_);
  available_region_.InternalSwap(&other->available_region_);
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  battle_tag_.Swap(&other->battle_tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  geoip_country_.Swap(&other->geoip_country_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_key_.Swap(&other->session_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(account_id_, other->account_id_);
  swap(error_code_, other->error_code_);
  swap(connected_region_, other->connected_region_);
  swap(restricted_mode_, other->restricted_mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogonResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenerateSSOTokenRequest::InitAsDefaultInstance() {
}
class GenerateSSOTokenRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GenerateSSOTokenRequest>()._has_bits_);
  static void set_has_program(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GenerateSSOTokenRequest::GenerateSSOTokenRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
}
GenerateSSOTokenRequest::GenerateSSOTokenRequest(const GenerateSSOTokenRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  program_ = from.program_;
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
}

void GenerateSSOTokenRequest::SharedCtor() {
  program_ = 0u;
}

GenerateSSOTokenRequest::~GenerateSSOTokenRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
  SharedDtor();
}

void GenerateSSOTokenRequest::SharedDtor() {
}

void GenerateSSOTokenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateSSOTokenRequest& GenerateSSOTokenRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenerateSSOTokenRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GenerateSSOTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  program_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GenerateSSOTokenRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed32 program = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          _Internal::set_has_program(&has_bits);
          program_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerateSSOTokenRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 program = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(1, this->_internal_program(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
  return target;
}

size_t GenerateSSOTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed32 program = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateSSOTokenRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateSSOTokenRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerateSSOTokenRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
    MergeFrom(*source);
  }
}

void GenerateSSOTokenRequest::MergeFrom(const GenerateSSOTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_program()) {
    _internal_set_program(from._internal_program());
  }
}

void GenerateSSOTokenRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateSSOTokenRequest::CopyFrom(const GenerateSSOTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateSSOTokenRequest::IsInitialized() const {
  return true;
}

void GenerateSSOTokenRequest::InternalSwap(GenerateSSOTokenRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(program_, other->program_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerateSSOTokenRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenerateSSOTokenResponse::InitAsDefaultInstance() {
}
class GenerateSSOTokenResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GenerateSSOTokenResponse>()._has_bits_);
  static void set_has_sso_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_sso_secret(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GenerateSSOTokenResponse::GenerateSSOTokenResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
}
GenerateSSOTokenResponse::GenerateSSOTokenResponse(const GenerateSSOTokenResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sso_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sso_id()) {
    sso_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sso_id_);
  }
  sso_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sso_secret()) {
    sso_secret_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sso_secret_);
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
}

void GenerateSSOTokenResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenerateSSOTokenResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  sso_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sso_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GenerateSSOTokenResponse::~GenerateSSOTokenResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
  SharedDtor();
}

void GenerateSSOTokenResponse::SharedDtor() {
  sso_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sso_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenerateSSOTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateSSOTokenResponse& GenerateSSOTokenResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenerateSSOTokenResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GenerateSSOTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      sso_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sso_secret_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GenerateSSOTokenResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes sso_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sso_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sso_secret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sso_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerateSSOTokenResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sso_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_sso_id(), target);
  }

  // optional bytes sso_secret = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_sso_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
  return target;
}

size_t GenerateSSOTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes sso_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sso_id());
    }

    // optional bytes sso_secret = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sso_secret());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateSSOTokenResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateSSOTokenResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerateSSOTokenResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
    MergeFrom(*source);
  }
}

void GenerateSSOTokenResponse::MergeFrom(const GenerateSSOTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      sso_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sso_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      sso_secret_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sso_secret_);
    }
  }
}

void GenerateSSOTokenResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateSSOTokenResponse::CopyFrom(const GenerateSSOTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateSSOTokenResponse::IsInitialized() const {
  return true;
}

void GenerateSSOTokenResponse::InternalSwap(GenerateSSOTokenResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  sso_id_.Swap(&other->sso_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sso_secret_.Swap(&other->sso_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerateSSOTokenResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogonUpdateRequest::InitAsDefaultInstance() {
}
class LogonUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<LogonUpdateRequest>()._has_bits_);
  static void set_has_error_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

LogonUpdateRequest::LogonUpdateRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.LogonUpdateRequest)
}
LogonUpdateRequest::LogonUpdateRequest(const LogonUpdateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.LogonUpdateRequest)
}

void LogonUpdateRequest::SharedCtor() {
  error_code_ = 0u;
}

LogonUpdateRequest::~LogonUpdateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.LogonUpdateRequest)
  SharedDtor();
}

void LogonUpdateRequest::SharedDtor() {
}

void LogonUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogonUpdateRequest& LogonUpdateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogonUpdateRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LogonUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.LogonUpdateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_code_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* LogonUpdateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_error_code(&has_bits);
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogonUpdateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.LogonUpdateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 error_code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_error_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.LogonUpdateRequest)
  return target;
}

size_t LogonUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.LogonUpdateRequest)
  size_t total_size = 0;

  // required uint32 error_code = 1;
  if (_internal_has_error_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogonUpdateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.LogonUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LogonUpdateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogonUpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.LogonUpdateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.LogonUpdateRequest)
    MergeFrom(*source);
  }
}

void LogonUpdateRequest::MergeFrom(const LogonUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.LogonUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error_code()) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void LogonUpdateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.LogonUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogonUpdateRequest::CopyFrom(const LogonUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.LogonUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogonUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LogonUpdateRequest::InternalSwap(LogonUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogonUpdateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogonQueueUpdateRequest::InitAsDefaultInstance() {
}
class LogonQueueUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<LogonQueueUpdateRequest>()._has_bits_);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_estimated_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_eta_deviation_in_sec(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

LogonQueueUpdateRequest::LogonQueueUpdateRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
}
LogonQueueUpdateRequest::LogonQueueUpdateRequest(const LogonQueueUpdateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&estimated_time_, &from.estimated_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&estimated_time_)) + sizeof(position_));
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
}

void LogonQueueUpdateRequest::SharedCtor() {
  ::memset(&estimated_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&estimated_time_)) + sizeof(position_));
}

LogonQueueUpdateRequest::~LogonQueueUpdateRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
  SharedDtor();
}

void LogonQueueUpdateRequest::SharedDtor() {
}

void LogonQueueUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogonQueueUpdateRequest& LogonQueueUpdateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogonQueueUpdateRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LogonQueueUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&estimated_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&position_) -
        reinterpret_cast<char*>(&estimated_time_)) + sizeof(position_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* LogonQueueUpdateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_position(&has_bits);
          position_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint64 estimated_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_estimated_time(&has_bits);
          estimated_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint64 eta_deviation_in_sec = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_eta_deviation_in_sec(&has_bits);
          eta_deviation_in_sec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogonQueueUpdateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 position = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_position(), target);
  }

  // required uint64 estimated_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_estimated_time(), target);
  }

  // required uint64 eta_deviation_in_sec = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_eta_deviation_in_sec(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
  return target;
}

size_t LogonQueueUpdateRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
  size_t total_size = 0;

  if (_internal_has_estimated_time()) {
    // required uint64 estimated_time = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_estimated_time());
  }

  if (_internal_has_eta_deviation_in_sec()) {
    // required uint64 eta_deviation_in_sec = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_eta_deviation_in_sec());
  }

  if (_internal_has_position()) {
    // required uint32 position = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_position());
  }

  return total_size;
}
size_t LogonQueueUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 estimated_time = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_estimated_time());

    // required uint64 eta_deviation_in_sec = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_eta_deviation_in_sec());

    // required uint32 position = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_position());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogonQueueUpdateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LogonQueueUpdateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogonQueueUpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
    MergeFrom(*source);
  }
}

void LogonQueueUpdateRequest::MergeFrom(const LogonQueueUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      estimated_time_ = from.estimated_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      eta_deviation_in_sec_ = from.eta_deviation_in_sec_;
    }
    if (cached_has_bits & 0x00000004u) {
      position_ = from.position_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LogonQueueUpdateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogonQueueUpdateRequest::CopyFrom(const LogonQueueUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogonQueueUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void LogonQueueUpdateRequest::InternalSwap(LogonQueueUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(estimated_time_, other->estimated_time_);
  swap(eta_deviation_in_sec_, other->eta_deviation_in_sec_);
  swap(position_, other->position_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogonQueueUpdateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountSettingsNotification::InitAsDefaultInstance() {
}
class AccountSettingsNotification::_Internal {
 public:
  using HasBits = decltype(std::declval<AccountSettingsNotification>()._has_bits_);
  static void set_has_is_using_rid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_playing_from_igr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_can_receive_voice(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_can_send_voice(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

void AccountSettingsNotification::clear_licenses() {
  licenses_.Clear();
}
AccountSettingsNotification::AccountSettingsNotification()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.AccountSettingsNotification)
}
AccountSettingsNotification::AccountSettingsNotification(const AccountSettingsNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      licenses_(from.licenses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_using_rid_, &from.is_using_rid_,
    static_cast<size_t>(reinterpret_cast<char*>(&can_send_voice_) -
    reinterpret_cast<char*>(&is_using_rid_)) + sizeof(can_send_voice_));
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.AccountSettingsNotification)
}

void AccountSettingsNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccountSettingsNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  ::memset(&is_using_rid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_send_voice_) -
      reinterpret_cast<char*>(&is_using_rid_)) + sizeof(can_send_voice_));
}

AccountSettingsNotification::~AccountSettingsNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.AccountSettingsNotification)
  SharedDtor();
}

void AccountSettingsNotification::SharedDtor() {
}

void AccountSettingsNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountSettingsNotification& AccountSettingsNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountSettingsNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AccountSettingsNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.AccountSettingsNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  licenses_.Clear();
  ::memset(&is_using_rid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_send_voice_) -
      reinterpret_cast<char*>(&is_using_rid_)) + sizeof(can_send_voice_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* AccountSettingsNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bgs.protocol.account.v1.AccountLicense licenses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_licenses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool is_using_rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_is_using_rid(&has_bits);
          is_using_rid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_playing_from_igr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_is_playing_from_igr(&has_bits);
          is_playing_from_igr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool can_receive_voice = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_can_receive_voice(&has_bits);
          can_receive_voice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool can_send_voice = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_can_send_voice(&has_bits);
          can_send_voice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountSettingsNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.AccountSettingsNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bgs.protocol.account.v1.AccountLicense licenses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_licenses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_licenses(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool is_using_rid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_is_using_rid(), target);
  }

  // optional bool is_playing_from_igr = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_playing_from_igr(), target);
  }

  // optional bool can_receive_voice = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_can_receive_voice(), target);
  }

  // optional bool can_send_voice = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_can_send_voice(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.AccountSettingsNotification)
  return target;
}

size_t AccountSettingsNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.AccountSettingsNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bgs.protocol.account.v1.AccountLicense licenses = 1;
  total_size += 1UL * this->_internal_licenses_size();
  for (const auto& msg : this->licenses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bool is_using_rid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool is_playing_from_igr = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool can_receive_voice = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool can_send_voice = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountSettingsNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.AccountSettingsNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountSettingsNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountSettingsNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.AccountSettingsNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.AccountSettingsNotification)
    MergeFrom(*source);
  }
}

void AccountSettingsNotification::MergeFrom(const AccountSettingsNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.AccountSettingsNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  licenses_.MergeFrom(from.licenses_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      is_using_rid_ = from.is_using_rid_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_playing_from_igr_ = from.is_playing_from_igr_;
    }
    if (cached_has_bits & 0x00000004u) {
      can_receive_voice_ = from.can_receive_voice_;
    }
    if (cached_has_bits & 0x00000008u) {
      can_send_voice_ = from.can_send_voice_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AccountSettingsNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.AccountSettingsNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountSettingsNotification::CopyFrom(const AccountSettingsNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.AccountSettingsNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountSettingsNotification::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(licenses_)) return false;
  return true;
}

void AccountSettingsNotification::InternalSwap(AccountSettingsNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  licenses_.InternalSwap(&other->licenses_);
  swap(is_using_rid_, other->is_using_rid_);
  swap(is_playing_from_igr_, other->is_playing_from_igr_);
  swap(can_receive_voice_, other->can_receive_voice_);
  swap(can_send_voice_, other->can_send_voice_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountSettingsNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerStateChangeRequest::InitAsDefaultInstance() {
}
class ServerStateChangeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ServerStateChangeRequest>()._has_bits_);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_event_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ServerStateChangeRequest::ServerStateChangeRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.ServerStateChangeRequest)
}
ServerStateChangeRequest::ServerStateChangeRequest(const ServerStateChangeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&event_time_, &from.event_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&event_time_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.ServerStateChangeRequest)
}

void ServerStateChangeRequest::SharedCtor() {
  ::memset(&event_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&event_time_)) + sizeof(state_));
}

ServerStateChangeRequest::~ServerStateChangeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.ServerStateChangeRequest)
  SharedDtor();
}

void ServerStateChangeRequest::SharedDtor() {
}

void ServerStateChangeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerStateChangeRequest& ServerStateChangeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerStateChangeRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerStateChangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.ServerStateChangeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&event_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&event_time_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ServerStateChangeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_state(&has_bits);
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint64 event_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_event_time(&has_bits);
          event_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerStateChangeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.ServerStateChangeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 state = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_state(), target);
  }

  // required uint64 event_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_event_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.ServerStateChangeRequest)
  return target;
}

size_t ServerStateChangeRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bgs.protocol.authentication.v1.ServerStateChangeRequest)
  size_t total_size = 0;

  if (_internal_has_event_time()) {
    // required uint64 event_time = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_event_time());
  }

  if (_internal_has_state()) {
    // required uint32 state = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_state());
  }

  return total_size;
}
size_t ServerStateChangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.ServerStateChangeRequest)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 event_time = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_event_time());

    // required uint32 state = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerStateChangeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.ServerStateChangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerStateChangeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerStateChangeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.ServerStateChangeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.ServerStateChangeRequest)
    MergeFrom(*source);
  }
}

void ServerStateChangeRequest::MergeFrom(const ServerStateChangeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.ServerStateChangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      event_time_ = from.event_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServerStateChangeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.ServerStateChangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerStateChangeRequest::CopyFrom(const ServerStateChangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.ServerStateChangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerStateChangeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ServerStateChangeRequest::InternalSwap(ServerStateChangeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(event_time_, other->event_time_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerStateChangeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VersionInfo::InitAsDefaultInstance() {
}
class VersionInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<VersionInfo>()._has_bits_);
  static void set_has_number(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_patch(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_optional(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_kick_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

VersionInfo::VersionInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.VersionInfo)
}
VersionInfo::VersionInfo(const VersionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  patch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_patch()) {
    patch_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.patch_);
  }
  ::memcpy(&number_, &from.number_,
    static_cast<size_t>(reinterpret_cast<char*>(&kick_time_) -
    reinterpret_cast<char*>(&number_)) + sizeof(kick_time_));
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.VersionInfo)
}

void VersionInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VersionInfo_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  patch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kick_time_) -
      reinterpret_cast<char*>(&number_)) + sizeof(kick_time_));
}

VersionInfo::~VersionInfo() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.VersionInfo)
  SharedDtor();
}

void VersionInfo::SharedDtor() {
  patch_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VersionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VersionInfo& VersionInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VersionInfo_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void VersionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.VersionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    patch_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&kick_time_) -
        reinterpret_cast<char*>(&number_)) + sizeof(kick_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* VersionInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_number(&has_bits);
          number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string patch = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_patch();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.authentication.v1.VersionInfo.patch");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_optional = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_is_optional(&has_bits);
          is_optional_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 kick_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_kick_time(&has_bits);
          kick_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VersionInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.VersionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 number = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_number(), target);
  }

  // optional string patch = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_patch().data(), static_cast<int>(this->_internal_patch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.authentication.v1.VersionInfo.patch");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_patch(), target);
  }

  // optional bool is_optional = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_optional(), target);
  }

  // optional uint64 kick_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_kick_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.VersionInfo)
  return target;
}

size_t VersionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.VersionInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string patch = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_patch());
    }

    // optional uint32 number = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_number());
    }

    // optional bool is_optional = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional uint64 kick_time = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_kick_time());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.VersionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VersionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.VersionInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.VersionInfo)
    MergeFrom(*source);
  }
}

void VersionInfo::MergeFrom(const VersionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.VersionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      patch_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.patch_);
    }
    if (cached_has_bits & 0x00000002u) {
      number_ = from.number_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_optional_ = from.is_optional_;
    }
    if (cached_has_bits & 0x00000008u) {
      kick_time_ = from.kick_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VersionInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.VersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionInfo::CopyFrom(const VersionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.VersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionInfo::IsInitialized() const {
  return true;
}

void VersionInfo::InternalSwap(VersionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  patch_.Swap(&other->patch_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(number_, other->number_);
  swap(is_optional_, other->is_optional_);
  swap(kick_time_, other->kick_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VersionInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VersionInfoNotification::InitAsDefaultInstance() {
  ::bgs::protocol::authentication::v1::_VersionInfoNotification_default_instance_._instance.get_mutable()->version_info_ = const_cast< ::bgs::protocol::authentication::v1::VersionInfo*>(
      ::bgs::protocol::authentication::v1::VersionInfo::internal_default_instance());
}
class VersionInfoNotification::_Internal {
 public:
  using HasBits = decltype(std::declval<VersionInfoNotification>()._has_bits_);
  static const ::bgs::protocol::authentication::v1::VersionInfo& version_info(const VersionInfoNotification* msg);
  static void set_has_version_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::authentication::v1::VersionInfo&
VersionInfoNotification::_Internal::version_info(const VersionInfoNotification* msg) {
  return *msg->version_info_;
}
VersionInfoNotification::VersionInfoNotification()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.VersionInfoNotification)
}
VersionInfoNotification::VersionInfoNotification(const VersionInfoNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_version_info()) {
    version_info_ = new ::bgs::protocol::authentication::v1::VersionInfo(*from.version_info_);
  } else {
    version_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.VersionInfoNotification)
}

void VersionInfoNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VersionInfoNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  version_info_ = nullptr;
}

VersionInfoNotification::~VersionInfoNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.VersionInfoNotification)
  SharedDtor();
}

void VersionInfoNotification::SharedDtor() {
  if (this != internal_default_instance()) delete version_info_;
}

void VersionInfoNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VersionInfoNotification& VersionInfoNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VersionInfoNotification_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void VersionInfoNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.VersionInfoNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(version_info_ != nullptr);
    version_info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* VersionInfoNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .bgs.protocol.authentication.v1.VersionInfo version_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_version_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VersionInfoNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.VersionInfoNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.authentication.v1.VersionInfo version_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::version_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.VersionInfoNotification)
  return target;
}

size_t VersionInfoNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.VersionInfoNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .bgs.protocol.authentication.v1.VersionInfo version_info = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *version_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionInfoNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.VersionInfoNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionInfoNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VersionInfoNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.VersionInfoNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.VersionInfoNotification)
    MergeFrom(*source);
  }
}

void VersionInfoNotification::MergeFrom(const VersionInfoNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.VersionInfoNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_version_info()) {
    _internal_mutable_version_info()->::bgs::protocol::authentication::v1::VersionInfo::MergeFrom(from._internal_version_info());
  }
}

void VersionInfoNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.VersionInfoNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionInfoNotification::CopyFrom(const VersionInfoNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.VersionInfoNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionInfoNotification::IsInitialized() const {
  return true;
}

void VersionInfoNotification::InternalSwap(VersionInfoNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(version_info_, other->version_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VersionInfoNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MemModuleLoadRequest::InitAsDefaultInstance() {
  ::bgs::protocol::authentication::v1::_MemModuleLoadRequest_default_instance_._instance.get_mutable()->handle_ = const_cast< ::bgs::protocol::ContentHandle*>(
      ::bgs::protocol::ContentHandle::internal_default_instance());
}
class MemModuleLoadRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<MemModuleLoadRequest>()._has_bits_);
  static const ::bgs::protocol::ContentHandle& handle(const MemModuleLoadRequest* msg);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_input(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::bgs::protocol::ContentHandle&
MemModuleLoadRequest::_Internal::handle(const MemModuleLoadRequest* msg) {
  return *msg->handle_;
}
void MemModuleLoadRequest::clear_handle() {
  if (handle_ != nullptr) handle_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
MemModuleLoadRequest::MemModuleLoadRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.MemModuleLoadRequest)
}
MemModuleLoadRequest::MemModuleLoadRequest(const MemModuleLoadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_key()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  input_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_input()) {
    input_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  if (from._internal_has_handle()) {
    handle_ = new ::bgs::protocol::ContentHandle(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.MemModuleLoadRequest)
}

void MemModuleLoadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MemModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  handle_ = nullptr;
}

MemModuleLoadRequest::~MemModuleLoadRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.MemModuleLoadRequest)
  SharedDtor();
}

void MemModuleLoadRequest::SharedDtor() {
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete handle_;
}

void MemModuleLoadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MemModuleLoadRequest& MemModuleLoadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MemModuleLoadRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MemModuleLoadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.MemModuleLoadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      input_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(handle_ != nullptr);
      handle_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MemModuleLoadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .bgs.protocol.ContentHandle handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes input = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_input();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemModuleLoadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.MemModuleLoadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .bgs.protocol.ContentHandle handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  // required bytes key = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_key(), target);
  }

  // required bytes input = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_input(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.MemModuleLoadRequest)
  return target;
}

size_t MemModuleLoadRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bgs.protocol.authentication.v1.MemModuleLoadRequest)
  size_t total_size = 0;

  if (_internal_has_key()) {
    // required bytes key = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());
  }

  if (_internal_has_input()) {
    // required bytes input = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_input());
  }

  if (_internal_has_handle()) {
    // required .bgs.protocol.ContentHandle handle = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  return total_size;
}
size_t MemModuleLoadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.MemModuleLoadRequest)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes key = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());

    // required bytes input = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_input());

    // required .bgs.protocol.ContentHandle handle = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemModuleLoadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.MemModuleLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MemModuleLoadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MemModuleLoadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.MemModuleLoadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.MemModuleLoadRequest)
    MergeFrom(*source);
  }
}

void MemModuleLoadRequest::MergeFrom(const MemModuleLoadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.MemModuleLoadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      input_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_);
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_handle()->::bgs::protocol::ContentHandle::MergeFrom(from._internal_handle());
    }
  }
}

void MemModuleLoadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.MemModuleLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemModuleLoadRequest::CopyFrom(const MemModuleLoadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.MemModuleLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemModuleLoadRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (_internal_has_handle()) {
    if (!handle_->IsInitialized()) return false;
  }
  return true;
}

void MemModuleLoadRequest::InternalSwap(MemModuleLoadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_.Swap(&other->input_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(handle_, other->handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MemModuleLoadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MemModuleLoadResponse::InitAsDefaultInstance() {
}
class MemModuleLoadResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<MemModuleLoadResponse>()._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MemModuleLoadResponse::MemModuleLoadResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.MemModuleLoadResponse)
}
MemModuleLoadResponse::MemModuleLoadResponse(const MemModuleLoadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_data()) {
    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.MemModuleLoadResponse)
}

void MemModuleLoadResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MemModuleLoadResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MemModuleLoadResponse::~MemModuleLoadResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.MemModuleLoadResponse)
  SharedDtor();
}

void MemModuleLoadResponse::SharedDtor() {
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MemModuleLoadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MemModuleLoadResponse& MemModuleLoadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MemModuleLoadResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MemModuleLoadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.MemModuleLoadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MemModuleLoadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemModuleLoadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.MemModuleLoadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.MemModuleLoadResponse)
  return target;
}

size_t MemModuleLoadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.MemModuleLoadResponse)
  size_t total_size = 0;

  // required bytes data = 1;
  if (_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemModuleLoadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.MemModuleLoadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MemModuleLoadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MemModuleLoadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.MemModuleLoadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.MemModuleLoadResponse)
    MergeFrom(*source);
  }
}

void MemModuleLoadResponse::MergeFrom(const MemModuleLoadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.MemModuleLoadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _has_bits_[0] |= 0x00000001u;
    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void MemModuleLoadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.MemModuleLoadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemModuleLoadResponse::CopyFrom(const MemModuleLoadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.MemModuleLoadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemModuleLoadResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MemModuleLoadResponse::InternalSwap(MemModuleLoadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata MemModuleLoadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SelectGameAccountRequest::InitAsDefaultInstance() {
  ::bgs::protocol::authentication::v1::_SelectGameAccountRequest_default_instance_._instance.get_mutable()->game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
}
class SelectGameAccountRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SelectGameAccountRequest>()._has_bits_);
  static const ::bgs::protocol::EntityId& game_account_id(const SelectGameAccountRequest* msg);
  static void set_has_game_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::EntityId&
SelectGameAccountRequest::_Internal::game_account_id(const SelectGameAccountRequest* msg) {
  return *msg->game_account_id_;
}
void SelectGameAccountRequest::clear_game_account_id() {
  if (game_account_id_ != nullptr) game_account_id_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
SelectGameAccountRequest::SelectGameAccountRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.SelectGameAccountRequest)
}
SelectGameAccountRequest::SelectGameAccountRequest(const SelectGameAccountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_game_account_id()) {
    game_account_id_ = new ::bgs::protocol::EntityId(*from.game_account_id_);
  } else {
    game_account_id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.SelectGameAccountRequest)
}

void SelectGameAccountRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SelectGameAccountRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  game_account_id_ = nullptr;
}

SelectGameAccountRequest::~SelectGameAccountRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.SelectGameAccountRequest)
  SharedDtor();
}

void SelectGameAccountRequest::SharedDtor() {
  if (this != internal_default_instance()) delete game_account_id_;
}

void SelectGameAccountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SelectGameAccountRequest& SelectGameAccountRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SelectGameAccountRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SelectGameAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.SelectGameAccountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(game_account_id_ != nullptr);
    game_account_id_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* SelectGameAccountRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .bgs.protocol.EntityId game_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_game_account_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SelectGameAccountRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.SelectGameAccountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .bgs.protocol.EntityId game_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::game_account_id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.SelectGameAccountRequest)
  return target;
}

size_t SelectGameAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.SelectGameAccountRequest)
  size_t total_size = 0;

  // required .bgs.protocol.EntityId game_account_id = 1;
  if (_internal_has_game_account_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *game_account_id_);
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelectGameAccountRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.SelectGameAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectGameAccountRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SelectGameAccountRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.SelectGameAccountRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.SelectGameAccountRequest)
    MergeFrom(*source);
  }
}

void SelectGameAccountRequest::MergeFrom(const SelectGameAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.SelectGameAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_game_account_id()) {
    _internal_mutable_game_account_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_game_account_id());
  }
}

void SelectGameAccountRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.SelectGameAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectGameAccountRequest::CopyFrom(const SelectGameAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.SelectGameAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectGameAccountRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (_internal_has_game_account_id()) {
    if (!game_account_id_->IsInitialized()) return false;
  }
  return true;
}

void SelectGameAccountRequest::InternalSwap(SelectGameAccountRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(game_account_id_, other->game_account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SelectGameAccountRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GameAccountSelectedRequest::InitAsDefaultInstance() {
  ::bgs::protocol::authentication::v1::_GameAccountSelectedRequest_default_instance_._instance.get_mutable()->game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
}
class GameAccountSelectedRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GameAccountSelectedRequest>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::bgs::protocol::EntityId& game_account_id(const GameAccountSelectedRequest* msg);
  static void set_has_game_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::EntityId&
GameAccountSelectedRequest::_Internal::game_account_id(const GameAccountSelectedRequest* msg) {
  return *msg->game_account_id_;
}
void GameAccountSelectedRequest::clear_game_account_id() {
  if (game_account_id_ != nullptr) game_account_id_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
GameAccountSelectedRequest::GameAccountSelectedRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
}
GameAccountSelectedRequest::GameAccountSelectedRequest(const GameAccountSelectedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_game_account_id()) {
    game_account_id_ = new ::bgs::protocol::EntityId(*from.game_account_id_);
  } else {
    game_account_id_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
}

void GameAccountSelectedRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GameAccountSelectedRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  ::memset(&game_account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&game_account_id_)) + sizeof(result_));
}

GameAccountSelectedRequest::~GameAccountSelectedRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
  SharedDtor();
}

void GameAccountSelectedRequest::SharedDtor() {
  if (this != internal_default_instance()) delete game_account_id_;
}

void GameAccountSelectedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameAccountSelectedRequest& GameAccountSelectedRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GameAccountSelectedRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GameAccountSelectedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(game_account_id_ != nullptr);
    game_account_id_->Clear();
  }
  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GameAccountSelectedRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.EntityId game_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_game_account_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GameAccountSelectedRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_result(), target);
  }

  // optional .bgs.protocol.EntityId game_account_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::game_account_id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
  return target;
}

size_t GameAccountSelectedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
  size_t total_size = 0;

  // required uint32 result = 1;
  if (_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_result());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .bgs.protocol.EntityId game_account_id = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *game_account_id_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameAccountSelectedRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GameAccountSelectedRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GameAccountSelectedRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
    MergeFrom(*source);
  }
}

void GameAccountSelectedRequest::MergeFrom(const GameAccountSelectedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_game_account_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_game_account_id());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameAccountSelectedRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAccountSelectedRequest::CopyFrom(const GameAccountSelectedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAccountSelectedRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (_internal_has_game_account_id()) {
    if (!game_account_id_->IsInitialized()) return false;
  }
  return true;
}

void GameAccountSelectedRequest::InternalSwap(GameAccountSelectedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(game_account_id_, other->game_account_id_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GameAccountSelectedRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenerateWebCredentialsRequest::InitAsDefaultInstance() {
}
class GenerateWebCredentialsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GenerateWebCredentialsRequest>()._has_bits_);
  static void set_has_program(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GenerateWebCredentialsRequest::GenerateWebCredentialsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
}
GenerateWebCredentialsRequest::GenerateWebCredentialsRequest(const GenerateWebCredentialsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  program_ = from.program_;
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
}

void GenerateWebCredentialsRequest::SharedCtor() {
  program_ = 0u;
}

GenerateWebCredentialsRequest::~GenerateWebCredentialsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
  SharedDtor();
}

void GenerateWebCredentialsRequest::SharedDtor() {
}

void GenerateWebCredentialsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateWebCredentialsRequest& GenerateWebCredentialsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenerateWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GenerateWebCredentialsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  program_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GenerateWebCredentialsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed32 program = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          _Internal::set_has_program(&has_bits);
          program_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerateWebCredentialsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 program = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(1, this->_internal_program(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
  return target;
}

size_t GenerateWebCredentialsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed32 program = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateWebCredentialsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateWebCredentialsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerateWebCredentialsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
    MergeFrom(*source);
  }
}

void GenerateWebCredentialsRequest::MergeFrom(const GenerateWebCredentialsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_program()) {
    _internal_set_program(from._internal_program());
  }
}

void GenerateWebCredentialsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateWebCredentialsRequest::CopyFrom(const GenerateWebCredentialsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateWebCredentialsRequest::IsInitialized() const {
  return true;
}

void GenerateWebCredentialsRequest::InternalSwap(GenerateWebCredentialsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(program_, other->program_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerateWebCredentialsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenerateWebCredentialsResponse::InitAsDefaultInstance() {
}
class GenerateWebCredentialsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GenerateWebCredentialsResponse>()._has_bits_);
  static void set_has_web_credentials(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GenerateWebCredentialsResponse::GenerateWebCredentialsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
}
GenerateWebCredentialsResponse::GenerateWebCredentialsResponse(const GenerateWebCredentialsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  web_credentials_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_web_credentials()) {
    web_credentials_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.web_credentials_);
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
}

void GenerateWebCredentialsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenerateWebCredentialsResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  web_credentials_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GenerateWebCredentialsResponse::~GenerateWebCredentialsResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
  SharedDtor();
}

void GenerateWebCredentialsResponse::SharedDtor() {
  web_credentials_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenerateWebCredentialsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateWebCredentialsResponse& GenerateWebCredentialsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenerateWebCredentialsResponse_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GenerateWebCredentialsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    web_credentials_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GenerateWebCredentialsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes web_credentials = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_web_credentials();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerateWebCredentialsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes web_credentials = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_web_credentials(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
  return target;
}

size_t GenerateWebCredentialsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes web_credentials = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_web_credentials());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateWebCredentialsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateWebCredentialsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerateWebCredentialsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
    MergeFrom(*source);
  }
}

void GenerateWebCredentialsResponse::MergeFrom(const GenerateWebCredentialsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_web_credentials()) {
    _has_bits_[0] |= 0x00000001u;
    web_credentials_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.web_credentials_);
  }
}

void GenerateWebCredentialsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateWebCredentialsResponse::CopyFrom(const GenerateWebCredentialsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateWebCredentialsResponse::IsInitialized() const {
  return true;
}

void GenerateWebCredentialsResponse::InternalSwap(GenerateWebCredentialsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  web_credentials_.Swap(&other->web_credentials_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerateWebCredentialsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VerifyWebCredentialsRequest::InitAsDefaultInstance() {
}
class VerifyWebCredentialsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<VerifyWebCredentialsRequest>()._has_bits_);
  static void set_has_web_credentials(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

VerifyWebCredentialsRequest::VerifyWebCredentialsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
}
VerifyWebCredentialsRequest::VerifyWebCredentialsRequest(const VerifyWebCredentialsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  web_credentials_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_web_credentials()) {
    web_credentials_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.web_credentials_);
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
}

void VerifyWebCredentialsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VerifyWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  web_credentials_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VerifyWebCredentialsRequest::~VerifyWebCredentialsRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
  SharedDtor();
}

void VerifyWebCredentialsRequest::SharedDtor() {
  web_credentials_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VerifyWebCredentialsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifyWebCredentialsRequest& VerifyWebCredentialsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VerifyWebCredentialsRequest_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.base);
  return *internal_default_instance();
}


void VerifyWebCredentialsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    web_credentials_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* VerifyWebCredentialsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes web_credentials = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_web_credentials();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VerifyWebCredentialsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes web_credentials = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_web_credentials(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
  return target;
}

size_t VerifyWebCredentialsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes web_credentials = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_web_credentials());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyWebCredentialsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyWebCredentialsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VerifyWebCredentialsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
    MergeFrom(*source);
  }
}

void VerifyWebCredentialsRequest::MergeFrom(const VerifyWebCredentialsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_web_credentials()) {
    _has_bits_[0] |= 0x00000001u;
    web_credentials_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.web_credentials_);
  }
}

void VerifyWebCredentialsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyWebCredentialsRequest::CopyFrom(const VerifyWebCredentialsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyWebCredentialsRequest::IsInitialized() const {
  return true;
}

void VerifyWebCredentialsRequest::InternalSwap(VerifyWebCredentialsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  web_credentials_.Swap(&other->web_credentials_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata VerifyWebCredentialsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace authentication
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::ModuleLoadRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::ModuleLoadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::ModuleLoadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::ModuleNotification* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::ModuleNotification >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::ModuleNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::ModuleMessageRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::ModuleMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::ModuleMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::LogonRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::LogonRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::LogonRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::LogonResult* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::LogonResult >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::LogonResult >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::GenerateSSOTokenRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::GenerateSSOTokenRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::GenerateSSOTokenRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::GenerateSSOTokenResponse* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::GenerateSSOTokenResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::GenerateSSOTokenResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::LogonUpdateRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::LogonUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::LogonUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::LogonQueueUpdateRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::LogonQueueUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::LogonQueueUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::AccountSettingsNotification* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::AccountSettingsNotification >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::AccountSettingsNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::ServerStateChangeRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::ServerStateChangeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::ServerStateChangeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::VersionInfo* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::VersionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::VersionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::VersionInfoNotification* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::VersionInfoNotification >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::VersionInfoNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::MemModuleLoadRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::MemModuleLoadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::MemModuleLoadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::MemModuleLoadResponse* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::MemModuleLoadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::MemModuleLoadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::SelectGameAccountRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::SelectGameAccountRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::SelectGameAccountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::GameAccountSelectedRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::GameAccountSelectedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::GameAccountSelectedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest* Arena::CreateMaybeMessage< ::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
