// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/authentication_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "bgs/low/pb/client/account_types.pb.h"
#include "bgs/low/pb/client/content_handle_types.pb.h"
#include "bgs/low/pb/client/entity_types.pb.h"
#include "bgs/low/pb/client/rpc_types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[20]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
namespace bgs {
namespace protocol {
namespace authentication {
namespace v1 {
class AccountSettingsNotification;
class AccountSettingsNotificationDefaultTypeInternal;
extern AccountSettingsNotificationDefaultTypeInternal _AccountSettingsNotification_default_instance_;
class GameAccountSelectedRequest;
class GameAccountSelectedRequestDefaultTypeInternal;
extern GameAccountSelectedRequestDefaultTypeInternal _GameAccountSelectedRequest_default_instance_;
class GenerateSSOTokenRequest;
class GenerateSSOTokenRequestDefaultTypeInternal;
extern GenerateSSOTokenRequestDefaultTypeInternal _GenerateSSOTokenRequest_default_instance_;
class GenerateSSOTokenResponse;
class GenerateSSOTokenResponseDefaultTypeInternal;
extern GenerateSSOTokenResponseDefaultTypeInternal _GenerateSSOTokenResponse_default_instance_;
class GenerateWebCredentialsRequest;
class GenerateWebCredentialsRequestDefaultTypeInternal;
extern GenerateWebCredentialsRequestDefaultTypeInternal _GenerateWebCredentialsRequest_default_instance_;
class GenerateWebCredentialsResponse;
class GenerateWebCredentialsResponseDefaultTypeInternal;
extern GenerateWebCredentialsResponseDefaultTypeInternal _GenerateWebCredentialsResponse_default_instance_;
class LogonQueueUpdateRequest;
class LogonQueueUpdateRequestDefaultTypeInternal;
extern LogonQueueUpdateRequestDefaultTypeInternal _LogonQueueUpdateRequest_default_instance_;
class LogonRequest;
class LogonRequestDefaultTypeInternal;
extern LogonRequestDefaultTypeInternal _LogonRequest_default_instance_;
class LogonResult;
class LogonResultDefaultTypeInternal;
extern LogonResultDefaultTypeInternal _LogonResult_default_instance_;
class LogonUpdateRequest;
class LogonUpdateRequestDefaultTypeInternal;
extern LogonUpdateRequestDefaultTypeInternal _LogonUpdateRequest_default_instance_;
class MemModuleLoadRequest;
class MemModuleLoadRequestDefaultTypeInternal;
extern MemModuleLoadRequestDefaultTypeInternal _MemModuleLoadRequest_default_instance_;
class MemModuleLoadResponse;
class MemModuleLoadResponseDefaultTypeInternal;
extern MemModuleLoadResponseDefaultTypeInternal _MemModuleLoadResponse_default_instance_;
class ModuleLoadRequest;
class ModuleLoadRequestDefaultTypeInternal;
extern ModuleLoadRequestDefaultTypeInternal _ModuleLoadRequest_default_instance_;
class ModuleMessageRequest;
class ModuleMessageRequestDefaultTypeInternal;
extern ModuleMessageRequestDefaultTypeInternal _ModuleMessageRequest_default_instance_;
class ModuleNotification;
class ModuleNotificationDefaultTypeInternal;
extern ModuleNotificationDefaultTypeInternal _ModuleNotification_default_instance_;
class SelectGameAccountRequest;
class SelectGameAccountRequestDefaultTypeInternal;
extern SelectGameAccountRequestDefaultTypeInternal _SelectGameAccountRequest_default_instance_;
class ServerStateChangeRequest;
class ServerStateChangeRequestDefaultTypeInternal;
extern ServerStateChangeRequestDefaultTypeInternal _ServerStateChangeRequest_default_instance_;
class VerifyWebCredentialsRequest;
class VerifyWebCredentialsRequestDefaultTypeInternal;
extern VerifyWebCredentialsRequestDefaultTypeInternal _VerifyWebCredentialsRequest_default_instance_;
class VersionInfo;
class VersionInfoDefaultTypeInternal;
extern VersionInfoDefaultTypeInternal _VersionInfo_default_instance_;
class VersionInfoNotification;
class VersionInfoNotificationDefaultTypeInternal;
extern VersionInfoNotificationDefaultTypeInternal _VersionInfoNotification_default_instance_;
}  // namespace v1
}  // namespace authentication
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> ::bgs::protocol::authentication::v1::AccountSettingsNotification* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::AccountSettingsNotification>(Arena*);
template<> ::bgs::protocol::authentication::v1::GameAccountSelectedRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::GameAccountSelectedRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::GenerateSSOTokenRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::GenerateSSOTokenRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::GenerateSSOTokenResponse* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::GenerateSSOTokenResponse>(Arena*);
template<> ::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::GenerateWebCredentialsRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::GenerateWebCredentialsResponse>(Arena*);
template<> ::bgs::protocol::authentication::v1::LogonQueueUpdateRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::LogonQueueUpdateRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::LogonRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::LogonRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::LogonResult* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::LogonResult>(Arena*);
template<> ::bgs::protocol::authentication::v1::LogonUpdateRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::LogonUpdateRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::MemModuleLoadRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::MemModuleLoadRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::MemModuleLoadResponse* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::MemModuleLoadResponse>(Arena*);
template<> ::bgs::protocol::authentication::v1::ModuleLoadRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::ModuleLoadRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::ModuleMessageRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::ModuleMessageRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::ModuleNotification* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::ModuleNotification>(Arena*);
template<> ::bgs::protocol::authentication::v1::SelectGameAccountRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::SelectGameAccountRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::ServerStateChangeRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::ServerStateChangeRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::VerifyWebCredentialsRequest>(Arena*);
template<> ::bgs::protocol::authentication::v1::VersionInfo* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::VersionInfo>(Arena*);
template<> ::bgs::protocol::authentication::v1::VersionInfoNotification* Arena::CreateMaybeMessage<::bgs::protocol::authentication::v1::VersionInfoNotification>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bgs {
namespace protocol {
namespace authentication {
namespace v1 {

// ===================================================================

class ModuleLoadRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.ModuleLoadRequest) */ {
 public:
  ModuleLoadRequest();
  virtual ~ModuleLoadRequest();

  ModuleLoadRequest(const ModuleLoadRequest& from);
  ModuleLoadRequest(ModuleLoadRequest&& from) noexcept
    : ModuleLoadRequest() {
    *this = ::std::move(from);
  }

  inline ModuleLoadRequest& operator=(const ModuleLoadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleLoadRequest& operator=(ModuleLoadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModuleLoadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModuleLoadRequest* internal_default_instance() {
    return reinterpret_cast<const ModuleLoadRequest*>(
               &_ModuleLoadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ModuleLoadRequest& a, ModuleLoadRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleLoadRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModuleLoadRequest* New() const final {
    return CreateMaybeMessage<ModuleLoadRequest>(nullptr);
  }

  ModuleLoadRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModuleLoadRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModuleLoadRequest& from);
  void MergeFrom(const ModuleLoadRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleLoadRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.ModuleLoadRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 2,
    kModuleHandleFieldNumber = 1,
  };
  // optional bytes message = 2;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // required .bgs.protocol.ContentHandle module_handle = 1;
  bool has_module_handle() const;
  private:
  bool _internal_has_module_handle() const;
  public:
  void clear_module_handle();
  const ::bgs::protocol::ContentHandle& module_handle() const;
  ::bgs::protocol::ContentHandle* release_module_handle();
  ::bgs::protocol::ContentHandle* mutable_module_handle();
  void set_allocated_module_handle(::bgs::protocol::ContentHandle* module_handle);
  private:
  const ::bgs::protocol::ContentHandle& _internal_module_handle() const;
  ::bgs::protocol::ContentHandle* _internal_mutable_module_handle();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.ModuleLoadRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::bgs::protocol::ContentHandle* module_handle_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ModuleNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.ModuleNotification) */ {
 public:
  ModuleNotification();
  virtual ~ModuleNotification();

  ModuleNotification(const ModuleNotification& from);
  ModuleNotification(ModuleNotification&& from) noexcept
    : ModuleNotification() {
    *this = ::std::move(from);
  }

  inline ModuleNotification& operator=(const ModuleNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleNotification& operator=(ModuleNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModuleNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModuleNotification* internal_default_instance() {
    return reinterpret_cast<const ModuleNotification*>(
               &_ModuleNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ModuleNotification& a, ModuleNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleNotification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModuleNotification* New() const final {
    return CreateMaybeMessage<ModuleNotification>(nullptr);
  }

  ModuleNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModuleNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModuleNotification& from);
  void MergeFrom(const ModuleNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.ModuleNotification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleIdFieldNumber = 2,
    kResultFieldNumber = 3,
  };
  // optional int32 module_id = 2;
  bool has_module_id() const;
  private:
  bool _internal_has_module_id() const;
  public:
  void clear_module_id();
  ::PROTOBUF_NAMESPACE_ID::int32 module_id() const;
  void set_module_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_module_id() const;
  void _internal_set_module_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 result = 3;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.ModuleNotification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 module_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ModuleMessageRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.ModuleMessageRequest) */ {
 public:
  ModuleMessageRequest();
  virtual ~ModuleMessageRequest();

  ModuleMessageRequest(const ModuleMessageRequest& from);
  ModuleMessageRequest(ModuleMessageRequest&& from) noexcept
    : ModuleMessageRequest() {
    *this = ::std::move(from);
  }

  inline ModuleMessageRequest& operator=(const ModuleMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleMessageRequest& operator=(ModuleMessageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModuleMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModuleMessageRequest* internal_default_instance() {
    return reinterpret_cast<const ModuleMessageRequest*>(
               &_ModuleMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ModuleMessageRequest& a, ModuleMessageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleMessageRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModuleMessageRequest* New() const final {
    return CreateMaybeMessage<ModuleMessageRequest>(nullptr);
  }

  ModuleMessageRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModuleMessageRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModuleMessageRequest& from);
  void MergeFrom(const ModuleMessageRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleMessageRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.ModuleMessageRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 2,
    kModuleIdFieldNumber = 1,
  };
  // optional bytes message = 2;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // required int32 module_id = 1;
  bool has_module_id() const;
  private:
  bool _internal_has_module_id() const;
  public:
  void clear_module_id();
  ::PROTOBUF_NAMESPACE_ID::int32 module_id() const;
  void set_module_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_module_id() const;
  void _internal_set_module_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.ModuleMessageRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::int32 module_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class LogonRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.LogonRequest) */ {
 public:
  LogonRequest();
  virtual ~LogonRequest();

  LogonRequest(const LogonRequest& from);
  LogonRequest(LogonRequest&& from) noexcept
    : LogonRequest() {
    *this = ::std::move(from);
  }

  inline LogonRequest& operator=(const LogonRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogonRequest& operator=(LogonRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogonRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogonRequest* internal_default_instance() {
    return reinterpret_cast<const LogonRequest*>(
               &_LogonRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(LogonRequest& a, LogonRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LogonRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogonRequest* New() const final {
    return CreateMaybeMessage<LogonRequest>(nullptr);
  }

  LogonRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogonRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogonRequest& from);
  void MergeFrom(const LogonRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogonRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.LogonRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProgramFieldNumber = 1,
    kPlatformFieldNumber = 2,
    kLocaleFieldNumber = 3,
    kEmailFieldNumber = 4,
    kVersionFieldNumber = 5,
    kCachedWebCredentialsFieldNumber = 12,
    kUserAgentFieldNumber = 14,
    kDeviceIdFieldNumber = 15,
    kApplicationVersionFieldNumber = 6,
    kPublicComputerFieldNumber = 7,
    kAllowLogonQueueNotificationsFieldNumber = 10,
  };
  // optional string program = 1;
  bool has_program() const;
  private:
  bool _internal_has_program() const;
  public:
  void clear_program();
  const std::string& program() const;
  void set_program(const std::string& value);
  void set_program(std::string&& value);
  void set_program(const char* value);
  void set_program(const char* value, size_t size);
  std::string* mutable_program();
  std::string* release_program();
  void set_allocated_program(std::string* program);
  private:
  const std::string& _internal_program() const;
  void _internal_set_program(const std::string& value);
  std::string* _internal_mutable_program();
  public:

  // optional string platform = 2;
  bool has_platform() const;
  private:
  bool _internal_has_platform() const;
  public:
  void clear_platform();
  const std::string& platform() const;
  void set_platform(const std::string& value);
  void set_platform(std::string&& value);
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  std::string* mutable_platform();
  std::string* release_platform();
  void set_allocated_platform(std::string* platform);
  private:
  const std::string& _internal_platform() const;
  void _internal_set_platform(const std::string& value);
  std::string* _internal_mutable_platform();
  public:

  // optional string locale = 3;
  bool has_locale() const;
  private:
  bool _internal_has_locale() const;
  public:
  void clear_locale();
  const std::string& locale() const;
  void set_locale(const std::string& value);
  void set_locale(std::string&& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  std::string* mutable_locale();
  std::string* release_locale();
  void set_allocated_locale(std::string* locale);
  private:
  const std::string& _internal_locale() const;
  void _internal_set_locale(const std::string& value);
  std::string* _internal_mutable_locale();
  public:

  // optional string email = 4;
  bool has_email() const;
  private:
  bool _internal_has_email() const;
  public:
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // optional string version = 5;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  const std::string& version() const;
  void set_version(const std::string& value);
  void set_version(std::string&& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  std::string* mutable_version();
  std::string* release_version();
  void set_allocated_version(std::string* version);
  private:
  const std::string& _internal_version() const;
  void _internal_set_version(const std::string& value);
  std::string* _internal_mutable_version();
  public:

  // optional bytes cached_web_credentials = 12;
  bool has_cached_web_credentials() const;
  private:
  bool _internal_has_cached_web_credentials() const;
  public:
  void clear_cached_web_credentials();
  const std::string& cached_web_credentials() const;
  void set_cached_web_credentials(const std::string& value);
  void set_cached_web_credentials(std::string&& value);
  void set_cached_web_credentials(const char* value);
  void set_cached_web_credentials(const void* value, size_t size);
  std::string* mutable_cached_web_credentials();
  std::string* release_cached_web_credentials();
  void set_allocated_cached_web_credentials(std::string* cached_web_credentials);
  private:
  const std::string& _internal_cached_web_credentials() const;
  void _internal_set_cached_web_credentials(const std::string& value);
  std::string* _internal_mutable_cached_web_credentials();
  public:

  // optional string user_agent = 14;
  bool has_user_agent() const;
  private:
  bool _internal_has_user_agent() const;
  public:
  void clear_user_agent();
  const std::string& user_agent() const;
  void set_user_agent(const std::string& value);
  void set_user_agent(std::string&& value);
  void set_user_agent(const char* value);
  void set_user_agent(const char* value, size_t size);
  std::string* mutable_user_agent();
  std::string* release_user_agent();
  void set_allocated_user_agent(std::string* user_agent);
  private:
  const std::string& _internal_user_agent() const;
  void _internal_set_user_agent(const std::string& value);
  std::string* _internal_mutable_user_agent();
  public:

  // optional string device_id = 15;
  bool has_device_id() const;
  private:
  bool _internal_has_device_id() const;
  public:
  void clear_device_id();
  const std::string& device_id() const;
  void set_device_id(const std::string& value);
  void set_device_id(std::string&& value);
  void set_device_id(const char* value);
  void set_device_id(const char* value, size_t size);
  std::string* mutable_device_id();
  std::string* release_device_id();
  void set_allocated_device_id(std::string* device_id);
  private:
  const std::string& _internal_device_id() const;
  void _internal_set_device_id(const std::string& value);
  std::string* _internal_mutable_device_id();
  public:

  // optional int32 application_version = 6;
  bool has_application_version() const;
  private:
  bool _internal_has_application_version() const;
  public:
  void clear_application_version();
  ::PROTOBUF_NAMESPACE_ID::int32 application_version() const;
  void set_application_version(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_application_version() const;
  void _internal_set_application_version(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool public_computer = 7;
  bool has_public_computer() const;
  private:
  bool _internal_has_public_computer() const;
  public:
  void clear_public_computer();
  bool public_computer() const;
  void set_public_computer(bool value);
  private:
  bool _internal_public_computer() const;
  void _internal_set_public_computer(bool value);
  public:

  // optional bool allow_logon_queue_notifications = 10 [default = false];
  bool has_allow_logon_queue_notifications() const;
  private:
  bool _internal_has_allow_logon_queue_notifications() const;
  public:
  void clear_allow_logon_queue_notifications();
  bool allow_logon_queue_notifications() const;
  void set_allow_logon_queue_notifications(bool value);
  private:
  bool _internal_allow_logon_queue_notifications() const;
  void _internal_set_allow_logon_queue_notifications(bool value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.LogonRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr program_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr platform_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr version_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cached_web_credentials_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr user_agent_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 application_version_;
  bool public_computer_;
  bool allow_logon_queue_notifications_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class LogonResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.LogonResult) */ {
 public:
  LogonResult();
  virtual ~LogonResult();

  LogonResult(const LogonResult& from);
  LogonResult(LogonResult&& from) noexcept
    : LogonResult() {
    *this = ::std::move(from);
  }

  inline LogonResult& operator=(const LogonResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogonResult& operator=(LogonResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogonResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogonResult* internal_default_instance() {
    return reinterpret_cast<const LogonResult*>(
               &_LogonResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(LogonResult& a, LogonResult& b) {
    a.Swap(&b);
  }
  inline void Swap(LogonResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogonResult* New() const final {
    return CreateMaybeMessage<LogonResult>(nullptr);
  }

  LogonResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogonResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogonResult& from);
  void MergeFrom(const LogonResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogonResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.LogonResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameAccountIdFieldNumber = 3,
    kAvailableRegionFieldNumber = 5,
    kEmailFieldNumber = 4,
    kBattleTagFieldNumber = 7,
    kGeoipCountryFieldNumber = 8,
    kSessionKeyFieldNumber = 9,
    kClientIdFieldNumber = 11,
    kAccountIdFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
    kConnectedRegionFieldNumber = 6,
    kRestrictedModeFieldNumber = 10,
  };
  // repeated .bgs.protocol.EntityId game_account_id = 3;
  int game_account_id_size() const;
  private:
  int _internal_game_account_id_size() const;
  public:
  void clear_game_account_id();
  ::bgs::protocol::EntityId* mutable_game_account_id(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >*
      mutable_game_account_id();
  private:
  const ::bgs::protocol::EntityId& _internal_game_account_id(int index) const;
  ::bgs::protocol::EntityId* _internal_add_game_account_id();
  public:
  const ::bgs::protocol::EntityId& game_account_id(int index) const;
  ::bgs::protocol::EntityId* add_game_account_id();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >&
      game_account_id() const;

  // repeated uint32 available_region = 5;
  int available_region_size() const;
  private:
  int _internal_available_region_size() const;
  public:
  void clear_available_region();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_available_region(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_available_region() const;
  void _internal_add_available_region(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_available_region();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 available_region(int index) const;
  void set_available_region(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_available_region(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      available_region() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_available_region();

  // optional string email = 4;
  bool has_email() const;
  private:
  bool _internal_has_email() const;
  public:
  void clear_email();
  const std::string& email() const;
  void set_email(const std::string& value);
  void set_email(std::string&& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  std::string* mutable_email();
  std::string* release_email();
  void set_allocated_email(std::string* email);
  private:
  const std::string& _internal_email() const;
  void _internal_set_email(const std::string& value);
  std::string* _internal_mutable_email();
  public:

  // optional string battle_tag = 7;
  bool has_battle_tag() const;
  private:
  bool _internal_has_battle_tag() const;
  public:
  void clear_battle_tag();
  const std::string& battle_tag() const;
  void set_battle_tag(const std::string& value);
  void set_battle_tag(std::string&& value);
  void set_battle_tag(const char* value);
  void set_battle_tag(const char* value, size_t size);
  std::string* mutable_battle_tag();
  std::string* release_battle_tag();
  void set_allocated_battle_tag(std::string* battle_tag);
  private:
  const std::string& _internal_battle_tag() const;
  void _internal_set_battle_tag(const std::string& value);
  std::string* _internal_mutable_battle_tag();
  public:

  // optional string geoip_country = 8;
  bool has_geoip_country() const;
  private:
  bool _internal_has_geoip_country() const;
  public:
  void clear_geoip_country();
  const std::string& geoip_country() const;
  void set_geoip_country(const std::string& value);
  void set_geoip_country(std::string&& value);
  void set_geoip_country(const char* value);
  void set_geoip_country(const char* value, size_t size);
  std::string* mutable_geoip_country();
  std::string* release_geoip_country();
  void set_allocated_geoip_country(std::string* geoip_country);
  private:
  const std::string& _internal_geoip_country() const;
  void _internal_set_geoip_country(const std::string& value);
  std::string* _internal_mutable_geoip_country();
  public:

  // optional bytes session_key = 9;
  bool has_session_key() const;
  private:
  bool _internal_has_session_key() const;
  public:
  void clear_session_key();
  const std::string& session_key() const;
  void set_session_key(const std::string& value);
  void set_session_key(std::string&& value);
  void set_session_key(const char* value);
  void set_session_key(const void* value, size_t size);
  std::string* mutable_session_key();
  std::string* release_session_key();
  void set_allocated_session_key(std::string* session_key);
  private:
  const std::string& _internal_session_key() const;
  void _internal_set_session_key(const std::string& value);
  std::string* _internal_mutable_session_key();
  public:

  // optional string client_id = 11;
  bool has_client_id() const;
  private:
  bool _internal_has_client_id() const;
  public:
  void clear_client_id();
  const std::string& client_id() const;
  void set_client_id(const std::string& value);
  void set_client_id(std::string&& value);
  void set_client_id(const char* value);
  void set_client_id(const char* value, size_t size);
  std::string* mutable_client_id();
  std::string* release_client_id();
  void set_allocated_client_id(std::string* client_id);
  private:
  const std::string& _internal_client_id() const;
  void _internal_set_client_id(const std::string& value);
  std::string* _internal_mutable_client_id();
  public:

  // optional .bgs.protocol.EntityId account_id = 2;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  const ::bgs::protocol::EntityId& account_id() const;
  ::bgs::protocol::EntityId* release_account_id();
  ::bgs::protocol::EntityId* mutable_account_id();
  void set_allocated_account_id(::bgs::protocol::EntityId* account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_account_id();
  public:

  // required uint32 error_code = 1;
  bool has_error_code() const;
  private:
  bool _internal_has_error_code() const;
  public:
  void clear_error_code();
  ::PROTOBUF_NAMESPACE_ID::uint32 error_code() const;
  void set_error_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_error_code() const;
  void _internal_set_error_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 connected_region = 6;
  bool has_connected_region() const;
  private:
  bool _internal_has_connected_region() const;
  public:
  void clear_connected_region();
  ::PROTOBUF_NAMESPACE_ID::uint32 connected_region() const;
  void set_connected_region(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_connected_region() const;
  void _internal_set_connected_region(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool restricted_mode = 10;
  bool has_restricted_mode() const;
  private:
  bool _internal_has_restricted_mode() const;
  public:
  void clear_restricted_mode();
  bool restricted_mode() const;
  void set_restricted_mode(bool value);
  private:
  bool _internal_restricted_mode() const;
  void _internal_set_restricted_mode(bool value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.LogonResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId > game_account_id_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > available_region_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr battle_tag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr geoip_country_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr session_key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_id_;
  ::bgs::protocol::EntityId* account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 error_code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 connected_region_;
  bool restricted_mode_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GenerateSSOTokenRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.GenerateSSOTokenRequest) */ {
 public:
  GenerateSSOTokenRequest();
  virtual ~GenerateSSOTokenRequest();

  GenerateSSOTokenRequest(const GenerateSSOTokenRequest& from);
  GenerateSSOTokenRequest(GenerateSSOTokenRequest&& from) noexcept
    : GenerateSSOTokenRequest() {
    *this = ::std::move(from);
  }

  inline GenerateSSOTokenRequest& operator=(const GenerateSSOTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerateSSOTokenRequest& operator=(GenerateSSOTokenRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerateSSOTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateSSOTokenRequest* internal_default_instance() {
    return reinterpret_cast<const GenerateSSOTokenRequest*>(
               &_GenerateSSOTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GenerateSSOTokenRequest& a, GenerateSSOTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerateSSOTokenRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerateSSOTokenRequest* New() const final {
    return CreateMaybeMessage<GenerateSSOTokenRequest>(nullptr);
  }

  GenerateSSOTokenRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerateSSOTokenRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerateSSOTokenRequest& from);
  void MergeFrom(const GenerateSSOTokenRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateSSOTokenRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.GenerateSSOTokenRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProgramFieldNumber = 1,
  };
  // optional fixed32 program = 1;
  bool has_program() const;
  private:
  bool _internal_has_program() const;
  public:
  void clear_program();
  ::PROTOBUF_NAMESPACE_ID::uint32 program() const;
  void set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program() const;
  void _internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.GenerateSSOTokenRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 program_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GenerateSSOTokenResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.GenerateSSOTokenResponse) */ {
 public:
  GenerateSSOTokenResponse();
  virtual ~GenerateSSOTokenResponse();

  GenerateSSOTokenResponse(const GenerateSSOTokenResponse& from);
  GenerateSSOTokenResponse(GenerateSSOTokenResponse&& from) noexcept
    : GenerateSSOTokenResponse() {
    *this = ::std::move(from);
  }

  inline GenerateSSOTokenResponse& operator=(const GenerateSSOTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerateSSOTokenResponse& operator=(GenerateSSOTokenResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerateSSOTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateSSOTokenResponse* internal_default_instance() {
    return reinterpret_cast<const GenerateSSOTokenResponse*>(
               &_GenerateSSOTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GenerateSSOTokenResponse& a, GenerateSSOTokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerateSSOTokenResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerateSSOTokenResponse* New() const final {
    return CreateMaybeMessage<GenerateSSOTokenResponse>(nullptr);
  }

  GenerateSSOTokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerateSSOTokenResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerateSSOTokenResponse& from);
  void MergeFrom(const GenerateSSOTokenResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateSSOTokenResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.GenerateSSOTokenResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSsoIdFieldNumber = 1,
    kSsoSecretFieldNumber = 2,
  };
  // optional bytes sso_id = 1;
  bool has_sso_id() const;
  private:
  bool _internal_has_sso_id() const;
  public:
  void clear_sso_id();
  const std::string& sso_id() const;
  void set_sso_id(const std::string& value);
  void set_sso_id(std::string&& value);
  void set_sso_id(const char* value);
  void set_sso_id(const void* value, size_t size);
  std::string* mutable_sso_id();
  std::string* release_sso_id();
  void set_allocated_sso_id(std::string* sso_id);
  private:
  const std::string& _internal_sso_id() const;
  void _internal_set_sso_id(const std::string& value);
  std::string* _internal_mutable_sso_id();
  public:

  // optional bytes sso_secret = 2;
  bool has_sso_secret() const;
  private:
  bool _internal_has_sso_secret() const;
  public:
  void clear_sso_secret();
  const std::string& sso_secret() const;
  void set_sso_secret(const std::string& value);
  void set_sso_secret(std::string&& value);
  void set_sso_secret(const char* value);
  void set_sso_secret(const void* value, size_t size);
  std::string* mutable_sso_secret();
  std::string* release_sso_secret();
  void set_allocated_sso_secret(std::string* sso_secret);
  private:
  const std::string& _internal_sso_secret() const;
  void _internal_set_sso_secret(const std::string& value);
  std::string* _internal_mutable_sso_secret();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.GenerateSSOTokenResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sso_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sso_secret_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class LogonUpdateRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.LogonUpdateRequest) */ {
 public:
  LogonUpdateRequest();
  virtual ~LogonUpdateRequest();

  LogonUpdateRequest(const LogonUpdateRequest& from);
  LogonUpdateRequest(LogonUpdateRequest&& from) noexcept
    : LogonUpdateRequest() {
    *this = ::std::move(from);
  }

  inline LogonUpdateRequest& operator=(const LogonUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogonUpdateRequest& operator=(LogonUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogonUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogonUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const LogonUpdateRequest*>(
               &_LogonUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(LogonUpdateRequest& a, LogonUpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LogonUpdateRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogonUpdateRequest* New() const final {
    return CreateMaybeMessage<LogonUpdateRequest>(nullptr);
  }

  LogonUpdateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogonUpdateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogonUpdateRequest& from);
  void MergeFrom(const LogonUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogonUpdateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.LogonUpdateRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // required uint32 error_code = 1;
  bool has_error_code() const;
  private:
  bool _internal_has_error_code() const;
  public:
  void clear_error_code();
  ::PROTOBUF_NAMESPACE_ID::uint32 error_code() const;
  void set_error_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_error_code() const;
  void _internal_set_error_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.LogonUpdateRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 error_code_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class LogonQueueUpdateRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.LogonQueueUpdateRequest) */ {
 public:
  LogonQueueUpdateRequest();
  virtual ~LogonQueueUpdateRequest();

  LogonQueueUpdateRequest(const LogonQueueUpdateRequest& from);
  LogonQueueUpdateRequest(LogonQueueUpdateRequest&& from) noexcept
    : LogonQueueUpdateRequest() {
    *this = ::std::move(from);
  }

  inline LogonQueueUpdateRequest& operator=(const LogonQueueUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogonQueueUpdateRequest& operator=(LogonQueueUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogonQueueUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogonQueueUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const LogonQueueUpdateRequest*>(
               &_LogonQueueUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(LogonQueueUpdateRequest& a, LogonQueueUpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LogonQueueUpdateRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogonQueueUpdateRequest* New() const final {
    return CreateMaybeMessage<LogonQueueUpdateRequest>(nullptr);
  }

  LogonQueueUpdateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogonQueueUpdateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogonQueueUpdateRequest& from);
  void MergeFrom(const LogonQueueUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogonQueueUpdateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.LogonQueueUpdateRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEstimatedTimeFieldNumber = 2,
    kEtaDeviationInSecFieldNumber = 3,
    kPositionFieldNumber = 1,
  };
  // required uint64 estimated_time = 2;
  bool has_estimated_time() const;
  private:
  bool _internal_has_estimated_time() const;
  public:
  void clear_estimated_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 estimated_time() const;
  void set_estimated_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_estimated_time() const;
  void _internal_set_estimated_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required uint64 eta_deviation_in_sec = 3;
  bool has_eta_deviation_in_sec() const;
  private:
  bool _internal_has_eta_deviation_in_sec() const;
  public:
  void clear_eta_deviation_in_sec();
  ::PROTOBUF_NAMESPACE_ID::uint64 eta_deviation_in_sec() const;
  void set_eta_deviation_in_sec(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_eta_deviation_in_sec() const;
  void _internal_set_eta_deviation_in_sec(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required uint32 position = 1;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  ::PROTOBUF_NAMESPACE_ID::uint32 position() const;
  void set_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_position() const;
  void _internal_set_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.LogonQueueUpdateRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 estimated_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 eta_deviation_in_sec_;
  ::PROTOBUF_NAMESPACE_ID::uint32 position_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AccountSettingsNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.AccountSettingsNotification) */ {
 public:
  AccountSettingsNotification();
  virtual ~AccountSettingsNotification();

  AccountSettingsNotification(const AccountSettingsNotification& from);
  AccountSettingsNotification(AccountSettingsNotification&& from) noexcept
    : AccountSettingsNotification() {
    *this = ::std::move(from);
  }

  inline AccountSettingsNotification& operator=(const AccountSettingsNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountSettingsNotification& operator=(AccountSettingsNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AccountSettingsNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountSettingsNotification* internal_default_instance() {
    return reinterpret_cast<const AccountSettingsNotification*>(
               &_AccountSettingsNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(AccountSettingsNotification& a, AccountSettingsNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(AccountSettingsNotification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AccountSettingsNotification* New() const final {
    return CreateMaybeMessage<AccountSettingsNotification>(nullptr);
  }

  AccountSettingsNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AccountSettingsNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AccountSettingsNotification& from);
  void MergeFrom(const AccountSettingsNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountSettingsNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.AccountSettingsNotification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLicensesFieldNumber = 1,
    kIsUsingRidFieldNumber = 2,
    kIsPlayingFromIgrFieldNumber = 3,
    kCanReceiveVoiceFieldNumber = 4,
    kCanSendVoiceFieldNumber = 5,
  };
  // repeated .bgs.protocol.account.v1.AccountLicense licenses = 1;
  int licenses_size() const;
  private:
  int _internal_licenses_size() const;
  public:
  void clear_licenses();
  ::bgs::protocol::account::v1::AccountLicense* mutable_licenses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::account::v1::AccountLicense >*
      mutable_licenses();
  private:
  const ::bgs::protocol::account::v1::AccountLicense& _internal_licenses(int index) const;
  ::bgs::protocol::account::v1::AccountLicense* _internal_add_licenses();
  public:
  const ::bgs::protocol::account::v1::AccountLicense& licenses(int index) const;
  ::bgs::protocol::account::v1::AccountLicense* add_licenses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::account::v1::AccountLicense >&
      licenses() const;

  // optional bool is_using_rid = 2;
  bool has_is_using_rid() const;
  private:
  bool _internal_has_is_using_rid() const;
  public:
  void clear_is_using_rid();
  bool is_using_rid() const;
  void set_is_using_rid(bool value);
  private:
  bool _internal_is_using_rid() const;
  void _internal_set_is_using_rid(bool value);
  public:

  // optional bool is_playing_from_igr = 3;
  bool has_is_playing_from_igr() const;
  private:
  bool _internal_has_is_playing_from_igr() const;
  public:
  void clear_is_playing_from_igr();
  bool is_playing_from_igr() const;
  void set_is_playing_from_igr(bool value);
  private:
  bool _internal_is_playing_from_igr() const;
  void _internal_set_is_playing_from_igr(bool value);
  public:

  // optional bool can_receive_voice = 4;
  bool has_can_receive_voice() const;
  private:
  bool _internal_has_can_receive_voice() const;
  public:
  void clear_can_receive_voice();
  bool can_receive_voice() const;
  void set_can_receive_voice(bool value);
  private:
  bool _internal_can_receive_voice() const;
  void _internal_set_can_receive_voice(bool value);
  public:

  // optional bool can_send_voice = 5;
  bool has_can_send_voice() const;
  private:
  bool _internal_has_can_send_voice() const;
  public:
  void clear_can_send_voice();
  bool can_send_voice() const;
  void set_can_send_voice(bool value);
  private:
  bool _internal_can_send_voice() const;
  void _internal_set_can_send_voice(bool value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.AccountSettingsNotification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::account::v1::AccountLicense > licenses_;
  bool is_using_rid_;
  bool is_playing_from_igr_;
  bool can_receive_voice_;
  bool can_send_voice_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ServerStateChangeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.ServerStateChangeRequest) */ {
 public:
  ServerStateChangeRequest();
  virtual ~ServerStateChangeRequest();

  ServerStateChangeRequest(const ServerStateChangeRequest& from);
  ServerStateChangeRequest(ServerStateChangeRequest&& from) noexcept
    : ServerStateChangeRequest() {
    *this = ::std::move(from);
  }

  inline ServerStateChangeRequest& operator=(const ServerStateChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerStateChangeRequest& operator=(ServerStateChangeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServerStateChangeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerStateChangeRequest* internal_default_instance() {
    return reinterpret_cast<const ServerStateChangeRequest*>(
               &_ServerStateChangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ServerStateChangeRequest& a, ServerStateChangeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerStateChangeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServerStateChangeRequest* New() const final {
    return CreateMaybeMessage<ServerStateChangeRequest>(nullptr);
  }

  ServerStateChangeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServerStateChangeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServerStateChangeRequest& from);
  void MergeFrom(const ServerStateChangeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerStateChangeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.ServerStateChangeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventTimeFieldNumber = 2,
    kStateFieldNumber = 1,
  };
  // required uint64 event_time = 2;
  bool has_event_time() const;
  private:
  bool _internal_has_event_time() const;
  public:
  void clear_event_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 event_time() const;
  void set_event_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_event_time() const;
  void _internal_set_event_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required uint32 state = 1;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.ServerStateChangeRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 event_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class VersionInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.VersionInfo) */ {
 public:
  VersionInfo();
  virtual ~VersionInfo();

  VersionInfo(const VersionInfo& from);
  VersionInfo(VersionInfo&& from) noexcept
    : VersionInfo() {
    *this = ::std::move(from);
  }

  inline VersionInfo& operator=(const VersionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline VersionInfo& operator=(VersionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VersionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VersionInfo* internal_default_instance() {
    return reinterpret_cast<const VersionInfo*>(
               &_VersionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(VersionInfo& a, VersionInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(VersionInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VersionInfo* New() const final {
    return CreateMaybeMessage<VersionInfo>(nullptr);
  }

  VersionInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VersionInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VersionInfo& from);
  void MergeFrom(const VersionInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VersionInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.VersionInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPatchFieldNumber = 2,
    kNumberFieldNumber = 1,
    kIsOptionalFieldNumber = 3,
    kKickTimeFieldNumber = 4,
  };
  // optional string patch = 2;
  bool has_patch() const;
  private:
  bool _internal_has_patch() const;
  public:
  void clear_patch();
  const std::string& patch() const;
  void set_patch(const std::string& value);
  void set_patch(std::string&& value);
  void set_patch(const char* value);
  void set_patch(const char* value, size_t size);
  std::string* mutable_patch();
  std::string* release_patch();
  void set_allocated_patch(std::string* patch);
  private:
  const std::string& _internal_patch() const;
  void _internal_set_patch(const std::string& value);
  std::string* _internal_mutable_patch();
  public:

  // optional uint32 number = 1;
  bool has_number() const;
  private:
  bool _internal_has_number() const;
  public:
  void clear_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 number() const;
  void set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_number() const;
  void _internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_optional = 3;
  bool has_is_optional() const;
  private:
  bool _internal_has_is_optional() const;
  public:
  void clear_is_optional();
  bool is_optional() const;
  void set_is_optional(bool value);
  private:
  bool _internal_is_optional() const;
  void _internal_set_is_optional(bool value);
  public:

  // optional uint64 kick_time = 4;
  bool has_kick_time() const;
  private:
  bool _internal_has_kick_time() const;
  public:
  void clear_kick_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 kick_time() const;
  void set_kick_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_kick_time() const;
  void _internal_set_kick_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.VersionInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr patch_;
  ::PROTOBUF_NAMESPACE_ID::uint32 number_;
  bool is_optional_;
  ::PROTOBUF_NAMESPACE_ID::uint64 kick_time_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class VersionInfoNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.VersionInfoNotification) */ {
 public:
  VersionInfoNotification();
  virtual ~VersionInfoNotification();

  VersionInfoNotification(const VersionInfoNotification& from);
  VersionInfoNotification(VersionInfoNotification&& from) noexcept
    : VersionInfoNotification() {
    *this = ::std::move(from);
  }

  inline VersionInfoNotification& operator=(const VersionInfoNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline VersionInfoNotification& operator=(VersionInfoNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VersionInfoNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VersionInfoNotification* internal_default_instance() {
    return reinterpret_cast<const VersionInfoNotification*>(
               &_VersionInfoNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(VersionInfoNotification& a, VersionInfoNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(VersionInfoNotification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VersionInfoNotification* New() const final {
    return CreateMaybeMessage<VersionInfoNotification>(nullptr);
  }

  VersionInfoNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VersionInfoNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VersionInfoNotification& from);
  void MergeFrom(const VersionInfoNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VersionInfoNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.VersionInfoNotification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionInfoFieldNumber = 1,
  };
  // optional .bgs.protocol.authentication.v1.VersionInfo version_info = 1;
  bool has_version_info() const;
  private:
  bool _internal_has_version_info() const;
  public:
  void clear_version_info();
  const ::bgs::protocol::authentication::v1::VersionInfo& version_info() const;
  ::bgs::protocol::authentication::v1::VersionInfo* release_version_info();
  ::bgs::protocol::authentication::v1::VersionInfo* mutable_version_info();
  void set_allocated_version_info(::bgs::protocol::authentication::v1::VersionInfo* version_info);
  private:
  const ::bgs::protocol::authentication::v1::VersionInfo& _internal_version_info() const;
  ::bgs::protocol::authentication::v1::VersionInfo* _internal_mutable_version_info();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.VersionInfoNotification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::authentication::v1::VersionInfo* version_info_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class MemModuleLoadRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.MemModuleLoadRequest) */ {
 public:
  MemModuleLoadRequest();
  virtual ~MemModuleLoadRequest();

  MemModuleLoadRequest(const MemModuleLoadRequest& from);
  MemModuleLoadRequest(MemModuleLoadRequest&& from) noexcept
    : MemModuleLoadRequest() {
    *this = ::std::move(from);
  }

  inline MemModuleLoadRequest& operator=(const MemModuleLoadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemModuleLoadRequest& operator=(MemModuleLoadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MemModuleLoadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MemModuleLoadRequest* internal_default_instance() {
    return reinterpret_cast<const MemModuleLoadRequest*>(
               &_MemModuleLoadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MemModuleLoadRequest& a, MemModuleLoadRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MemModuleLoadRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MemModuleLoadRequest* New() const final {
    return CreateMaybeMessage<MemModuleLoadRequest>(nullptr);
  }

  MemModuleLoadRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MemModuleLoadRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MemModuleLoadRequest& from);
  void MergeFrom(const MemModuleLoadRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemModuleLoadRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.MemModuleLoadRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 2,
    kInputFieldNumber = 3,
    kHandleFieldNumber = 1,
  };
  // required bytes key = 2;
  bool has_key() const;
  private:
  bool _internal_has_key() const;
  public:
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // required bytes input = 3;
  bool has_input() const;
  private:
  bool _internal_has_input() const;
  public:
  void clear_input();
  const std::string& input() const;
  void set_input(const std::string& value);
  void set_input(std::string&& value);
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  std::string* mutable_input();
  std::string* release_input();
  void set_allocated_input(std::string* input);
  private:
  const std::string& _internal_input() const;
  void _internal_set_input(const std::string& value);
  std::string* _internal_mutable_input();
  public:

  // required .bgs.protocol.ContentHandle handle = 1;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  const ::bgs::protocol::ContentHandle& handle() const;
  ::bgs::protocol::ContentHandle* release_handle();
  ::bgs::protocol::ContentHandle* mutable_handle();
  void set_allocated_handle(::bgs::protocol::ContentHandle* handle);
  private:
  const ::bgs::protocol::ContentHandle& _internal_handle() const;
  ::bgs::protocol::ContentHandle* _internal_mutable_handle();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.MemModuleLoadRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr input_;
  ::bgs::protocol::ContentHandle* handle_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class MemModuleLoadResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.MemModuleLoadResponse) */ {
 public:
  MemModuleLoadResponse();
  virtual ~MemModuleLoadResponse();

  MemModuleLoadResponse(const MemModuleLoadResponse& from);
  MemModuleLoadResponse(MemModuleLoadResponse&& from) noexcept
    : MemModuleLoadResponse() {
    *this = ::std::move(from);
  }

  inline MemModuleLoadResponse& operator=(const MemModuleLoadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemModuleLoadResponse& operator=(MemModuleLoadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MemModuleLoadResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MemModuleLoadResponse* internal_default_instance() {
    return reinterpret_cast<const MemModuleLoadResponse*>(
               &_MemModuleLoadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MemModuleLoadResponse& a, MemModuleLoadResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MemModuleLoadResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MemModuleLoadResponse* New() const final {
    return CreateMaybeMessage<MemModuleLoadResponse>(nullptr);
  }

  MemModuleLoadResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MemModuleLoadResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MemModuleLoadResponse& from);
  void MergeFrom(const MemModuleLoadResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemModuleLoadResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.MemModuleLoadResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // required bytes data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.MemModuleLoadResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SelectGameAccountRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.SelectGameAccountRequest) */ {
 public:
  SelectGameAccountRequest();
  virtual ~SelectGameAccountRequest();

  SelectGameAccountRequest(const SelectGameAccountRequest& from);
  SelectGameAccountRequest(SelectGameAccountRequest&& from) noexcept
    : SelectGameAccountRequest() {
    *this = ::std::move(from);
  }

  inline SelectGameAccountRequest& operator=(const SelectGameAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SelectGameAccountRequest& operator=(SelectGameAccountRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SelectGameAccountRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SelectGameAccountRequest* internal_default_instance() {
    return reinterpret_cast<const SelectGameAccountRequest*>(
               &_SelectGameAccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(SelectGameAccountRequest& a, SelectGameAccountRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SelectGameAccountRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SelectGameAccountRequest* New() const final {
    return CreateMaybeMessage<SelectGameAccountRequest>(nullptr);
  }

  SelectGameAccountRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SelectGameAccountRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SelectGameAccountRequest& from);
  void MergeFrom(const SelectGameAccountRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SelectGameAccountRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.SelectGameAccountRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameAccountIdFieldNumber = 1,
  };
  // required .bgs.protocol.EntityId game_account_id = 1;
  bool has_game_account_id() const;
  private:
  bool _internal_has_game_account_id() const;
  public:
  void clear_game_account_id();
  const ::bgs::protocol::EntityId& game_account_id() const;
  ::bgs::protocol::EntityId* release_game_account_id();
  ::bgs::protocol::EntityId* mutable_game_account_id();
  void set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_game_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_game_account_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.SelectGameAccountRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* game_account_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GameAccountSelectedRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.GameAccountSelectedRequest) */ {
 public:
  GameAccountSelectedRequest();
  virtual ~GameAccountSelectedRequest();

  GameAccountSelectedRequest(const GameAccountSelectedRequest& from);
  GameAccountSelectedRequest(GameAccountSelectedRequest&& from) noexcept
    : GameAccountSelectedRequest() {
    *this = ::std::move(from);
  }

  inline GameAccountSelectedRequest& operator=(const GameAccountSelectedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameAccountSelectedRequest& operator=(GameAccountSelectedRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GameAccountSelectedRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameAccountSelectedRequest* internal_default_instance() {
    return reinterpret_cast<const GameAccountSelectedRequest*>(
               &_GameAccountSelectedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(GameAccountSelectedRequest& a, GameAccountSelectedRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GameAccountSelectedRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GameAccountSelectedRequest* New() const final {
    return CreateMaybeMessage<GameAccountSelectedRequest>(nullptr);
  }

  GameAccountSelectedRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GameAccountSelectedRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GameAccountSelectedRequest& from);
  void MergeFrom(const GameAccountSelectedRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameAccountSelectedRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.GameAccountSelectedRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameAccountIdFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .bgs.protocol.EntityId game_account_id = 2;
  bool has_game_account_id() const;
  private:
  bool _internal_has_game_account_id() const;
  public:
  void clear_game_account_id();
  const ::bgs::protocol::EntityId& game_account_id() const;
  ::bgs::protocol::EntityId* release_game_account_id();
  ::bgs::protocol::EntityId* mutable_game_account_id();
  void set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_game_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_game_account_id();
  public:

  // required uint32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.GameAccountSelectedRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* game_account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GenerateWebCredentialsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest) */ {
 public:
  GenerateWebCredentialsRequest();
  virtual ~GenerateWebCredentialsRequest();

  GenerateWebCredentialsRequest(const GenerateWebCredentialsRequest& from);
  GenerateWebCredentialsRequest(GenerateWebCredentialsRequest&& from) noexcept
    : GenerateWebCredentialsRequest() {
    *this = ::std::move(from);
  }

  inline GenerateWebCredentialsRequest& operator=(const GenerateWebCredentialsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerateWebCredentialsRequest& operator=(GenerateWebCredentialsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerateWebCredentialsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateWebCredentialsRequest* internal_default_instance() {
    return reinterpret_cast<const GenerateWebCredentialsRequest*>(
               &_GenerateWebCredentialsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(GenerateWebCredentialsRequest& a, GenerateWebCredentialsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerateWebCredentialsRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerateWebCredentialsRequest* New() const final {
    return CreateMaybeMessage<GenerateWebCredentialsRequest>(nullptr);
  }

  GenerateWebCredentialsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerateWebCredentialsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerateWebCredentialsRequest& from);
  void MergeFrom(const GenerateWebCredentialsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateWebCredentialsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.GenerateWebCredentialsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProgramFieldNumber = 1,
  };
  // optional fixed32 program = 1;
  bool has_program() const;
  private:
  bool _internal_has_program() const;
  public:
  void clear_program();
  ::PROTOBUF_NAMESPACE_ID::uint32 program() const;
  void set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program() const;
  void _internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 program_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GenerateWebCredentialsResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse) */ {
 public:
  GenerateWebCredentialsResponse();
  virtual ~GenerateWebCredentialsResponse();

  GenerateWebCredentialsResponse(const GenerateWebCredentialsResponse& from);
  GenerateWebCredentialsResponse(GenerateWebCredentialsResponse&& from) noexcept
    : GenerateWebCredentialsResponse() {
    *this = ::std::move(from);
  }

  inline GenerateWebCredentialsResponse& operator=(const GenerateWebCredentialsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerateWebCredentialsResponse& operator=(GenerateWebCredentialsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerateWebCredentialsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateWebCredentialsResponse* internal_default_instance() {
    return reinterpret_cast<const GenerateWebCredentialsResponse*>(
               &_GenerateWebCredentialsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(GenerateWebCredentialsResponse& a, GenerateWebCredentialsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerateWebCredentialsResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerateWebCredentialsResponse* New() const final {
    return CreateMaybeMessage<GenerateWebCredentialsResponse>(nullptr);
  }

  GenerateWebCredentialsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerateWebCredentialsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerateWebCredentialsResponse& from);
  void MergeFrom(const GenerateWebCredentialsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateWebCredentialsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.GenerateWebCredentialsResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWebCredentialsFieldNumber = 1,
  };
  // optional bytes web_credentials = 1;
  bool has_web_credentials() const;
  private:
  bool _internal_has_web_credentials() const;
  public:
  void clear_web_credentials();
  const std::string& web_credentials() const;
  void set_web_credentials(const std::string& value);
  void set_web_credentials(std::string&& value);
  void set_web_credentials(const char* value);
  void set_web_credentials(const void* value, size_t size);
  std::string* mutable_web_credentials();
  std::string* release_web_credentials();
  void set_allocated_web_credentials(std::string* web_credentials);
  private:
  const std::string& _internal_web_credentials() const;
  void _internal_set_web_credentials(const std::string& value);
  std::string* _internal_mutable_web_credentials();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr web_credentials_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// -------------------------------------------------------------------

class VerifyWebCredentialsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest) */ {
 public:
  VerifyWebCredentialsRequest();
  virtual ~VerifyWebCredentialsRequest();

  VerifyWebCredentialsRequest(const VerifyWebCredentialsRequest& from);
  VerifyWebCredentialsRequest(VerifyWebCredentialsRequest&& from) noexcept
    : VerifyWebCredentialsRequest() {
    *this = ::std::move(from);
  }

  inline VerifyWebCredentialsRequest& operator=(const VerifyWebCredentialsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifyWebCredentialsRequest& operator=(VerifyWebCredentialsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VerifyWebCredentialsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifyWebCredentialsRequest* internal_default_instance() {
    return reinterpret_cast<const VerifyWebCredentialsRequest*>(
               &_VerifyWebCredentialsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(VerifyWebCredentialsRequest& a, VerifyWebCredentialsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VerifyWebCredentialsRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VerifyWebCredentialsRequest* New() const final {
    return CreateMaybeMessage<VerifyWebCredentialsRequest>(nullptr);
  }

  VerifyWebCredentialsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VerifyWebCredentialsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VerifyWebCredentialsRequest& from);
  void MergeFrom(const VerifyWebCredentialsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyWebCredentialsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.authentication.v1.VerifyWebCredentialsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWebCredentialsFieldNumber = 1,
  };
  // optional bytes web_credentials = 1;
  bool has_web_credentials() const;
  private:
  bool _internal_has_web_credentials() const;
  public:
  void clear_web_credentials();
  const std::string& web_credentials() const;
  void set_web_credentials(const std::string& value);
  void set_web_credentials(std::string&& value);
  void set_web_credentials(const char* value);
  void set_web_credentials(const void* value, size_t size);
  std::string* mutable_web_credentials();
  std::string* release_web_credentials();
  void set_allocated_web_credentials(std::string* web_credentials);
  private:
  const std::string& _internal_web_credentials() const;
  void _internal_set_web_credentials(const std::string& value);
  std::string* _internal_mutable_web_credentials();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr web_credentials_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ModuleLoadRequest

// required .bgs.protocol.ContentHandle module_handle = 1;
inline bool ModuleLoadRequest::_internal_has_module_handle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || module_handle_ != nullptr);
  return value;
}
inline bool ModuleLoadRequest::has_module_handle() const {
  return _internal_has_module_handle();
}
inline const ::bgs::protocol::ContentHandle& ModuleLoadRequest::_internal_module_handle() const {
  const ::bgs::protocol::ContentHandle* p = module_handle_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ContentHandle*>(
      &::bgs::protocol::_ContentHandle_default_instance_);
}
inline const ::bgs::protocol::ContentHandle& ModuleLoadRequest::module_handle() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.ModuleLoadRequest.module_handle)
  return _internal_module_handle();
}
inline ::bgs::protocol::ContentHandle* ModuleLoadRequest::release_module_handle() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.ModuleLoadRequest.module_handle)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::ContentHandle* temp = module_handle_;
  module_handle_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ContentHandle* ModuleLoadRequest::_internal_mutable_module_handle() {
  _has_bits_[0] |= 0x00000002u;
  if (module_handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ContentHandle>(GetArenaNoVirtual());
    module_handle_ = p;
  }
  return module_handle_;
}
inline ::bgs::protocol::ContentHandle* ModuleLoadRequest::mutable_module_handle() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.ModuleLoadRequest.module_handle)
  return _internal_mutable_module_handle();
}
inline void ModuleLoadRequest::set_allocated_module_handle(::bgs::protocol::ContentHandle* module_handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(module_handle_);
  }
  if (module_handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      module_handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, module_handle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  module_handle_ = module_handle;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.ModuleLoadRequest.module_handle)
}

// optional bytes message = 2;
inline bool ModuleLoadRequest::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ModuleLoadRequest::has_message() const {
  return _internal_has_message();
}
inline void ModuleLoadRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ModuleLoadRequest::message() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.ModuleLoadRequest.message)
  return _internal_message();
}
inline void ModuleLoadRequest::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.ModuleLoadRequest.message)
}
inline std::string* ModuleLoadRequest::mutable_message() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.ModuleLoadRequest.message)
  return _internal_mutable_message();
}
inline const std::string& ModuleLoadRequest::_internal_message() const {
  return message_.GetNoArena();
}
inline void ModuleLoadRequest::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ModuleLoadRequest::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.ModuleLoadRequest.message)
}
inline void ModuleLoadRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.ModuleLoadRequest.message)
}
inline void ModuleLoadRequest::set_message(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.ModuleLoadRequest.message)
}
inline std::string* ModuleLoadRequest::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ModuleLoadRequest::release_message() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.ModuleLoadRequest.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ModuleLoadRequest::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.ModuleLoadRequest.message)
}

// -------------------------------------------------------------------

// ModuleNotification

// optional int32 module_id = 2;
inline bool ModuleNotification::_internal_has_module_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ModuleNotification::has_module_id() const {
  return _internal_has_module_id();
}
inline void ModuleNotification::clear_module_id() {
  module_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ModuleNotification::_internal_module_id() const {
  return module_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ModuleNotification::module_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.ModuleNotification.module_id)
  return _internal_module_id();
}
inline void ModuleNotification::_internal_set_module_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  module_id_ = value;
}
inline void ModuleNotification::set_module_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_module_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.ModuleNotification.module_id)
}

// optional uint32 result = 3;
inline bool ModuleNotification::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ModuleNotification::has_result() const {
  return _internal_has_result();
}
inline void ModuleNotification::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModuleNotification::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModuleNotification::result() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.ModuleNotification.result)
  return _internal_result();
}
inline void ModuleNotification::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void ModuleNotification::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.ModuleNotification.result)
}

// -------------------------------------------------------------------

// ModuleMessageRequest

// required int32 module_id = 1;
inline bool ModuleMessageRequest::_internal_has_module_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ModuleMessageRequest::has_module_id() const {
  return _internal_has_module_id();
}
inline void ModuleMessageRequest::clear_module_id() {
  module_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ModuleMessageRequest::_internal_module_id() const {
  return module_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ModuleMessageRequest::module_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.ModuleMessageRequest.module_id)
  return _internal_module_id();
}
inline void ModuleMessageRequest::_internal_set_module_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  module_id_ = value;
}
inline void ModuleMessageRequest::set_module_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_module_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.ModuleMessageRequest.module_id)
}

// optional bytes message = 2;
inline bool ModuleMessageRequest::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ModuleMessageRequest::has_message() const {
  return _internal_has_message();
}
inline void ModuleMessageRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ModuleMessageRequest::message() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.ModuleMessageRequest.message)
  return _internal_message();
}
inline void ModuleMessageRequest::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.ModuleMessageRequest.message)
}
inline std::string* ModuleMessageRequest::mutable_message() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.ModuleMessageRequest.message)
  return _internal_mutable_message();
}
inline const std::string& ModuleMessageRequest::_internal_message() const {
  return message_.GetNoArena();
}
inline void ModuleMessageRequest::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ModuleMessageRequest::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.ModuleMessageRequest.message)
}
inline void ModuleMessageRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.ModuleMessageRequest.message)
}
inline void ModuleMessageRequest::set_message(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.ModuleMessageRequest.message)
}
inline std::string* ModuleMessageRequest::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ModuleMessageRequest::release_message() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.ModuleMessageRequest.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ModuleMessageRequest::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.ModuleMessageRequest.message)
}

// -------------------------------------------------------------------

// LogonRequest

// optional string program = 1;
inline bool LogonRequest::_internal_has_program() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool LogonRequest::has_program() const {
  return _internal_has_program();
}
inline void LogonRequest::clear_program() {
  program_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& LogonRequest::program() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.program)
  return _internal_program();
}
inline void LogonRequest::set_program(const std::string& value) {
  _internal_set_program(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.program)
}
inline std::string* LogonRequest::mutable_program() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonRequest.program)
  return _internal_mutable_program();
}
inline const std::string& LogonRequest::_internal_program() const {
  return program_.GetNoArena();
}
inline void LogonRequest::_internal_set_program(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  program_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonRequest::set_program(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  program_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonRequest.program)
}
inline void LogonRequest::set_program(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  program_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonRequest.program)
}
inline void LogonRequest::set_program(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  program_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonRequest.program)
}
inline std::string* LogonRequest::_internal_mutable_program() {
  _has_bits_[0] |= 0x00000001u;
  return program_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonRequest::release_program() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonRequest.program)
  if (!_internal_has_program()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return program_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonRequest::set_allocated_program(std::string* program) {
  if (program != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  program_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), program);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonRequest.program)
}

// optional string platform = 2;
inline bool LogonRequest::_internal_has_platform() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool LogonRequest::has_platform() const {
  return _internal_has_platform();
}
inline void LogonRequest::clear_platform() {
  platform_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& LogonRequest::platform() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.platform)
  return _internal_platform();
}
inline void LogonRequest::set_platform(const std::string& value) {
  _internal_set_platform(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.platform)
}
inline std::string* LogonRequest::mutable_platform() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonRequest.platform)
  return _internal_mutable_platform();
}
inline const std::string& LogonRequest::_internal_platform() const {
  return platform_.GetNoArena();
}
inline void LogonRequest::_internal_set_platform(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  platform_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonRequest::set_platform(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  platform_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonRequest.platform)
}
inline void LogonRequest::set_platform(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  platform_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonRequest.platform)
}
inline void LogonRequest::set_platform(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  platform_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonRequest.platform)
}
inline std::string* LogonRequest::_internal_mutable_platform() {
  _has_bits_[0] |= 0x00000002u;
  return platform_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonRequest::release_platform() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonRequest.platform)
  if (!_internal_has_platform()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return platform_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonRequest::set_allocated_platform(std::string* platform) {
  if (platform != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  platform_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonRequest.platform)
}

// optional string locale = 3;
inline bool LogonRequest::_internal_has_locale() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool LogonRequest::has_locale() const {
  return _internal_has_locale();
}
inline void LogonRequest::clear_locale() {
  locale_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& LogonRequest::locale() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.locale)
  return _internal_locale();
}
inline void LogonRequest::set_locale(const std::string& value) {
  _internal_set_locale(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.locale)
}
inline std::string* LogonRequest::mutable_locale() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonRequest.locale)
  return _internal_mutable_locale();
}
inline const std::string& LogonRequest::_internal_locale() const {
  return locale_.GetNoArena();
}
inline void LogonRequest::_internal_set_locale(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonRequest::set_locale(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  locale_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonRequest.locale)
}
inline void LogonRequest::set_locale(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonRequest.locale)
}
inline void LogonRequest::set_locale(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  locale_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonRequest.locale)
}
inline std::string* LogonRequest::_internal_mutable_locale() {
  _has_bits_[0] |= 0x00000004u;
  return locale_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonRequest::release_locale() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonRequest.locale)
  if (!_internal_has_locale()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return locale_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonRequest::set_allocated_locale(std::string* locale) {
  if (locale != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  locale_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonRequest.locale)
}

// optional string email = 4;
inline bool LogonRequest::_internal_has_email() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool LogonRequest::has_email() const {
  return _internal_has_email();
}
inline void LogonRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& LogonRequest::email() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.email)
  return _internal_email();
}
inline void LogonRequest::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.email)
}
inline std::string* LogonRequest::mutable_email() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonRequest.email)
  return _internal_mutable_email();
}
inline const std::string& LogonRequest::_internal_email() const {
  return email_.GetNoArena();
}
inline void LogonRequest::_internal_set_email(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonRequest::set_email(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonRequest.email)
}
inline void LogonRequest::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonRequest.email)
}
inline void LogonRequest::set_email(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonRequest.email)
}
inline std::string* LogonRequest::_internal_mutable_email() {
  _has_bits_[0] |= 0x00000008u;
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonRequest::release_email() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonRequest.email)
  if (!_internal_has_email()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return email_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonRequest::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonRequest.email)
}

// optional string version = 5;
inline bool LogonRequest::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool LogonRequest::has_version() const {
  return _internal_has_version();
}
inline void LogonRequest::clear_version() {
  version_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& LogonRequest::version() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.version)
  return _internal_version();
}
inline void LogonRequest::set_version(const std::string& value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.version)
}
inline std::string* LogonRequest::mutable_version() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonRequest.version)
  return _internal_mutable_version();
}
inline const std::string& LogonRequest::_internal_version() const {
  return version_.GetNoArena();
}
inline void LogonRequest::_internal_set_version(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonRequest::set_version(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  version_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonRequest.version)
}
inline void LogonRequest::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonRequest.version)
}
inline void LogonRequest::set_version(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonRequest.version)
}
inline std::string* LogonRequest::_internal_mutable_version() {
  _has_bits_[0] |= 0x00000010u;
  return version_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonRequest::release_version() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonRequest.version)
  if (!_internal_has_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return version_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonRequest::set_allocated_version(std::string* version) {
  if (version != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  version_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonRequest.version)
}

// optional int32 application_version = 6;
inline bool LogonRequest::_internal_has_application_version() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool LogonRequest::has_application_version() const {
  return _internal_has_application_version();
}
inline void LogonRequest::clear_application_version() {
  application_version_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogonRequest::_internal_application_version() const {
  return application_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogonRequest::application_version() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.application_version)
  return _internal_application_version();
}
inline void LogonRequest::_internal_set_application_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  application_version_ = value;
}
inline void LogonRequest::set_application_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_application_version(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.application_version)
}

// optional bool public_computer = 7;
inline bool LogonRequest::_internal_has_public_computer() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool LogonRequest::has_public_computer() const {
  return _internal_has_public_computer();
}
inline void LogonRequest::clear_public_computer() {
  public_computer_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool LogonRequest::_internal_public_computer() const {
  return public_computer_;
}
inline bool LogonRequest::public_computer() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.public_computer)
  return _internal_public_computer();
}
inline void LogonRequest::_internal_set_public_computer(bool value) {
  _has_bits_[0] |= 0x00000200u;
  public_computer_ = value;
}
inline void LogonRequest::set_public_computer(bool value) {
  _internal_set_public_computer(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.public_computer)
}

// optional bool allow_logon_queue_notifications = 10 [default = false];
inline bool LogonRequest::_internal_has_allow_logon_queue_notifications() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool LogonRequest::has_allow_logon_queue_notifications() const {
  return _internal_has_allow_logon_queue_notifications();
}
inline void LogonRequest::clear_allow_logon_queue_notifications() {
  allow_logon_queue_notifications_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool LogonRequest::_internal_allow_logon_queue_notifications() const {
  return allow_logon_queue_notifications_;
}
inline bool LogonRequest::allow_logon_queue_notifications() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.allow_logon_queue_notifications)
  return _internal_allow_logon_queue_notifications();
}
inline void LogonRequest::_internal_set_allow_logon_queue_notifications(bool value) {
  _has_bits_[0] |= 0x00000400u;
  allow_logon_queue_notifications_ = value;
}
inline void LogonRequest::set_allow_logon_queue_notifications(bool value) {
  _internal_set_allow_logon_queue_notifications(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.allow_logon_queue_notifications)
}

// optional bytes cached_web_credentials = 12;
inline bool LogonRequest::_internal_has_cached_web_credentials() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool LogonRequest::has_cached_web_credentials() const {
  return _internal_has_cached_web_credentials();
}
inline void LogonRequest::clear_cached_web_credentials() {
  cached_web_credentials_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& LogonRequest::cached_web_credentials() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.cached_web_credentials)
  return _internal_cached_web_credentials();
}
inline void LogonRequest::set_cached_web_credentials(const std::string& value) {
  _internal_set_cached_web_credentials(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.cached_web_credentials)
}
inline std::string* LogonRequest::mutable_cached_web_credentials() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonRequest.cached_web_credentials)
  return _internal_mutable_cached_web_credentials();
}
inline const std::string& LogonRequest::_internal_cached_web_credentials() const {
  return cached_web_credentials_.GetNoArena();
}
inline void LogonRequest::_internal_set_cached_web_credentials(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  cached_web_credentials_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonRequest::set_cached_web_credentials(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  cached_web_credentials_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonRequest.cached_web_credentials)
}
inline void LogonRequest::set_cached_web_credentials(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  cached_web_credentials_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonRequest.cached_web_credentials)
}
inline void LogonRequest::set_cached_web_credentials(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  cached_web_credentials_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonRequest.cached_web_credentials)
}
inline std::string* LogonRequest::_internal_mutable_cached_web_credentials() {
  _has_bits_[0] |= 0x00000020u;
  return cached_web_credentials_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonRequest::release_cached_web_credentials() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonRequest.cached_web_credentials)
  if (!_internal_has_cached_web_credentials()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return cached_web_credentials_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonRequest::set_allocated_cached_web_credentials(std::string* cached_web_credentials) {
  if (cached_web_credentials != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  cached_web_credentials_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cached_web_credentials);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonRequest.cached_web_credentials)
}

// optional string user_agent = 14;
inline bool LogonRequest::_internal_has_user_agent() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool LogonRequest::has_user_agent() const {
  return _internal_has_user_agent();
}
inline void LogonRequest::clear_user_agent() {
  user_agent_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& LogonRequest::user_agent() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.user_agent)
  return _internal_user_agent();
}
inline void LogonRequest::set_user_agent(const std::string& value) {
  _internal_set_user_agent(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.user_agent)
}
inline std::string* LogonRequest::mutable_user_agent() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonRequest.user_agent)
  return _internal_mutable_user_agent();
}
inline const std::string& LogonRequest::_internal_user_agent() const {
  return user_agent_.GetNoArena();
}
inline void LogonRequest::_internal_set_user_agent(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  user_agent_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonRequest::set_user_agent(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  user_agent_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonRequest.user_agent)
}
inline void LogonRequest::set_user_agent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  user_agent_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonRequest.user_agent)
}
inline void LogonRequest::set_user_agent(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  user_agent_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonRequest.user_agent)
}
inline std::string* LogonRequest::_internal_mutable_user_agent() {
  _has_bits_[0] |= 0x00000040u;
  return user_agent_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonRequest::release_user_agent() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonRequest.user_agent)
  if (!_internal_has_user_agent()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return user_agent_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonRequest::set_allocated_user_agent(std::string* user_agent) {
  if (user_agent != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  user_agent_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), user_agent);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonRequest.user_agent)
}

// optional string device_id = 15;
inline bool LogonRequest::_internal_has_device_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool LogonRequest::has_device_id() const {
  return _internal_has_device_id();
}
inline void LogonRequest::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& LogonRequest::device_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonRequest.device_id)
  return _internal_device_id();
}
inline void LogonRequest::set_device_id(const std::string& value) {
  _internal_set_device_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonRequest.device_id)
}
inline std::string* LogonRequest::mutable_device_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonRequest.device_id)
  return _internal_mutable_device_id();
}
inline const std::string& LogonRequest::_internal_device_id() const {
  return device_id_.GetNoArena();
}
inline void LogonRequest::_internal_set_device_id(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  device_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonRequest::set_device_id(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  device_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonRequest.device_id)
}
inline void LogonRequest::set_device_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  device_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonRequest.device_id)
}
inline void LogonRequest::set_device_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  device_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonRequest.device_id)
}
inline std::string* LogonRequest::_internal_mutable_device_id() {
  _has_bits_[0] |= 0x00000080u;
  return device_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonRequest::release_device_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonRequest.device_id)
  if (!_internal_has_device_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return device_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonRequest::set_allocated_device_id(std::string* device_id) {
  if (device_id != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  device_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonRequest.device_id)
}

// -------------------------------------------------------------------

// LogonResult

// required uint32 error_code = 1;
inline bool LogonResult::_internal_has_error_code() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool LogonResult::has_error_code() const {
  return _internal_has_error_code();
}
inline void LogonResult::clear_error_code() {
  error_code_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogonResult::_internal_error_code() const {
  return error_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogonResult::error_code() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.error_code)
  return _internal_error_code();
}
inline void LogonResult::_internal_set_error_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  error_code_ = value;
}
inline void LogonResult::set_error_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonResult.error_code)
}

// optional .bgs.protocol.EntityId account_id = 2;
inline bool LogonResult::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || account_id_ != nullptr);
  return value;
}
inline bool LogonResult::has_account_id() const {
  return _internal_has_account_id();
}
inline const ::bgs::protocol::EntityId& LogonResult::_internal_account_id() const {
  const ::bgs::protocol::EntityId* p = account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& LogonResult::account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.account_id)
  return _internal_account_id();
}
inline ::bgs::protocol::EntityId* LogonResult::release_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonResult.account_id)
  _has_bits_[0] &= ~0x00000020u;
  ::bgs::protocol::EntityId* temp = account_id_;
  account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* LogonResult::_internal_mutable_account_id() {
  _has_bits_[0] |= 0x00000020u;
  if (account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    account_id_ = p;
  }
  return account_id_;
}
inline ::bgs::protocol::EntityId* LogonResult::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonResult.account_id)
  return _internal_mutable_account_id();
}
inline void LogonResult::set_allocated_account_id(::bgs::protocol::EntityId* account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_id_);
  }
  if (account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  account_id_ = account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonResult.account_id)
}

// repeated .bgs.protocol.EntityId game_account_id = 3;
inline int LogonResult::_internal_game_account_id_size() const {
  return game_account_id_.size();
}
inline int LogonResult::game_account_id_size() const {
  return _internal_game_account_id_size();
}
inline ::bgs::protocol::EntityId* LogonResult::mutable_game_account_id(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonResult.game_account_id)
  return game_account_id_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >*
LogonResult::mutable_game_account_id() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.authentication.v1.LogonResult.game_account_id)
  return &game_account_id_;
}
inline const ::bgs::protocol::EntityId& LogonResult::_internal_game_account_id(int index) const {
  return game_account_id_.Get(index);
}
inline const ::bgs::protocol::EntityId& LogonResult::game_account_id(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.game_account_id)
  return _internal_game_account_id(index);
}
inline ::bgs::protocol::EntityId* LogonResult::_internal_add_game_account_id() {
  return game_account_id_.Add();
}
inline ::bgs::protocol::EntityId* LogonResult::add_game_account_id() {
  // @@protoc_insertion_point(field_add:bgs.protocol.authentication.v1.LogonResult.game_account_id)
  return _internal_add_game_account_id();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >&
LogonResult::game_account_id() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.authentication.v1.LogonResult.game_account_id)
  return game_account_id_;
}

// optional string email = 4;
inline bool LogonResult::_internal_has_email() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool LogonResult::has_email() const {
  return _internal_has_email();
}
inline void LogonResult::clear_email() {
  email_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& LogonResult::email() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.email)
  return _internal_email();
}
inline void LogonResult::set_email(const std::string& value) {
  _internal_set_email(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonResult.email)
}
inline std::string* LogonResult::mutable_email() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonResult.email)
  return _internal_mutable_email();
}
inline const std::string& LogonResult::_internal_email() const {
  return email_.GetNoArena();
}
inline void LogonResult::_internal_set_email(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonResult::set_email(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  email_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonResult.email)
}
inline void LogonResult::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonResult.email)
}
inline void LogonResult::set_email(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  email_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonResult.email)
}
inline std::string* LogonResult::_internal_mutable_email() {
  _has_bits_[0] |= 0x00000001u;
  return email_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonResult::release_email() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonResult.email)
  if (!_internal_has_email()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return email_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonResult::set_allocated_email(std::string* email) {
  if (email != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  email_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonResult.email)
}

// repeated uint32 available_region = 5;
inline int LogonResult::_internal_available_region_size() const {
  return available_region_.size();
}
inline int LogonResult::available_region_size() const {
  return _internal_available_region_size();
}
inline void LogonResult::clear_available_region() {
  available_region_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogonResult::_internal_available_region(int index) const {
  return available_region_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogonResult::available_region(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.available_region)
  return _internal_available_region(index);
}
inline void LogonResult::set_available_region(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  available_region_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonResult.available_region)
}
inline void LogonResult::_internal_add_available_region(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  available_region_.Add(value);
}
inline void LogonResult::add_available_region(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_available_region(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.authentication.v1.LogonResult.available_region)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
LogonResult::_internal_available_region() const {
  return available_region_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
LogonResult::available_region() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.authentication.v1.LogonResult.available_region)
  return _internal_available_region();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
LogonResult::_internal_mutable_available_region() {
  return &available_region_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
LogonResult::mutable_available_region() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.authentication.v1.LogonResult.available_region)
  return _internal_mutable_available_region();
}

// optional uint32 connected_region = 6;
inline bool LogonResult::_internal_has_connected_region() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool LogonResult::has_connected_region() const {
  return _internal_has_connected_region();
}
inline void LogonResult::clear_connected_region() {
  connected_region_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogonResult::_internal_connected_region() const {
  return connected_region_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogonResult::connected_region() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.connected_region)
  return _internal_connected_region();
}
inline void LogonResult::_internal_set_connected_region(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  connected_region_ = value;
}
inline void LogonResult::set_connected_region(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_connected_region(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonResult.connected_region)
}

// optional string battle_tag = 7;
inline bool LogonResult::_internal_has_battle_tag() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool LogonResult::has_battle_tag() const {
  return _internal_has_battle_tag();
}
inline void LogonResult::clear_battle_tag() {
  battle_tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& LogonResult::battle_tag() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.battle_tag)
  return _internal_battle_tag();
}
inline void LogonResult::set_battle_tag(const std::string& value) {
  _internal_set_battle_tag(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonResult.battle_tag)
}
inline std::string* LogonResult::mutable_battle_tag() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonResult.battle_tag)
  return _internal_mutable_battle_tag();
}
inline const std::string& LogonResult::_internal_battle_tag() const {
  return battle_tag_.GetNoArena();
}
inline void LogonResult::_internal_set_battle_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  battle_tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonResult::set_battle_tag(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  battle_tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonResult.battle_tag)
}
inline void LogonResult::set_battle_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  battle_tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonResult.battle_tag)
}
inline void LogonResult::set_battle_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  battle_tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonResult.battle_tag)
}
inline std::string* LogonResult::_internal_mutable_battle_tag() {
  _has_bits_[0] |= 0x00000002u;
  return battle_tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonResult::release_battle_tag() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonResult.battle_tag)
  if (!_internal_has_battle_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return battle_tag_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonResult::set_allocated_battle_tag(std::string* battle_tag) {
  if (battle_tag != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  battle_tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), battle_tag);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonResult.battle_tag)
}

// optional string geoip_country = 8;
inline bool LogonResult::_internal_has_geoip_country() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool LogonResult::has_geoip_country() const {
  return _internal_has_geoip_country();
}
inline void LogonResult::clear_geoip_country() {
  geoip_country_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& LogonResult::geoip_country() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.geoip_country)
  return _internal_geoip_country();
}
inline void LogonResult::set_geoip_country(const std::string& value) {
  _internal_set_geoip_country(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonResult.geoip_country)
}
inline std::string* LogonResult::mutable_geoip_country() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonResult.geoip_country)
  return _internal_mutable_geoip_country();
}
inline const std::string& LogonResult::_internal_geoip_country() const {
  return geoip_country_.GetNoArena();
}
inline void LogonResult::_internal_set_geoip_country(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  geoip_country_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonResult::set_geoip_country(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  geoip_country_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonResult.geoip_country)
}
inline void LogonResult::set_geoip_country(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  geoip_country_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonResult.geoip_country)
}
inline void LogonResult::set_geoip_country(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  geoip_country_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonResult.geoip_country)
}
inline std::string* LogonResult::_internal_mutable_geoip_country() {
  _has_bits_[0] |= 0x00000004u;
  return geoip_country_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonResult::release_geoip_country() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonResult.geoip_country)
  if (!_internal_has_geoip_country()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return geoip_country_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonResult::set_allocated_geoip_country(std::string* geoip_country) {
  if (geoip_country != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  geoip_country_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), geoip_country);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonResult.geoip_country)
}

// optional bytes session_key = 9;
inline bool LogonResult::_internal_has_session_key() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool LogonResult::has_session_key() const {
  return _internal_has_session_key();
}
inline void LogonResult::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& LogonResult::session_key() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.session_key)
  return _internal_session_key();
}
inline void LogonResult::set_session_key(const std::string& value) {
  _internal_set_session_key(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonResult.session_key)
}
inline std::string* LogonResult::mutable_session_key() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonResult.session_key)
  return _internal_mutable_session_key();
}
inline const std::string& LogonResult::_internal_session_key() const {
  return session_key_.GetNoArena();
}
inline void LogonResult::_internal_set_session_key(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  session_key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonResult::set_session_key(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  session_key_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonResult.session_key)
}
inline void LogonResult::set_session_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  session_key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonResult.session_key)
}
inline void LogonResult::set_session_key(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  session_key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonResult.session_key)
}
inline std::string* LogonResult::_internal_mutable_session_key() {
  _has_bits_[0] |= 0x00000008u;
  return session_key_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonResult::release_session_key() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonResult.session_key)
  if (!_internal_has_session_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return session_key_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonResult::set_allocated_session_key(std::string* session_key) {
  if (session_key != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  session_key_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonResult.session_key)
}

// optional bool restricted_mode = 10;
inline bool LogonResult::_internal_has_restricted_mode() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool LogonResult::has_restricted_mode() const {
  return _internal_has_restricted_mode();
}
inline void LogonResult::clear_restricted_mode() {
  restricted_mode_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool LogonResult::_internal_restricted_mode() const {
  return restricted_mode_;
}
inline bool LogonResult::restricted_mode() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.restricted_mode)
  return _internal_restricted_mode();
}
inline void LogonResult::_internal_set_restricted_mode(bool value) {
  _has_bits_[0] |= 0x00000100u;
  restricted_mode_ = value;
}
inline void LogonResult::set_restricted_mode(bool value) {
  _internal_set_restricted_mode(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonResult.restricted_mode)
}

// optional string client_id = 11;
inline bool LogonResult::_internal_has_client_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool LogonResult::has_client_id() const {
  return _internal_has_client_id();
}
inline void LogonResult::clear_client_id() {
  client_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& LogonResult::client_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonResult.client_id)
  return _internal_client_id();
}
inline void LogonResult::set_client_id(const std::string& value) {
  _internal_set_client_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonResult.client_id)
}
inline std::string* LogonResult::mutable_client_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.LogonResult.client_id)
  return _internal_mutable_client_id();
}
inline const std::string& LogonResult::_internal_client_id() const {
  return client_id_.GetNoArena();
}
inline void LogonResult::_internal_set_client_id(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  client_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LogonResult::set_client_id(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  client_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.LogonResult.client_id)
}
inline void LogonResult::set_client_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  client_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.LogonResult.client_id)
}
inline void LogonResult::set_client_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  client_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.LogonResult.client_id)
}
inline std::string* LogonResult::_internal_mutable_client_id() {
  _has_bits_[0] |= 0x00000010u;
  return client_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LogonResult::release_client_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.LogonResult.client_id)
  if (!_internal_has_client_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return client_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LogonResult::set_allocated_client_id(std::string* client_id) {
  if (client_id != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  client_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), client_id);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.LogonResult.client_id)
}

// -------------------------------------------------------------------

// GenerateSSOTokenRequest

// optional fixed32 program = 1;
inline bool GenerateSSOTokenRequest::_internal_has_program() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GenerateSSOTokenRequest::has_program() const {
  return _internal_has_program();
}
inline void GenerateSSOTokenRequest::clear_program() {
  program_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GenerateSSOTokenRequest::_internal_program() const {
  return program_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GenerateSSOTokenRequest::program() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.GenerateSSOTokenRequest.program)
  return _internal_program();
}
inline void GenerateSSOTokenRequest::_internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  program_ = value;
}
inline void GenerateSSOTokenRequest::set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_program(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.GenerateSSOTokenRequest.program)
}

// -------------------------------------------------------------------

// GenerateSSOTokenResponse

// optional bytes sso_id = 1;
inline bool GenerateSSOTokenResponse::_internal_has_sso_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GenerateSSOTokenResponse::has_sso_id() const {
  return _internal_has_sso_id();
}
inline void GenerateSSOTokenResponse::clear_sso_id() {
  sso_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GenerateSSOTokenResponse::sso_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_id)
  return _internal_sso_id();
}
inline void GenerateSSOTokenResponse::set_sso_id(const std::string& value) {
  _internal_set_sso_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_id)
}
inline std::string* GenerateSSOTokenResponse::mutable_sso_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_id)
  return _internal_mutable_sso_id();
}
inline const std::string& GenerateSSOTokenResponse::_internal_sso_id() const {
  return sso_id_.GetNoArena();
}
inline void GenerateSSOTokenResponse::_internal_set_sso_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  sso_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GenerateSSOTokenResponse::set_sso_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  sso_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_id)
}
inline void GenerateSSOTokenResponse::set_sso_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  sso_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_id)
}
inline void GenerateSSOTokenResponse::set_sso_id(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  sso_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_id)
}
inline std::string* GenerateSSOTokenResponse::_internal_mutable_sso_id() {
  _has_bits_[0] |= 0x00000001u;
  return sso_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GenerateSSOTokenResponse::release_sso_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_id)
  if (!_internal_has_sso_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return sso_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateSSOTokenResponse::set_allocated_sso_id(std::string* sso_id) {
  if (sso_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sso_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sso_id);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_id)
}

// optional bytes sso_secret = 2;
inline bool GenerateSSOTokenResponse::_internal_has_sso_secret() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GenerateSSOTokenResponse::has_sso_secret() const {
  return _internal_has_sso_secret();
}
inline void GenerateSSOTokenResponse::clear_sso_secret() {
  sso_secret_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GenerateSSOTokenResponse::sso_secret() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_secret)
  return _internal_sso_secret();
}
inline void GenerateSSOTokenResponse::set_sso_secret(const std::string& value) {
  _internal_set_sso_secret(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_secret)
}
inline std::string* GenerateSSOTokenResponse::mutable_sso_secret() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_secret)
  return _internal_mutable_sso_secret();
}
inline const std::string& GenerateSSOTokenResponse::_internal_sso_secret() const {
  return sso_secret_.GetNoArena();
}
inline void GenerateSSOTokenResponse::_internal_set_sso_secret(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  sso_secret_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GenerateSSOTokenResponse::set_sso_secret(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  sso_secret_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_secret)
}
inline void GenerateSSOTokenResponse::set_sso_secret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  sso_secret_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_secret)
}
inline void GenerateSSOTokenResponse::set_sso_secret(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  sso_secret_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_secret)
}
inline std::string* GenerateSSOTokenResponse::_internal_mutable_sso_secret() {
  _has_bits_[0] |= 0x00000002u;
  return sso_secret_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GenerateSSOTokenResponse::release_sso_secret() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_secret)
  if (!_internal_has_sso_secret()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return sso_secret_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateSSOTokenResponse::set_allocated_sso_secret(std::string* sso_secret) {
  if (sso_secret != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sso_secret_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sso_secret);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.GenerateSSOTokenResponse.sso_secret)
}

// -------------------------------------------------------------------

// LogonUpdateRequest

// required uint32 error_code = 1;
inline bool LogonUpdateRequest::_internal_has_error_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool LogonUpdateRequest::has_error_code() const {
  return _internal_has_error_code();
}
inline void LogonUpdateRequest::clear_error_code() {
  error_code_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogonUpdateRequest::_internal_error_code() const {
  return error_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogonUpdateRequest::error_code() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonUpdateRequest.error_code)
  return _internal_error_code();
}
inline void LogonUpdateRequest::_internal_set_error_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  error_code_ = value;
}
inline void LogonUpdateRequest::set_error_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonUpdateRequest.error_code)
}

// -------------------------------------------------------------------

// LogonQueueUpdateRequest

// required uint32 position = 1;
inline bool LogonQueueUpdateRequest::_internal_has_position() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool LogonQueueUpdateRequest::has_position() const {
  return _internal_has_position();
}
inline void LogonQueueUpdateRequest::clear_position() {
  position_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogonQueueUpdateRequest::_internal_position() const {
  return position_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogonQueueUpdateRequest::position() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonQueueUpdateRequest.position)
  return _internal_position();
}
inline void LogonQueueUpdateRequest::_internal_set_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  position_ = value;
}
inline void LogonQueueUpdateRequest::set_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_position(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonQueueUpdateRequest.position)
}

// required uint64 estimated_time = 2;
inline bool LogonQueueUpdateRequest::_internal_has_estimated_time() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool LogonQueueUpdateRequest::has_estimated_time() const {
  return _internal_has_estimated_time();
}
inline void LogonQueueUpdateRequest::clear_estimated_time() {
  estimated_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LogonQueueUpdateRequest::_internal_estimated_time() const {
  return estimated_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LogonQueueUpdateRequest::estimated_time() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonQueueUpdateRequest.estimated_time)
  return _internal_estimated_time();
}
inline void LogonQueueUpdateRequest::_internal_set_estimated_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  estimated_time_ = value;
}
inline void LogonQueueUpdateRequest::set_estimated_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_estimated_time(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonQueueUpdateRequest.estimated_time)
}

// required uint64 eta_deviation_in_sec = 3;
inline bool LogonQueueUpdateRequest::_internal_has_eta_deviation_in_sec() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool LogonQueueUpdateRequest::has_eta_deviation_in_sec() const {
  return _internal_has_eta_deviation_in_sec();
}
inline void LogonQueueUpdateRequest::clear_eta_deviation_in_sec() {
  eta_deviation_in_sec_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LogonQueueUpdateRequest::_internal_eta_deviation_in_sec() const {
  return eta_deviation_in_sec_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LogonQueueUpdateRequest::eta_deviation_in_sec() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.LogonQueueUpdateRequest.eta_deviation_in_sec)
  return _internal_eta_deviation_in_sec();
}
inline void LogonQueueUpdateRequest::_internal_set_eta_deviation_in_sec(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  eta_deviation_in_sec_ = value;
}
inline void LogonQueueUpdateRequest::set_eta_deviation_in_sec(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_eta_deviation_in_sec(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.LogonQueueUpdateRequest.eta_deviation_in_sec)
}

// -------------------------------------------------------------------

// AccountSettingsNotification

// repeated .bgs.protocol.account.v1.AccountLicense licenses = 1;
inline int AccountSettingsNotification::_internal_licenses_size() const {
  return licenses_.size();
}
inline int AccountSettingsNotification::licenses_size() const {
  return _internal_licenses_size();
}
inline ::bgs::protocol::account::v1::AccountLicense* AccountSettingsNotification::mutable_licenses(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.AccountSettingsNotification.licenses)
  return licenses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::account::v1::AccountLicense >*
AccountSettingsNotification::mutable_licenses() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.authentication.v1.AccountSettingsNotification.licenses)
  return &licenses_;
}
inline const ::bgs::protocol::account::v1::AccountLicense& AccountSettingsNotification::_internal_licenses(int index) const {
  return licenses_.Get(index);
}
inline const ::bgs::protocol::account::v1::AccountLicense& AccountSettingsNotification::licenses(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.AccountSettingsNotification.licenses)
  return _internal_licenses(index);
}
inline ::bgs::protocol::account::v1::AccountLicense* AccountSettingsNotification::_internal_add_licenses() {
  return licenses_.Add();
}
inline ::bgs::protocol::account::v1::AccountLicense* AccountSettingsNotification::add_licenses() {
  // @@protoc_insertion_point(field_add:bgs.protocol.authentication.v1.AccountSettingsNotification.licenses)
  return _internal_add_licenses();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::account::v1::AccountLicense >&
AccountSettingsNotification::licenses() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.authentication.v1.AccountSettingsNotification.licenses)
  return licenses_;
}

// optional bool is_using_rid = 2;
inline bool AccountSettingsNotification::_internal_has_is_using_rid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AccountSettingsNotification::has_is_using_rid() const {
  return _internal_has_is_using_rid();
}
inline void AccountSettingsNotification::clear_is_using_rid() {
  is_using_rid_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool AccountSettingsNotification::_internal_is_using_rid() const {
  return is_using_rid_;
}
inline bool AccountSettingsNotification::is_using_rid() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.AccountSettingsNotification.is_using_rid)
  return _internal_is_using_rid();
}
inline void AccountSettingsNotification::_internal_set_is_using_rid(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_using_rid_ = value;
}
inline void AccountSettingsNotification::set_is_using_rid(bool value) {
  _internal_set_is_using_rid(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.AccountSettingsNotification.is_using_rid)
}

// optional bool is_playing_from_igr = 3;
inline bool AccountSettingsNotification::_internal_has_is_playing_from_igr() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AccountSettingsNotification::has_is_playing_from_igr() const {
  return _internal_has_is_playing_from_igr();
}
inline void AccountSettingsNotification::clear_is_playing_from_igr() {
  is_playing_from_igr_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool AccountSettingsNotification::_internal_is_playing_from_igr() const {
  return is_playing_from_igr_;
}
inline bool AccountSettingsNotification::is_playing_from_igr() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.AccountSettingsNotification.is_playing_from_igr)
  return _internal_is_playing_from_igr();
}
inline void AccountSettingsNotification::_internal_set_is_playing_from_igr(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_playing_from_igr_ = value;
}
inline void AccountSettingsNotification::set_is_playing_from_igr(bool value) {
  _internal_set_is_playing_from_igr(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.AccountSettingsNotification.is_playing_from_igr)
}

// optional bool can_receive_voice = 4;
inline bool AccountSettingsNotification::_internal_has_can_receive_voice() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool AccountSettingsNotification::has_can_receive_voice() const {
  return _internal_has_can_receive_voice();
}
inline void AccountSettingsNotification::clear_can_receive_voice() {
  can_receive_voice_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool AccountSettingsNotification::_internal_can_receive_voice() const {
  return can_receive_voice_;
}
inline bool AccountSettingsNotification::can_receive_voice() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.AccountSettingsNotification.can_receive_voice)
  return _internal_can_receive_voice();
}
inline void AccountSettingsNotification::_internal_set_can_receive_voice(bool value) {
  _has_bits_[0] |= 0x00000004u;
  can_receive_voice_ = value;
}
inline void AccountSettingsNotification::set_can_receive_voice(bool value) {
  _internal_set_can_receive_voice(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.AccountSettingsNotification.can_receive_voice)
}

// optional bool can_send_voice = 5;
inline bool AccountSettingsNotification::_internal_has_can_send_voice() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool AccountSettingsNotification::has_can_send_voice() const {
  return _internal_has_can_send_voice();
}
inline void AccountSettingsNotification::clear_can_send_voice() {
  can_send_voice_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool AccountSettingsNotification::_internal_can_send_voice() const {
  return can_send_voice_;
}
inline bool AccountSettingsNotification::can_send_voice() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.AccountSettingsNotification.can_send_voice)
  return _internal_can_send_voice();
}
inline void AccountSettingsNotification::_internal_set_can_send_voice(bool value) {
  _has_bits_[0] |= 0x00000008u;
  can_send_voice_ = value;
}
inline void AccountSettingsNotification::set_can_send_voice(bool value) {
  _internal_set_can_send_voice(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.AccountSettingsNotification.can_send_voice)
}

// -------------------------------------------------------------------

// ServerStateChangeRequest

// required uint32 state = 1;
inline bool ServerStateChangeRequest::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ServerStateChangeRequest::has_state() const {
  return _internal_has_state();
}
inline void ServerStateChangeRequest::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ServerStateChangeRequest::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ServerStateChangeRequest::state() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.ServerStateChangeRequest.state)
  return _internal_state();
}
inline void ServerStateChangeRequest::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  state_ = value;
}
inline void ServerStateChangeRequest::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.ServerStateChangeRequest.state)
}

// required uint64 event_time = 2;
inline bool ServerStateChangeRequest::_internal_has_event_time() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ServerStateChangeRequest::has_event_time() const {
  return _internal_has_event_time();
}
inline void ServerStateChangeRequest::clear_event_time() {
  event_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ServerStateChangeRequest::_internal_event_time() const {
  return event_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ServerStateChangeRequest::event_time() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.ServerStateChangeRequest.event_time)
  return _internal_event_time();
}
inline void ServerStateChangeRequest::_internal_set_event_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  event_time_ = value;
}
inline void ServerStateChangeRequest::set_event_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_event_time(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.ServerStateChangeRequest.event_time)
}

// -------------------------------------------------------------------

// VersionInfo

// optional uint32 number = 1;
inline bool VersionInfo::_internal_has_number() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool VersionInfo::has_number() const {
  return _internal_has_number();
}
inline void VersionInfo::clear_number() {
  number_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VersionInfo::_internal_number() const {
  return number_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VersionInfo::number() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.VersionInfo.number)
  return _internal_number();
}
inline void VersionInfo::_internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  number_ = value;
}
inline void VersionInfo::set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.VersionInfo.number)
}

// optional string patch = 2;
inline bool VersionInfo::_internal_has_patch() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool VersionInfo::has_patch() const {
  return _internal_has_patch();
}
inline void VersionInfo::clear_patch() {
  patch_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& VersionInfo::patch() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.VersionInfo.patch)
  return _internal_patch();
}
inline void VersionInfo::set_patch(const std::string& value) {
  _internal_set_patch(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.VersionInfo.patch)
}
inline std::string* VersionInfo::mutable_patch() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.VersionInfo.patch)
  return _internal_mutable_patch();
}
inline const std::string& VersionInfo::_internal_patch() const {
  return patch_.GetNoArena();
}
inline void VersionInfo::_internal_set_patch(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  patch_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void VersionInfo::set_patch(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  patch_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.VersionInfo.patch)
}
inline void VersionInfo::set_patch(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  patch_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.VersionInfo.patch)
}
inline void VersionInfo::set_patch(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  patch_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.VersionInfo.patch)
}
inline std::string* VersionInfo::_internal_mutable_patch() {
  _has_bits_[0] |= 0x00000001u;
  return patch_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* VersionInfo::release_patch() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.VersionInfo.patch)
  if (!_internal_has_patch()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return patch_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void VersionInfo::set_allocated_patch(std::string* patch) {
  if (patch != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  patch_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), patch);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.VersionInfo.patch)
}

// optional bool is_optional = 3;
inline bool VersionInfo::_internal_has_is_optional() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool VersionInfo::has_is_optional() const {
  return _internal_has_is_optional();
}
inline void VersionInfo::clear_is_optional() {
  is_optional_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool VersionInfo::_internal_is_optional() const {
  return is_optional_;
}
inline bool VersionInfo::is_optional() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.VersionInfo.is_optional)
  return _internal_is_optional();
}
inline void VersionInfo::_internal_set_is_optional(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_optional_ = value;
}
inline void VersionInfo::set_is_optional(bool value) {
  _internal_set_is_optional(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.VersionInfo.is_optional)
}

// optional uint64 kick_time = 4;
inline bool VersionInfo::_internal_has_kick_time() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool VersionInfo::has_kick_time() const {
  return _internal_has_kick_time();
}
inline void VersionInfo::clear_kick_time() {
  kick_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VersionInfo::_internal_kick_time() const {
  return kick_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VersionInfo::kick_time() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.VersionInfo.kick_time)
  return _internal_kick_time();
}
inline void VersionInfo::_internal_set_kick_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  kick_time_ = value;
}
inline void VersionInfo::set_kick_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_kick_time(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.VersionInfo.kick_time)
}

// -------------------------------------------------------------------

// VersionInfoNotification

// optional .bgs.protocol.authentication.v1.VersionInfo version_info = 1;
inline bool VersionInfoNotification::_internal_has_version_info() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || version_info_ != nullptr);
  return value;
}
inline bool VersionInfoNotification::has_version_info() const {
  return _internal_has_version_info();
}
inline void VersionInfoNotification::clear_version_info() {
  if (version_info_ != nullptr) version_info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::bgs::protocol::authentication::v1::VersionInfo& VersionInfoNotification::_internal_version_info() const {
  const ::bgs::protocol::authentication::v1::VersionInfo* p = version_info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::authentication::v1::VersionInfo*>(
      &::bgs::protocol::authentication::v1::_VersionInfo_default_instance_);
}
inline const ::bgs::protocol::authentication::v1::VersionInfo& VersionInfoNotification::version_info() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.VersionInfoNotification.version_info)
  return _internal_version_info();
}
inline ::bgs::protocol::authentication::v1::VersionInfo* VersionInfoNotification::release_version_info() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.VersionInfoNotification.version_info)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::authentication::v1::VersionInfo* temp = version_info_;
  version_info_ = nullptr;
  return temp;
}
inline ::bgs::protocol::authentication::v1::VersionInfo* VersionInfoNotification::_internal_mutable_version_info() {
  _has_bits_[0] |= 0x00000001u;
  if (version_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::authentication::v1::VersionInfo>(GetArenaNoVirtual());
    version_info_ = p;
  }
  return version_info_;
}
inline ::bgs::protocol::authentication::v1::VersionInfo* VersionInfoNotification::mutable_version_info() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.VersionInfoNotification.version_info)
  return _internal_mutable_version_info();
}
inline void VersionInfoNotification::set_allocated_version_info(::bgs::protocol::authentication::v1::VersionInfo* version_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete version_info_;
  }
  if (version_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      version_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, version_info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  version_info_ = version_info;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.VersionInfoNotification.version_info)
}

// -------------------------------------------------------------------

// MemModuleLoadRequest

// required .bgs.protocol.ContentHandle handle = 1;
inline bool MemModuleLoadRequest::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || handle_ != nullptr);
  return value;
}
inline bool MemModuleLoadRequest::has_handle() const {
  return _internal_has_handle();
}
inline const ::bgs::protocol::ContentHandle& MemModuleLoadRequest::_internal_handle() const {
  const ::bgs::protocol::ContentHandle* p = handle_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ContentHandle*>(
      &::bgs::protocol::_ContentHandle_default_instance_);
}
inline const ::bgs::protocol::ContentHandle& MemModuleLoadRequest::handle() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.MemModuleLoadRequest.handle)
  return _internal_handle();
}
inline ::bgs::protocol::ContentHandle* MemModuleLoadRequest::release_handle() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.MemModuleLoadRequest.handle)
  _has_bits_[0] &= ~0x00000004u;
  ::bgs::protocol::ContentHandle* temp = handle_;
  handle_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ContentHandle* MemModuleLoadRequest::_internal_mutable_handle() {
  _has_bits_[0] |= 0x00000004u;
  if (handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ContentHandle>(GetArenaNoVirtual());
    handle_ = p;
  }
  return handle_;
}
inline ::bgs::protocol::ContentHandle* MemModuleLoadRequest::mutable_handle() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.MemModuleLoadRequest.handle)
  return _internal_mutable_handle();
}
inline void MemModuleLoadRequest::set_allocated_handle(::bgs::protocol::ContentHandle* handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(handle_);
  }
  if (handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  handle_ = handle;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.MemModuleLoadRequest.handle)
}

// required bytes key = 2;
inline bool MemModuleLoadRequest::_internal_has_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MemModuleLoadRequest::has_key() const {
  return _internal_has_key();
}
inline void MemModuleLoadRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MemModuleLoadRequest::key() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.MemModuleLoadRequest.key)
  return _internal_key();
}
inline void MemModuleLoadRequest::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.MemModuleLoadRequest.key)
}
inline std::string* MemModuleLoadRequest::mutable_key() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.MemModuleLoadRequest.key)
  return _internal_mutable_key();
}
inline const std::string& MemModuleLoadRequest::_internal_key() const {
  return key_.GetNoArena();
}
inline void MemModuleLoadRequest::_internal_set_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MemModuleLoadRequest::set_key(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.MemModuleLoadRequest.key)
}
inline void MemModuleLoadRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.MemModuleLoadRequest.key)
}
inline void MemModuleLoadRequest::set_key(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.MemModuleLoadRequest.key)
}
inline std::string* MemModuleLoadRequest::_internal_mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  return key_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MemModuleLoadRequest::release_key() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.MemModuleLoadRequest.key)
  if (!_internal_has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return key_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MemModuleLoadRequest::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.MemModuleLoadRequest.key)
}

// required bytes input = 3;
inline bool MemModuleLoadRequest::_internal_has_input() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MemModuleLoadRequest::has_input() const {
  return _internal_has_input();
}
inline void MemModuleLoadRequest::clear_input() {
  input_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MemModuleLoadRequest::input() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.MemModuleLoadRequest.input)
  return _internal_input();
}
inline void MemModuleLoadRequest::set_input(const std::string& value) {
  _internal_set_input(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.MemModuleLoadRequest.input)
}
inline std::string* MemModuleLoadRequest::mutable_input() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.MemModuleLoadRequest.input)
  return _internal_mutable_input();
}
inline const std::string& MemModuleLoadRequest::_internal_input() const {
  return input_.GetNoArena();
}
inline void MemModuleLoadRequest::_internal_set_input(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MemModuleLoadRequest::set_input(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  input_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.MemModuleLoadRequest.input)
}
inline void MemModuleLoadRequest::set_input(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.MemModuleLoadRequest.input)
}
inline void MemModuleLoadRequest::set_input(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.MemModuleLoadRequest.input)
}
inline std::string* MemModuleLoadRequest::_internal_mutable_input() {
  _has_bits_[0] |= 0x00000002u;
  return input_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MemModuleLoadRequest::release_input() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.MemModuleLoadRequest.input)
  if (!_internal_has_input()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return input_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MemModuleLoadRequest::set_allocated_input(std::string* input) {
  if (input != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  input_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.MemModuleLoadRequest.input)
}

// -------------------------------------------------------------------

// MemModuleLoadResponse

// required bytes data = 1;
inline bool MemModuleLoadResponse::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MemModuleLoadResponse::has_data() const {
  return _internal_has_data();
}
inline void MemModuleLoadResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MemModuleLoadResponse::data() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.MemModuleLoadResponse.data)
  return _internal_data();
}
inline void MemModuleLoadResponse::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.MemModuleLoadResponse.data)
}
inline std::string* MemModuleLoadResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.MemModuleLoadResponse.data)
  return _internal_mutable_data();
}
inline const std::string& MemModuleLoadResponse::_internal_data() const {
  return data_.GetNoArena();
}
inline void MemModuleLoadResponse::_internal_set_data(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MemModuleLoadResponse::set_data(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.MemModuleLoadResponse.data)
}
inline void MemModuleLoadResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.MemModuleLoadResponse.data)
}
inline void MemModuleLoadResponse::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.MemModuleLoadResponse.data)
}
inline std::string* MemModuleLoadResponse::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  return data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MemModuleLoadResponse::release_data() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.MemModuleLoadResponse.data)
  if (!_internal_has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MemModuleLoadResponse::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.MemModuleLoadResponse.data)
}

// -------------------------------------------------------------------

// SelectGameAccountRequest

// required .bgs.protocol.EntityId game_account_id = 1;
inline bool SelectGameAccountRequest::_internal_has_game_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || game_account_id_ != nullptr);
  return value;
}
inline bool SelectGameAccountRequest::has_game_account_id() const {
  return _internal_has_game_account_id();
}
inline const ::bgs::protocol::EntityId& SelectGameAccountRequest::_internal_game_account_id() const {
  const ::bgs::protocol::EntityId* p = game_account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& SelectGameAccountRequest::game_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.SelectGameAccountRequest.game_account_id)
  return _internal_game_account_id();
}
inline ::bgs::protocol::EntityId* SelectGameAccountRequest::release_game_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.SelectGameAccountRequest.game_account_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = game_account_id_;
  game_account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* SelectGameAccountRequest::_internal_mutable_game_account_id() {
  _has_bits_[0] |= 0x00000001u;
  if (game_account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    game_account_id_ = p;
  }
  return game_account_id_;
}
inline ::bgs::protocol::EntityId* SelectGameAccountRequest::mutable_game_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.SelectGameAccountRequest.game_account_id)
  return _internal_mutable_game_account_id();
}
inline void SelectGameAccountRequest::set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(game_account_id_);
  }
  if (game_account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      game_account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, game_account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  game_account_id_ = game_account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.SelectGameAccountRequest.game_account_id)
}

// -------------------------------------------------------------------

// GameAccountSelectedRequest

// required uint32 result = 1;
inline bool GameAccountSelectedRequest::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GameAccountSelectedRequest::has_result() const {
  return _internal_has_result();
}
inline void GameAccountSelectedRequest::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GameAccountSelectedRequest::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GameAccountSelectedRequest::result() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.GameAccountSelectedRequest.result)
  return _internal_result();
}
inline void GameAccountSelectedRequest::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void GameAccountSelectedRequest::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.GameAccountSelectedRequest.result)
}

// optional .bgs.protocol.EntityId game_account_id = 2;
inline bool GameAccountSelectedRequest::_internal_has_game_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || game_account_id_ != nullptr);
  return value;
}
inline bool GameAccountSelectedRequest::has_game_account_id() const {
  return _internal_has_game_account_id();
}
inline const ::bgs::protocol::EntityId& GameAccountSelectedRequest::_internal_game_account_id() const {
  const ::bgs::protocol::EntityId* p = game_account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& GameAccountSelectedRequest::game_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.GameAccountSelectedRequest.game_account_id)
  return _internal_game_account_id();
}
inline ::bgs::protocol::EntityId* GameAccountSelectedRequest::release_game_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.GameAccountSelectedRequest.game_account_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = game_account_id_;
  game_account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* GameAccountSelectedRequest::_internal_mutable_game_account_id() {
  _has_bits_[0] |= 0x00000001u;
  if (game_account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    game_account_id_ = p;
  }
  return game_account_id_;
}
inline ::bgs::protocol::EntityId* GameAccountSelectedRequest::mutable_game_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.GameAccountSelectedRequest.game_account_id)
  return _internal_mutable_game_account_id();
}
inline void GameAccountSelectedRequest::set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(game_account_id_);
  }
  if (game_account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      game_account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, game_account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  game_account_id_ = game_account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.GameAccountSelectedRequest.game_account_id)
}

// -------------------------------------------------------------------

// GenerateWebCredentialsRequest

// optional fixed32 program = 1;
inline bool GenerateWebCredentialsRequest::_internal_has_program() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GenerateWebCredentialsRequest::has_program() const {
  return _internal_has_program();
}
inline void GenerateWebCredentialsRequest::clear_program() {
  program_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GenerateWebCredentialsRequest::_internal_program() const {
  return program_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GenerateWebCredentialsRequest::program() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest.program)
  return _internal_program();
}
inline void GenerateWebCredentialsRequest::_internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  program_ = value;
}
inline void GenerateWebCredentialsRequest::set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_program(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.GenerateWebCredentialsRequest.program)
}

// -------------------------------------------------------------------

// GenerateWebCredentialsResponse

// optional bytes web_credentials = 1;
inline bool GenerateWebCredentialsResponse::_internal_has_web_credentials() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GenerateWebCredentialsResponse::has_web_credentials() const {
  return _internal_has_web_credentials();
}
inline void GenerateWebCredentialsResponse::clear_web_credentials() {
  web_credentials_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GenerateWebCredentialsResponse::web_credentials() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse.web_credentials)
  return _internal_web_credentials();
}
inline void GenerateWebCredentialsResponse::set_web_credentials(const std::string& value) {
  _internal_set_web_credentials(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse.web_credentials)
}
inline std::string* GenerateWebCredentialsResponse::mutable_web_credentials() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse.web_credentials)
  return _internal_mutable_web_credentials();
}
inline const std::string& GenerateWebCredentialsResponse::_internal_web_credentials() const {
  return web_credentials_.GetNoArena();
}
inline void GenerateWebCredentialsResponse::_internal_set_web_credentials(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  web_credentials_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GenerateWebCredentialsResponse::set_web_credentials(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  web_credentials_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse.web_credentials)
}
inline void GenerateWebCredentialsResponse::set_web_credentials(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  web_credentials_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse.web_credentials)
}
inline void GenerateWebCredentialsResponse::set_web_credentials(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  web_credentials_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse.web_credentials)
}
inline std::string* GenerateWebCredentialsResponse::_internal_mutable_web_credentials() {
  _has_bits_[0] |= 0x00000001u;
  return web_credentials_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GenerateWebCredentialsResponse::release_web_credentials() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse.web_credentials)
  if (!_internal_has_web_credentials()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return web_credentials_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateWebCredentialsResponse::set_allocated_web_credentials(std::string* web_credentials) {
  if (web_credentials != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  web_credentials_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), web_credentials);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.GenerateWebCredentialsResponse.web_credentials)
}

// -------------------------------------------------------------------

// VerifyWebCredentialsRequest

// optional bytes web_credentials = 1;
inline bool VerifyWebCredentialsRequest::_internal_has_web_credentials() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool VerifyWebCredentialsRequest::has_web_credentials() const {
  return _internal_has_web_credentials();
}
inline void VerifyWebCredentialsRequest::clear_web_credentials() {
  web_credentials_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& VerifyWebCredentialsRequest::web_credentials() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest.web_credentials)
  return _internal_web_credentials();
}
inline void VerifyWebCredentialsRequest::set_web_credentials(const std::string& value) {
  _internal_set_web_credentials(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest.web_credentials)
}
inline std::string* VerifyWebCredentialsRequest::mutable_web_credentials() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest.web_credentials)
  return _internal_mutable_web_credentials();
}
inline const std::string& VerifyWebCredentialsRequest::_internal_web_credentials() const {
  return web_credentials_.GetNoArena();
}
inline void VerifyWebCredentialsRequest::_internal_set_web_credentials(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  web_credentials_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void VerifyWebCredentialsRequest::set_web_credentials(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  web_credentials_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest.web_credentials)
}
inline void VerifyWebCredentialsRequest::set_web_credentials(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  web_credentials_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest.web_credentials)
}
inline void VerifyWebCredentialsRequest::set_web_credentials(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  web_credentials_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest.web_credentials)
}
inline std::string* VerifyWebCredentialsRequest::_internal_mutable_web_credentials() {
  _has_bits_[0] |= 0x00000001u;
  return web_credentials_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* VerifyWebCredentialsRequest::release_web_credentials() {
  // @@protoc_insertion_point(field_release:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest.web_credentials)
  if (!_internal_has_web_credentials()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return web_credentials_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyWebCredentialsRequest::set_allocated_web_credentials(std::string* web_credentials) {
  if (web_credentials != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  web_credentials_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), web_credentials);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.authentication.v1.VerifyWebCredentialsRequest.web_credentials)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace authentication
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fauthentication_5fservice_2eproto
