// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/club_enum.proto

#include "bgs/low/pb/client/club_enum.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace bgs {
namespace protocol {
namespace club {
namespace v1 {
}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!bgs/low/pb/client/club_enum.proto\022\024bgs"
  ".protocol.club.v1*\202\001\n\014PrivacyLevel\022\030\n\024PR"
  "IVACY_LEVEL_CLOSED\020\000\022!\n\035PRIVACY_LEVEL_OP"
  "EN_INVITATION\020\001\022\035\n\031PRIVACY_LEVEL_OPEN_TI"
  "CKET\020\002\022\026\n\022PRIVACY_LEVEL_OPEN\020\003*L\n\017Visibi"
  "lityLevel\022\034\n\030VISIBILITY_LEVEL_PRIVATE\020\000\022"
  "\033\n\027VISIBILITY_LEVEL_PUBLIC\020\001*\262\002\n\021ClubRem"
  "ovedReason\022\034\n\030CLUB_REMOVED_REASON_NONE\020\000"
  "\022#\n\037CLUB_REMOVED_REASON_MEMBER_LEFT\020\001\022%\n"
  "!CLUB_REMOVED_REASON_MEMBER_KICKED\020\002\022%\n!"
  "CLUB_REMOVED_REASON_MEMBER_BANNED\020\003\0221\n-C"
  "LUB_REMOVED_REASON_MEMBER_REMOVED_BY_SER"
  "VICE\020\004\022+\n\'CLUB_REMOVED_REASON_DESTROYED_"
  "BY_MEMBER\020\005\022,\n(CLUB_REMOVED_REASON_DESTR"
  "OYED_BY_SERVICE\020\006*d\n\020StreamVoiceLevel\022\030\n"
  "\024VOICE_LEVEL_DISABLED\020\000\022\034\n\030VOICE_LEVEL_P"
  "USH_TO_TALK\020\001\022\030\n\024VOICE_LEVEL_OPEN_MIC\020\002*"
  "s\n\024VoiceMicrophoneState\022\033\n\027MICROPHONE_ST"
  "ATE_NORMAL\020\000\022\036\n\032MICROPHONE_STATE_SELF_MU"
  "TE\020\001\022\036\n\032MICROPHONE_STATE_SELF_DEAF\020\002*[\n\r"
  "PresenceLevel\022\027\n\023PRESENCE_LEVEL_NONE\020\000\022\030"
  "\n\024PRESENCE_LEVEL_BASIC\020\001\022\027\n\023PRESENCE_LEV"
  "EL_RICH\020\002*D\n\014WhisperLevel\022\026\n\022WHISPER_LEV"
  "EL_OPEN\020\000\022\034\n\030WHISPER_LEVEL_RESTRICTED\020\001*"
  "\213\001\n\030StreamNotificationFilter\022#\n\037STREAM_N"
  "OTIFICATION_FILTER_NONE\020\000\022&\n\"STREAM_NOTI"
  "FICATION_FILTER_MENTION\020\001\022\"\n\036STREAM_NOTI"
  "FICATION_FILTER_ALL\020\002"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto_once;
static bool descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto = {
  &descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto_initialized, descriptor_table_protodef_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto, "bgs/low/pb/client/club_enum.proto", 1101,
  &descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto_once, descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto_sccs, descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto::offsets,
  file_level_metadata_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto, 0, file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto, file_level_service_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto)), true);
namespace bgs {
namespace protocol {
namespace club {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PrivacyLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto);
  return file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto[0];
}
bool PrivacyLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VisibilityLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto);
  return file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto[1];
}
bool VisibilityLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClubRemovedReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto);
  return file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto[2];
}
bool ClubRemovedReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StreamVoiceLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto);
  return file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto[3];
}
bool StreamVoiceLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VoiceMicrophoneState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto);
  return file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto[4];
}
bool VoiceMicrophoneState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PresenceLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto);
  return file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto[5];
}
bool PresenceLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WhisperLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto);
  return file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto[6];
}
bool WhisperLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StreamNotificationFilter_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto);
  return file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fclub_5fenum_2eproto[7];
}
bool StreamNotificationFilter_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
