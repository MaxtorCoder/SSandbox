// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/club_member_id.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fclub_5fmember_5fid_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fclub_5fmember_5fid_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "bgs/low/pb/client/global_extensions/message_options.pb.h"
#include "bgs/low/pb/client/account_types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fclub_5fmember_5fid_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bgs_2flow_2fpb_2fclient_2fclub_5fmember_5fid_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fmember_5fid_2eproto;
namespace bgs {
namespace protocol {
namespace club {
namespace v1 {
class MemberId;
class MemberIdDefaultTypeInternal;
extern MemberIdDefaultTypeInternal _MemberId_default_instance_;
}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> ::bgs::protocol::club::v1::MemberId* Arena::CreateMaybeMessage<::bgs::protocol::club::v1::MemberId>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bgs {
namespace protocol {
namespace club {
namespace v1 {

// ===================================================================

class MemberId :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.club.v1.MemberId) */ {
 public:
  MemberId();
  virtual ~MemberId();

  MemberId(const MemberId& from);
  MemberId(MemberId&& from) noexcept
    : MemberId() {
    *this = ::std::move(from);
  }

  inline MemberId& operator=(const MemberId& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemberId& operator=(MemberId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MemberId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MemberId* internal_default_instance() {
    return reinterpret_cast<const MemberId*>(
               &_MemberId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MemberId& a, MemberId& b) {
    a.Swap(&b);
  }
  inline void Swap(MemberId* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MemberId* New() const final {
    return CreateMaybeMessage<MemberId>(nullptr);
  }

  MemberId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MemberId>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MemberId& from);
  void MergeFrom(const MemberId& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemberId* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.club.v1.MemberId";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fmember_5fid_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fclub_5fmember_5fid_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kUniqueIdFieldNumber = 2,
  };
  // optional .bgs.protocol.account.v1.AccountId account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  const ::bgs::protocol::account::v1::AccountId& account_id() const;
  ::bgs::protocol::account::v1::AccountId* release_account_id();
  ::bgs::protocol::account::v1::AccountId* mutable_account_id();
  void set_allocated_account_id(::bgs::protocol::account::v1::AccountId* account_id);
  private:
  const ::bgs::protocol::account::v1::AccountId& _internal_account_id() const;
  ::bgs::protocol::account::v1::AccountId* _internal_mutable_account_id();
  public:

  // optional uint64 unique_id = 2;
  bool has_unique_id() const;
  private:
  bool _internal_has_unique_id() const;
  public:
  void clear_unique_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 unique_id() const;
  void set_unique_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_unique_id() const;
  void _internal_set_unique_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.club.v1.MemberId)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::account::v1::AccountId* account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 unique_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fclub_5fmember_5fid_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MemberId

// optional .bgs.protocol.account.v1.AccountId account_id = 1;
inline bool MemberId::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || account_id_ != nullptr);
  return value;
}
inline bool MemberId::has_account_id() const {
  return _internal_has_account_id();
}
inline const ::bgs::protocol::account::v1::AccountId& MemberId::_internal_account_id() const {
  const ::bgs::protocol::account::v1::AccountId* p = account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::account::v1::AccountId*>(
      &::bgs::protocol::account::v1::_AccountId_default_instance_);
}
inline const ::bgs::protocol::account::v1::AccountId& MemberId::account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.MemberId.account_id)
  return _internal_account_id();
}
inline ::bgs::protocol::account::v1::AccountId* MemberId::release_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.club.v1.MemberId.account_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::account::v1::AccountId* temp = account_id_;
  account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::account::v1::AccountId* MemberId::_internal_mutable_account_id() {
  _has_bits_[0] |= 0x00000001u;
  if (account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::account::v1::AccountId>(GetArenaNoVirtual());
    account_id_ = p;
  }
  return account_id_;
}
inline ::bgs::protocol::account::v1::AccountId* MemberId::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.club.v1.MemberId.account_id)
  return _internal_mutable_account_id();
}
inline void MemberId::set_allocated_account_id(::bgs::protocol::account::v1::AccountId* account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_id_);
  }
  if (account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_id_ = account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.club.v1.MemberId.account_id)
}

// optional uint64 unique_id = 2;
inline bool MemberId::_internal_has_unique_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MemberId::has_unique_id() const {
  return _internal_has_unique_id();
}
inline void MemberId::clear_unique_id() {
  unique_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemberId::_internal_unique_id() const {
  return unique_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemberId::unique_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.club.v1.MemberId.unique_id)
  return _internal_unique_id();
}
inline void MemberId::_internal_set_unique_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  unique_id_ = value;
}
inline void MemberId::set_unique_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_unique_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.club.v1.MemberId.unique_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace club
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fclub_5fmember_5fid_2eproto
