// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/event_view_types.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto;
namespace bgs {
namespace protocol {
class GetEventOptions;
class GetEventOptionsDefaultTypeInternal;
extern GetEventOptionsDefaultTypeInternal _GetEventOptions_default_instance_;
class ViewMarker;
class ViewMarkerDefaultTypeInternal;
extern ViewMarkerDefaultTypeInternal _ViewMarker_default_instance_;
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> ::bgs::protocol::GetEventOptions* Arena::CreateMaybeMessage<::bgs::protocol::GetEventOptions>(Arena*);
template<> ::bgs::protocol::ViewMarker* Arena::CreateMaybeMessage<::bgs::protocol::ViewMarker>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bgs {
namespace protocol {

enum EventOrder : int {
  EVENT_DESCENDING = 0,
  EVENT_ASCENDING = 1
};
bool EventOrder_IsValid(int value);
constexpr EventOrder EventOrder_MIN = EVENT_DESCENDING;
constexpr EventOrder EventOrder_MAX = EVENT_ASCENDING;
constexpr int EventOrder_ARRAYSIZE = EventOrder_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EventOrder_descriptor();
template<typename T>
inline const std::string& EventOrder_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EventOrder>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EventOrder_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EventOrder_descriptor(), enum_t_value);
}
inline bool EventOrder_Parse(
    const std::string& name, EventOrder* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EventOrder>(
    EventOrder_descriptor(), name, value);
}
// ===================================================================

class GetEventOptions :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.GetEventOptions) */ {
 public:
  GetEventOptions();
  virtual ~GetEventOptions();

  GetEventOptions(const GetEventOptions& from);
  GetEventOptions(GetEventOptions&& from) noexcept
    : GetEventOptions() {
    *this = ::std::move(from);
  }

  inline GetEventOptions& operator=(const GetEventOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEventOptions& operator=(GetEventOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetEventOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetEventOptions* internal_default_instance() {
    return reinterpret_cast<const GetEventOptions*>(
               &_GetEventOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetEventOptions& a, GetEventOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEventOptions* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetEventOptions* New() const final {
    return CreateMaybeMessage<GetEventOptions>(nullptr);
  }

  GetEventOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetEventOptions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetEventOptions& from);
  void MergeFrom(const GetEventOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEventOptions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.GetEventOptions";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFetchFromFieldNumber = 1,
    kFetchUntilFieldNumber = 2,
    kMaxEventsFieldNumber = 3,
    kOrderFieldNumber = 4,
  };
  // optional uint64 fetch_from = 1;
  bool has_fetch_from() const;
  private:
  bool _internal_has_fetch_from() const;
  public:
  void clear_fetch_from();
  ::PROTOBUF_NAMESPACE_ID::uint64 fetch_from() const;
  void set_fetch_from(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_fetch_from() const;
  void _internal_set_fetch_from(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 fetch_until = 2;
  bool has_fetch_until() const;
  private:
  bool _internal_has_fetch_until() const;
  public:
  void clear_fetch_until();
  ::PROTOBUF_NAMESPACE_ID::uint64 fetch_until() const;
  void set_fetch_until(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_fetch_until() const;
  void _internal_set_fetch_until(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 max_events = 3;
  bool has_max_events() const;
  private:
  bool _internal_has_max_events() const;
  public:
  void clear_max_events();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_events() const;
  void set_max_events(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_events() const;
  void _internal_set_max_events(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .bgs.protocol.EventOrder order = 4 [default = EVENT_DESCENDING];
  bool has_order() const;
  private:
  bool _internal_has_order() const;
  public:
  void clear_order();
  ::bgs::protocol::EventOrder order() const;
  void set_order(::bgs::protocol::EventOrder value);
  private:
  ::bgs::protocol::EventOrder _internal_order() const;
  void _internal_set_order(::bgs::protocol::EventOrder value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.GetEventOptions)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 fetch_from_;
  ::PROTOBUF_NAMESPACE_ID::uint64 fetch_until_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_events_;
  int order_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ViewMarker :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.ViewMarker) */ {
 public:
  ViewMarker();
  virtual ~ViewMarker();

  ViewMarker(const ViewMarker& from);
  ViewMarker(ViewMarker&& from) noexcept
    : ViewMarker() {
    *this = ::std::move(from);
  }

  inline ViewMarker& operator=(const ViewMarker& from) {
    CopyFrom(from);
    return *this;
  }
  inline ViewMarker& operator=(ViewMarker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ViewMarker& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ViewMarker* internal_default_instance() {
    return reinterpret_cast<const ViewMarker*>(
               &_ViewMarker_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ViewMarker& a, ViewMarker& b) {
    a.Swap(&b);
  }
  inline void Swap(ViewMarker* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ViewMarker* New() const final {
    return CreateMaybeMessage<ViewMarker>(nullptr);
  }

  ViewMarker* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ViewMarker>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ViewMarker& from);
  void MergeFrom(const ViewMarker& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViewMarker* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.ViewMarker";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLastReadTimeFieldNumber = 1,
    kLastMessageTimeFieldNumber = 2,
  };
  // optional uint64 last_read_time = 1;
  bool has_last_read_time() const;
  private:
  bool _internal_has_last_read_time() const;
  public:
  void clear_last_read_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 last_read_time() const;
  void set_last_read_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_last_read_time() const;
  void _internal_set_last_read_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 last_message_time = 2;
  bool has_last_message_time() const;
  private:
  bool _internal_has_last_message_time() const;
  public:
  void clear_last_message_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 last_message_time() const;
  void set_last_message_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_last_message_time() const;
  void _internal_set_last_message_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.ViewMarker)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 last_read_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 last_message_time_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetEventOptions

// optional uint64 fetch_from = 1;
inline bool GetEventOptions::_internal_has_fetch_from() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetEventOptions::has_fetch_from() const {
  return _internal_has_fetch_from();
}
inline void GetEventOptions::clear_fetch_from() {
  fetch_from_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetEventOptions::_internal_fetch_from() const {
  return fetch_from_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetEventOptions::fetch_from() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.GetEventOptions.fetch_from)
  return _internal_fetch_from();
}
inline void GetEventOptions::_internal_set_fetch_from(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  fetch_from_ = value;
}
inline void GetEventOptions::set_fetch_from(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_fetch_from(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.GetEventOptions.fetch_from)
}

// optional uint64 fetch_until = 2;
inline bool GetEventOptions::_internal_has_fetch_until() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetEventOptions::has_fetch_until() const {
  return _internal_has_fetch_until();
}
inline void GetEventOptions::clear_fetch_until() {
  fetch_until_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetEventOptions::_internal_fetch_until() const {
  return fetch_until_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetEventOptions::fetch_until() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.GetEventOptions.fetch_until)
  return _internal_fetch_until();
}
inline void GetEventOptions::_internal_set_fetch_until(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  fetch_until_ = value;
}
inline void GetEventOptions::set_fetch_until(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_fetch_until(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.GetEventOptions.fetch_until)
}

// optional uint32 max_events = 3;
inline bool GetEventOptions::_internal_has_max_events() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetEventOptions::has_max_events() const {
  return _internal_has_max_events();
}
inline void GetEventOptions::clear_max_events() {
  max_events_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetEventOptions::_internal_max_events() const {
  return max_events_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetEventOptions::max_events() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.GetEventOptions.max_events)
  return _internal_max_events();
}
inline void GetEventOptions::_internal_set_max_events(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  max_events_ = value;
}
inline void GetEventOptions::set_max_events(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_events(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.GetEventOptions.max_events)
}

// optional .bgs.protocol.EventOrder order = 4 [default = EVENT_DESCENDING];
inline bool GetEventOptions::_internal_has_order() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool GetEventOptions::has_order() const {
  return _internal_has_order();
}
inline void GetEventOptions::clear_order() {
  order_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::bgs::protocol::EventOrder GetEventOptions::_internal_order() const {
  return static_cast< ::bgs::protocol::EventOrder >(order_);
}
inline ::bgs::protocol::EventOrder GetEventOptions::order() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.GetEventOptions.order)
  return _internal_order();
}
inline void GetEventOptions::_internal_set_order(::bgs::protocol::EventOrder value) {
  assert(::bgs::protocol::EventOrder_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  order_ = value;
}
inline void GetEventOptions::set_order(::bgs::protocol::EventOrder value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.GetEventOptions.order)
}

// -------------------------------------------------------------------

// ViewMarker

// optional uint64 last_read_time = 1;
inline bool ViewMarker::_internal_has_last_read_time() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ViewMarker::has_last_read_time() const {
  return _internal_has_last_read_time();
}
inline void ViewMarker::clear_last_read_time() {
  last_read_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ViewMarker::_internal_last_read_time() const {
  return last_read_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ViewMarker::last_read_time() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.ViewMarker.last_read_time)
  return _internal_last_read_time();
}
inline void ViewMarker::_internal_set_last_read_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  last_read_time_ = value;
}
inline void ViewMarker::set_last_read_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_last_read_time(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.ViewMarker.last_read_time)
}

// optional uint64 last_message_time = 2;
inline bool ViewMarker::_internal_has_last_message_time() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ViewMarker::has_last_message_time() const {
  return _internal_has_last_message_time();
}
inline void ViewMarker::clear_last_message_time() {
  last_message_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ViewMarker::_internal_last_message_time() const {
  return last_message_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ViewMarker::last_message_time() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.ViewMarker.last_message_time)
  return _internal_last_message_time();
}
inline void ViewMarker::_internal_set_last_message_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  last_message_time_ = value;
}
inline void ViewMarker::set_last_message_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_last_message_time(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.ViewMarker.last_message_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace bgs

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::bgs::protocol::EventOrder> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bgs::protocol::EventOrder>() {
  return ::bgs::protocol::EventOrder_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fevent_5fview_5ftypes_2eproto
