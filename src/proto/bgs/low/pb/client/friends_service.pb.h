// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/friends_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "bgs/low/pb/client/attribute_types.pb.h"
#include "bgs/low/pb/client/entity_types.pb.h"
#include "bgs/low/pb/client/friends_types.pb.h"
#include "bgs/low/pb/client/invitation_types.pb.h"
#include "bgs/low/pb/client/rpc_types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[20]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
namespace bgs {
namespace protocol {
namespace friends {
namespace v1 {
class AcceptInvitationRequest;
class AcceptInvitationRequestDefaultTypeInternal;
extern AcceptInvitationRequestDefaultTypeInternal _AcceptInvitationRequest_default_instance_;
class CreateFriendshipRequest;
class CreateFriendshipRequestDefaultTypeInternal;
extern CreateFriendshipRequestDefaultTypeInternal _CreateFriendshipRequest_default_instance_;
class DeclineInvitationRequest;
class DeclineInvitationRequestDefaultTypeInternal;
extern DeclineInvitationRequestDefaultTypeInternal _DeclineInvitationRequest_default_instance_;
class FriendNotification;
class FriendNotificationDefaultTypeInternal;
extern FriendNotificationDefaultTypeInternal _FriendNotification_default_instance_;
class GetFriendListRequest;
class GetFriendListRequestDefaultTypeInternal;
extern GetFriendListRequestDefaultTypeInternal _GetFriendListRequest_default_instance_;
class GetFriendListResponse;
class GetFriendListResponseDefaultTypeInternal;
extern GetFriendListResponseDefaultTypeInternal _GetFriendListResponse_default_instance_;
class IgnoreInvitationRequest;
class IgnoreInvitationRequestDefaultTypeInternal;
extern IgnoreInvitationRequestDefaultTypeInternal _IgnoreInvitationRequest_default_instance_;
class InvitationNotification;
class InvitationNotificationDefaultTypeInternal;
extern InvitationNotificationDefaultTypeInternal _InvitationNotification_default_instance_;
class RemoveFriendRequest;
class RemoveFriendRequestDefaultTypeInternal;
extern RemoveFriendRequestDefaultTypeInternal _RemoveFriendRequest_default_instance_;
class RevokeAllInvitationsRequest;
class RevokeAllInvitationsRequestDefaultTypeInternal;
extern RevokeAllInvitationsRequestDefaultTypeInternal _RevokeAllInvitationsRequest_default_instance_;
class RevokeInvitationRequest;
class RevokeInvitationRequestDefaultTypeInternal;
extern RevokeInvitationRequestDefaultTypeInternal _RevokeInvitationRequest_default_instance_;
class SendInvitationRequest;
class SendInvitationRequestDefaultTypeInternal;
extern SendInvitationRequestDefaultTypeInternal _SendInvitationRequest_default_instance_;
class SentInvitationAddedNotification;
class SentInvitationAddedNotificationDefaultTypeInternal;
extern SentInvitationAddedNotificationDefaultTypeInternal _SentInvitationAddedNotification_default_instance_;
class SentInvitationRemovedNotification;
class SentInvitationRemovedNotificationDefaultTypeInternal;
extern SentInvitationRemovedNotificationDefaultTypeInternal _SentInvitationRemovedNotification_default_instance_;
class SubscribeRequest;
class SubscribeRequestDefaultTypeInternal;
extern SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;
class UnsubscribeRequest;
class UnsubscribeRequestDefaultTypeInternal;
extern UnsubscribeRequestDefaultTypeInternal _UnsubscribeRequest_default_instance_;
class UpdateFriendStateNotification;
class UpdateFriendStateNotificationDefaultTypeInternal;
extern UpdateFriendStateNotificationDefaultTypeInternal _UpdateFriendStateNotification_default_instance_;
class UpdateFriendStateRequest;
class UpdateFriendStateRequestDefaultTypeInternal;
extern UpdateFriendStateRequestDefaultTypeInternal _UpdateFriendStateRequest_default_instance_;
class ViewFriendsRequest;
class ViewFriendsRequestDefaultTypeInternal;
extern ViewFriendsRequestDefaultTypeInternal _ViewFriendsRequest_default_instance_;
class ViewFriendsResponse;
class ViewFriendsResponseDefaultTypeInternal;
extern ViewFriendsResponseDefaultTypeInternal _ViewFriendsResponse_default_instance_;
}  // namespace v1
}  // namespace friends
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> ::bgs::protocol::friends::v1::AcceptInvitationRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::AcceptInvitationRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::CreateFriendshipRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::CreateFriendshipRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::DeclineInvitationRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::DeclineInvitationRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::FriendNotification* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::FriendNotification>(Arena*);
template<> ::bgs::protocol::friends::v1::GetFriendListRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::GetFriendListRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::GetFriendListResponse* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::GetFriendListResponse>(Arena*);
template<> ::bgs::protocol::friends::v1::IgnoreInvitationRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::IgnoreInvitationRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::InvitationNotification* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::InvitationNotification>(Arena*);
template<> ::bgs::protocol::friends::v1::RemoveFriendRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::RemoveFriendRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::RevokeAllInvitationsRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::RevokeAllInvitationsRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::RevokeInvitationRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::RevokeInvitationRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::SendInvitationRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::SendInvitationRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::SentInvitationAddedNotification* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::SentInvitationAddedNotification>(Arena*);
template<> ::bgs::protocol::friends::v1::SentInvitationRemovedNotification* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::SentInvitationRemovedNotification>(Arena*);
template<> ::bgs::protocol::friends::v1::SubscribeRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::SubscribeRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::UnsubscribeRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::UnsubscribeRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::UpdateFriendStateNotification* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::UpdateFriendStateNotification>(Arena*);
template<> ::bgs::protocol::friends::v1::UpdateFriendStateRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::UpdateFriendStateRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::ViewFriendsRequest* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::ViewFriendsRequest>(Arena*);
template<> ::bgs::protocol::friends::v1::ViewFriendsResponse* Arena::CreateMaybeMessage<::bgs::protocol::friends::v1::ViewFriendsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bgs {
namespace protocol {
namespace friends {
namespace v1 {

// ===================================================================

class SubscribeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.SubscribeRequest) */ {
 public:
  SubscribeRequest();
  virtual ~SubscribeRequest();

  SubscribeRequest(const SubscribeRequest& from);
  SubscribeRequest(SubscribeRequest&& from) noexcept
    : SubscribeRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeRequest& operator=(SubscribeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SubscribeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeRequest*>(
               &_SubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SubscribeRequest& a, SubscribeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SubscribeRequest* New() const final {
    return CreateMaybeMessage<SubscribeRequest>(nullptr);
  }

  SubscribeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SubscribeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SubscribeRequest& from);
  void MergeFrom(const SubscribeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.SubscribeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 1,
    kForwardFieldNumber = 3,
    kObjectIdFieldNumber = 2,
  };
  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // optional .bgs.protocol.ObjectAddress forward = 3 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_forward() const;
  private:
  bool _internal_has_forward() const;
  public:
  PROTOBUF_DEPRECATED void clear_forward();
  PROTOBUF_DEPRECATED const ::bgs::protocol::ObjectAddress& forward() const;
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* release_forward();
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* mutable_forward();
  PROTOBUF_DEPRECATED void set_allocated_forward(::bgs::protocol::ObjectAddress* forward);
  private:
  const ::bgs::protocol::ObjectAddress& _internal_forward() const;
  ::bgs::protocol::ObjectAddress* _internal_mutable_forward();
  public:

  // required uint64 object_id = 2;
  bool has_object_id() const;
  private:
  bool _internal_has_object_id() const;
  public:
  void clear_object_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id() const;
  void set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_object_id() const;
  void _internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.SubscribeRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  ::bgs::protocol::ObjectAddress* forward_;
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class UnsubscribeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.UnsubscribeRequest) */ {
 public:
  UnsubscribeRequest();
  virtual ~UnsubscribeRequest();

  UnsubscribeRequest(const UnsubscribeRequest& from);
  UnsubscribeRequest(UnsubscribeRequest&& from) noexcept
    : UnsubscribeRequest() {
    *this = ::std::move(from);
  }

  inline UnsubscribeRequest& operator=(const UnsubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsubscribeRequest& operator=(UnsubscribeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsubscribeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const UnsubscribeRequest*>(
               &_UnsubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UnsubscribeRequest& a, UnsubscribeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsubscribeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsubscribeRequest* New() const final {
    return CreateMaybeMessage<UnsubscribeRequest>(nullptr);
  }

  UnsubscribeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsubscribeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsubscribeRequest& from);
  void MergeFrom(const UnsubscribeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsubscribeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.UnsubscribeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 1,
    kForwardFieldNumber = 3,
    kObjectIdFieldNumber = 2,
  };
  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // optional .bgs.protocol.ObjectAddress forward = 3 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_forward() const;
  private:
  bool _internal_has_forward() const;
  public:
  PROTOBUF_DEPRECATED void clear_forward();
  PROTOBUF_DEPRECATED const ::bgs::protocol::ObjectAddress& forward() const;
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* release_forward();
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* mutable_forward();
  PROTOBUF_DEPRECATED void set_allocated_forward(::bgs::protocol::ObjectAddress* forward);
  private:
  const ::bgs::protocol::ObjectAddress& _internal_forward() const;
  ::bgs::protocol::ObjectAddress* _internal_mutable_forward();
  public:

  // optional uint64 object_id = 2;
  bool has_object_id() const;
  private:
  bool _internal_has_object_id() const;
  public:
  void clear_object_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id() const;
  void set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_object_id() const;
  void _internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.UnsubscribeRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  ::bgs::protocol::ObjectAddress* forward_;
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SendInvitationRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.SendInvitationRequest) */ {
 public:
  SendInvitationRequest();
  virtual ~SendInvitationRequest();

  SendInvitationRequest(const SendInvitationRequest& from);
  SendInvitationRequest(SendInvitationRequest&& from) noexcept
    : SendInvitationRequest() {
    *this = ::std::move(from);
  }

  inline SendInvitationRequest& operator=(const SendInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendInvitationRequest& operator=(SendInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SendInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const SendInvitationRequest*>(
               &_SendInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SendInvitationRequest& a, SendInvitationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SendInvitationRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SendInvitationRequest* New() const final {
    return CreateMaybeMessage<SendInvitationRequest>(nullptr);
  }

  SendInvitationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SendInvitationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SendInvitationRequest& from);
  void MergeFrom(const SendInvitationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendInvitationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.SendInvitationRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdentityFieldNumber = 1,
    kTargetIdFieldNumber = 2,
    kParamsFieldNumber = 3,
  };
  // optional .bgs.protocol.Identity agent_identity = 1;
  bool has_agent_identity() const;
  private:
  bool _internal_has_agent_identity() const;
  public:
  void clear_agent_identity();
  const ::bgs::protocol::Identity& agent_identity() const;
  ::bgs::protocol::Identity* release_agent_identity();
  ::bgs::protocol::Identity* mutable_agent_identity();
  void set_allocated_agent_identity(::bgs::protocol::Identity* agent_identity);
  private:
  const ::bgs::protocol::Identity& _internal_agent_identity() const;
  ::bgs::protocol::Identity* _internal_mutable_agent_identity();
  public:

  // required .bgs.protocol.EntityId target_id = 2;
  bool has_target_id() const;
  private:
  bool _internal_has_target_id() const;
  public:
  void clear_target_id();
  const ::bgs::protocol::EntityId& target_id() const;
  ::bgs::protocol::EntityId* release_target_id();
  ::bgs::protocol::EntityId* mutable_target_id();
  void set_allocated_target_id(::bgs::protocol::EntityId* target_id);
  private:
  const ::bgs::protocol::EntityId& _internal_target_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_target_id();
  public:

  // required .bgs.protocol.InvitationParams params = 3;
  bool has_params() const;
  private:
  bool _internal_has_params() const;
  public:
  void clear_params();
  const ::bgs::protocol::InvitationParams& params() const;
  ::bgs::protocol::InvitationParams* release_params();
  ::bgs::protocol::InvitationParams* mutable_params();
  void set_allocated_params(::bgs::protocol::InvitationParams* params);
  private:
  const ::bgs::protocol::InvitationParams& _internal_params() const;
  ::bgs::protocol::InvitationParams* _internal_mutable_params();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.SendInvitationRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::Identity* agent_identity_;
  ::bgs::protocol::EntityId* target_id_;
  ::bgs::protocol::InvitationParams* params_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RevokeInvitationRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.RevokeInvitationRequest) */ {
 public:
  RevokeInvitationRequest();
  virtual ~RevokeInvitationRequest();

  RevokeInvitationRequest(const RevokeInvitationRequest& from);
  RevokeInvitationRequest(RevokeInvitationRequest&& from) noexcept
    : RevokeInvitationRequest() {
    *this = ::std::move(from);
  }

  inline RevokeInvitationRequest& operator=(const RevokeInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RevokeInvitationRequest& operator=(RevokeInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RevokeInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RevokeInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const RevokeInvitationRequest*>(
               &_RevokeInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RevokeInvitationRequest& a, RevokeInvitationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RevokeInvitationRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RevokeInvitationRequest* New() const final {
    return CreateMaybeMessage<RevokeInvitationRequest>(nullptr);
  }

  RevokeInvitationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RevokeInvitationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RevokeInvitationRequest& from);
  void MergeFrom(const RevokeInvitationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RevokeInvitationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.RevokeInvitationRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 1,
    kInvitationIdFieldNumber = 2,
  };
  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // optional fixed64 invitation_id = 2;
  bool has_invitation_id() const;
  private:
  bool _internal_has_invitation_id() const;
  public:
  void clear_invitation_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 invitation_id() const;
  void set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_invitation_id() const;
  void _internal_set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.RevokeInvitationRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 invitation_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AcceptInvitationRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.AcceptInvitationRequest) */ {
 public:
  AcceptInvitationRequest();
  virtual ~AcceptInvitationRequest();

  AcceptInvitationRequest(const AcceptInvitationRequest& from);
  AcceptInvitationRequest(AcceptInvitationRequest&& from) noexcept
    : AcceptInvitationRequest() {
    *this = ::std::move(from);
  }

  inline AcceptInvitationRequest& operator=(const AcceptInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AcceptInvitationRequest& operator=(AcceptInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AcceptInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AcceptInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const AcceptInvitationRequest*>(
               &_AcceptInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AcceptInvitationRequest& a, AcceptInvitationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AcceptInvitationRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AcceptInvitationRequest* New() const final {
    return CreateMaybeMessage<AcceptInvitationRequest>(nullptr);
  }

  AcceptInvitationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AcceptInvitationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AcceptInvitationRequest& from);
  void MergeFrom(const AcceptInvitationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AcceptInvitationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.AcceptInvitationRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 1,
    kOptionsFieldNumber = 4,
    kInvitationIdFieldNumber = 3,
  };
  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // optional .bgs.protocol.friends.v1.AcceptInvitationOptions options = 4;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::bgs::protocol::friends::v1::AcceptInvitationOptions& options() const;
  ::bgs::protocol::friends::v1::AcceptInvitationOptions* release_options();
  ::bgs::protocol::friends::v1::AcceptInvitationOptions* mutable_options();
  void set_allocated_options(::bgs::protocol::friends::v1::AcceptInvitationOptions* options);
  private:
  const ::bgs::protocol::friends::v1::AcceptInvitationOptions& _internal_options() const;
  ::bgs::protocol::friends::v1::AcceptInvitationOptions* _internal_mutable_options();
  public:

  // required fixed64 invitation_id = 3;
  bool has_invitation_id() const;
  private:
  bool _internal_has_invitation_id() const;
  public:
  void clear_invitation_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 invitation_id() const;
  void set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_invitation_id() const;
  void _internal_set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.AcceptInvitationRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  ::bgs::protocol::friends::v1::AcceptInvitationOptions* options_;
  ::PROTOBUF_NAMESPACE_ID::uint64 invitation_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DeclineInvitationRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.DeclineInvitationRequest) */ {
 public:
  DeclineInvitationRequest();
  virtual ~DeclineInvitationRequest();

  DeclineInvitationRequest(const DeclineInvitationRequest& from);
  DeclineInvitationRequest(DeclineInvitationRequest&& from) noexcept
    : DeclineInvitationRequest() {
    *this = ::std::move(from);
  }

  inline DeclineInvitationRequest& operator=(const DeclineInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeclineInvitationRequest& operator=(DeclineInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeclineInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeclineInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const DeclineInvitationRequest*>(
               &_DeclineInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DeclineInvitationRequest& a, DeclineInvitationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeclineInvitationRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeclineInvitationRequest* New() const final {
    return CreateMaybeMessage<DeclineInvitationRequest>(nullptr);
  }

  DeclineInvitationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeclineInvitationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeclineInvitationRequest& from);
  void MergeFrom(const DeclineInvitationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeclineInvitationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.DeclineInvitationRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 1,
    kInvitationIdFieldNumber = 3,
  };
  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // required fixed64 invitation_id = 3;
  bool has_invitation_id() const;
  private:
  bool _internal_has_invitation_id() const;
  public:
  void clear_invitation_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 invitation_id() const;
  void set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_invitation_id() const;
  void _internal_set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.DeclineInvitationRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 invitation_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class IgnoreInvitationRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.IgnoreInvitationRequest) */ {
 public:
  IgnoreInvitationRequest();
  virtual ~IgnoreInvitationRequest();

  IgnoreInvitationRequest(const IgnoreInvitationRequest& from);
  IgnoreInvitationRequest(IgnoreInvitationRequest&& from) noexcept
    : IgnoreInvitationRequest() {
    *this = ::std::move(from);
  }

  inline IgnoreInvitationRequest& operator=(const IgnoreInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IgnoreInvitationRequest& operator=(IgnoreInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IgnoreInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IgnoreInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const IgnoreInvitationRequest*>(
               &_IgnoreInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(IgnoreInvitationRequest& a, IgnoreInvitationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IgnoreInvitationRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IgnoreInvitationRequest* New() const final {
    return CreateMaybeMessage<IgnoreInvitationRequest>(nullptr);
  }

  IgnoreInvitationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IgnoreInvitationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IgnoreInvitationRequest& from);
  void MergeFrom(const IgnoreInvitationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IgnoreInvitationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.IgnoreInvitationRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 1,
    kInvitationIdFieldNumber = 3,
    kProgramFieldNumber = 4,
  };
  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // required fixed64 invitation_id = 3;
  bool has_invitation_id() const;
  private:
  bool _internal_has_invitation_id() const;
  public:
  void clear_invitation_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 invitation_id() const;
  void set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_invitation_id() const;
  void _internal_set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed32 program = 4;
  bool has_program() const;
  private:
  bool _internal_has_program() const;
  public:
  void clear_program();
  ::PROTOBUF_NAMESPACE_ID::uint32 program() const;
  void set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program() const;
  void _internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.IgnoreInvitationRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 invitation_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 program_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RemoveFriendRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.RemoveFriendRequest) */ {
 public:
  RemoveFriendRequest();
  virtual ~RemoveFriendRequest();

  RemoveFriendRequest(const RemoveFriendRequest& from);
  RemoveFriendRequest(RemoveFriendRequest&& from) noexcept
    : RemoveFriendRequest() {
    *this = ::std::move(from);
  }

  inline RemoveFriendRequest& operator=(const RemoveFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveFriendRequest& operator=(RemoveFriendRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoveFriendRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveFriendRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveFriendRequest*>(
               &_RemoveFriendRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(RemoveFriendRequest& a, RemoveFriendRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveFriendRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RemoveFriendRequest* New() const final {
    return CreateMaybeMessage<RemoveFriendRequest>(nullptr);
  }

  RemoveFriendRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoveFriendRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoveFriendRequest& from);
  void MergeFrom(const RemoveFriendRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveFriendRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.RemoveFriendRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 1,
    kTargetIdFieldNumber = 2,
  };
  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // required .bgs.protocol.EntityId target_id = 2;
  bool has_target_id() const;
  private:
  bool _internal_has_target_id() const;
  public:
  void clear_target_id();
  const ::bgs::protocol::EntityId& target_id() const;
  ::bgs::protocol::EntityId* release_target_id();
  ::bgs::protocol::EntityId* mutable_target_id();
  void set_allocated_target_id(::bgs::protocol::EntityId* target_id);
  private:
  const ::bgs::protocol::EntityId& _internal_target_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_target_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.RemoveFriendRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  ::bgs::protocol::EntityId* target_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RevokeAllInvitationsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.RevokeAllInvitationsRequest) */ {
 public:
  RevokeAllInvitationsRequest();
  virtual ~RevokeAllInvitationsRequest();

  RevokeAllInvitationsRequest(const RevokeAllInvitationsRequest& from);
  RevokeAllInvitationsRequest(RevokeAllInvitationsRequest&& from) noexcept
    : RevokeAllInvitationsRequest() {
    *this = ::std::move(from);
  }

  inline RevokeAllInvitationsRequest& operator=(const RevokeAllInvitationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RevokeAllInvitationsRequest& operator=(RevokeAllInvitationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RevokeAllInvitationsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RevokeAllInvitationsRequest* internal_default_instance() {
    return reinterpret_cast<const RevokeAllInvitationsRequest*>(
               &_RevokeAllInvitationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(RevokeAllInvitationsRequest& a, RevokeAllInvitationsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RevokeAllInvitationsRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RevokeAllInvitationsRequest* New() const final {
    return CreateMaybeMessage<RevokeAllInvitationsRequest>(nullptr);
  }

  RevokeAllInvitationsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RevokeAllInvitationsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RevokeAllInvitationsRequest& from);
  void MergeFrom(const RevokeAllInvitationsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RevokeAllInvitationsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.RevokeAllInvitationsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 2,
  };
  // optional .bgs.protocol.EntityId agent_id = 2;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.RevokeAllInvitationsRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ViewFriendsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.ViewFriendsRequest) */ {
 public:
  ViewFriendsRequest();
  virtual ~ViewFriendsRequest();

  ViewFriendsRequest(const ViewFriendsRequest& from);
  ViewFriendsRequest(ViewFriendsRequest&& from) noexcept
    : ViewFriendsRequest() {
    *this = ::std::move(from);
  }

  inline ViewFriendsRequest& operator=(const ViewFriendsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ViewFriendsRequest& operator=(ViewFriendsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ViewFriendsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ViewFriendsRequest* internal_default_instance() {
    return reinterpret_cast<const ViewFriendsRequest*>(
               &_ViewFriendsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ViewFriendsRequest& a, ViewFriendsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ViewFriendsRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ViewFriendsRequest* New() const final {
    return CreateMaybeMessage<ViewFriendsRequest>(nullptr);
  }

  ViewFriendsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ViewFriendsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ViewFriendsRequest& from);
  void MergeFrom(const ViewFriendsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViewFriendsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.ViewFriendsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 1,
    kTargetIdFieldNumber = 2,
  };
  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // required .bgs.protocol.EntityId target_id = 2;
  bool has_target_id() const;
  private:
  bool _internal_has_target_id() const;
  public:
  void clear_target_id();
  const ::bgs::protocol::EntityId& target_id() const;
  ::bgs::protocol::EntityId* release_target_id();
  ::bgs::protocol::EntityId* mutable_target_id();
  void set_allocated_target_id(::bgs::protocol::EntityId* target_id);
  private:
  const ::bgs::protocol::EntityId& _internal_target_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_target_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.ViewFriendsRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  ::bgs::protocol::EntityId* target_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ViewFriendsResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.ViewFriendsResponse) */ {
 public:
  ViewFriendsResponse();
  virtual ~ViewFriendsResponse();

  ViewFriendsResponse(const ViewFriendsResponse& from);
  ViewFriendsResponse(ViewFriendsResponse&& from) noexcept
    : ViewFriendsResponse() {
    *this = ::std::move(from);
  }

  inline ViewFriendsResponse& operator=(const ViewFriendsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ViewFriendsResponse& operator=(ViewFriendsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ViewFriendsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ViewFriendsResponse* internal_default_instance() {
    return reinterpret_cast<const ViewFriendsResponse*>(
               &_ViewFriendsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ViewFriendsResponse& a, ViewFriendsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ViewFriendsResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ViewFriendsResponse* New() const final {
    return CreateMaybeMessage<ViewFriendsResponse>(nullptr);
  }

  ViewFriendsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ViewFriendsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ViewFriendsResponse& from);
  void MergeFrom(const ViewFriendsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViewFriendsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.ViewFriendsResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendsFieldNumber = 1,
  };
  // repeated .bgs.protocol.friends.v1.FriendOfFriend friends = 1;
  int friends_size() const;
  private:
  int _internal_friends_size() const;
  public:
  void clear_friends();
  ::bgs::protocol::friends::v1::FriendOfFriend* mutable_friends(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::friends::v1::FriendOfFriend >*
      mutable_friends();
  private:
  const ::bgs::protocol::friends::v1::FriendOfFriend& _internal_friends(int index) const;
  ::bgs::protocol::friends::v1::FriendOfFriend* _internal_add_friends();
  public:
  const ::bgs::protocol::friends::v1::FriendOfFriend& friends(int index) const;
  ::bgs::protocol::friends::v1::FriendOfFriend* add_friends();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::friends::v1::FriendOfFriend >&
      friends() const;

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.ViewFriendsResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::friends::v1::FriendOfFriend > friends_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class UpdateFriendStateRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.UpdateFriendStateRequest) */ {
 public:
  UpdateFriendStateRequest();
  virtual ~UpdateFriendStateRequest();

  UpdateFriendStateRequest(const UpdateFriendStateRequest& from);
  UpdateFriendStateRequest(UpdateFriendStateRequest&& from) noexcept
    : UpdateFriendStateRequest() {
    *this = ::std::move(from);
  }

  inline UpdateFriendStateRequest& operator=(const UpdateFriendStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateFriendStateRequest& operator=(UpdateFriendStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateFriendStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateFriendStateRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateFriendStateRequest*>(
               &_UpdateFriendStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(UpdateFriendStateRequest& a, UpdateFriendStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateFriendStateRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateFriendStateRequest* New() const final {
    return CreateMaybeMessage<UpdateFriendStateRequest>(nullptr);
  }

  UpdateFriendStateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateFriendStateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateFriendStateRequest& from);
  void MergeFrom(const UpdateFriendStateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateFriendStateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.UpdateFriendStateRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeFieldNumber = 3,
    kAgentIdFieldNumber = 1,
    kTargetIdFieldNumber = 2,
  };
  // repeated .bgs.protocol.Attribute attribute = 3;
  int attribute_size() const;
  private:
  int _internal_attribute_size() const;
  public:
  void clear_attribute();
  ::bgs::protocol::Attribute* mutable_attribute(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
      mutable_attribute();
  private:
  const ::bgs::protocol::Attribute& _internal_attribute(int index) const;
  ::bgs::protocol::Attribute* _internal_add_attribute();
  public:
  const ::bgs::protocol::Attribute& attribute(int index) const;
  ::bgs::protocol::Attribute* add_attribute();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
      attribute() const;

  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // required .bgs.protocol.EntityId target_id = 2;
  bool has_target_id() const;
  private:
  bool _internal_has_target_id() const;
  public:
  void clear_target_id();
  const ::bgs::protocol::EntityId& target_id() const;
  ::bgs::protocol::EntityId* release_target_id();
  ::bgs::protocol::EntityId* mutable_target_id();
  void set_allocated_target_id(::bgs::protocol::EntityId* target_id);
  private:
  const ::bgs::protocol::EntityId& _internal_target_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_target_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.UpdateFriendStateRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute > attribute_;
  ::bgs::protocol::EntityId* agent_id_;
  ::bgs::protocol::EntityId* target_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetFriendListRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.GetFriendListRequest) */ {
 public:
  GetFriendListRequest();
  virtual ~GetFriendListRequest();

  GetFriendListRequest(const GetFriendListRequest& from);
  GetFriendListRequest(GetFriendListRequest&& from) noexcept
    : GetFriendListRequest() {
    *this = ::std::move(from);
  }

  inline GetFriendListRequest& operator=(const GetFriendListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFriendListRequest& operator=(GetFriendListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetFriendListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFriendListRequest* internal_default_instance() {
    return reinterpret_cast<const GetFriendListRequest*>(
               &_GetFriendListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GetFriendListRequest& a, GetFriendListRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetFriendListRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetFriendListRequest* New() const final {
    return CreateMaybeMessage<GetFriendListRequest>(nullptr);
  }

  GetFriendListRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetFriendListRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetFriendListRequest& from);
  void MergeFrom(const GetFriendListRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFriendListRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.GetFriendListRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 2,
  };
  // optional .bgs.protocol.EntityId agent_id = 2;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.GetFriendListRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetFriendListResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.GetFriendListResponse) */ {
 public:
  GetFriendListResponse();
  virtual ~GetFriendListResponse();

  GetFriendListResponse(const GetFriendListResponse& from);
  GetFriendListResponse(GetFriendListResponse&& from) noexcept
    : GetFriendListResponse() {
    *this = ::std::move(from);
  }

  inline GetFriendListResponse& operator=(const GetFriendListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFriendListResponse& operator=(GetFriendListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetFriendListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFriendListResponse* internal_default_instance() {
    return reinterpret_cast<const GetFriendListResponse*>(
               &_GetFriendListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(GetFriendListResponse& a, GetFriendListResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetFriendListResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetFriendListResponse* New() const final {
    return CreateMaybeMessage<GetFriendListResponse>(nullptr);
  }

  GetFriendListResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetFriendListResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetFriendListResponse& from);
  void MergeFrom(const GetFriendListResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFriendListResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.GetFriendListResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendsFieldNumber = 1,
  };
  // repeated .bgs.protocol.friends.v1.Friend friends = 1;
  int friends_size() const;
  private:
  int _internal_friends_size() const;
  public:
  void clear_friends();
  ::bgs::protocol::friends::v1::Friend* mutable_friends(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::friends::v1::Friend >*
      mutable_friends();
  private:
  const ::bgs::protocol::friends::v1::Friend& _internal_friends(int index) const;
  ::bgs::protocol::friends::v1::Friend* _internal_add_friends();
  public:
  const ::bgs::protocol::friends::v1::Friend& friends(int index) const;
  ::bgs::protocol::friends::v1::Friend* add_friends();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::friends::v1::Friend >&
      friends() const;

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.GetFriendListResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::friends::v1::Friend > friends_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CreateFriendshipRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.CreateFriendshipRequest) */ {
 public:
  CreateFriendshipRequest();
  virtual ~CreateFriendshipRequest();

  CreateFriendshipRequest(const CreateFriendshipRequest& from);
  CreateFriendshipRequest(CreateFriendshipRequest&& from) noexcept
    : CreateFriendshipRequest() {
    *this = ::std::move(from);
  }

  inline CreateFriendshipRequest& operator=(const CreateFriendshipRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateFriendshipRequest& operator=(CreateFriendshipRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateFriendshipRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateFriendshipRequest* internal_default_instance() {
    return reinterpret_cast<const CreateFriendshipRequest*>(
               &_CreateFriendshipRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CreateFriendshipRequest& a, CreateFriendshipRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateFriendshipRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateFriendshipRequest* New() const final {
    return CreateMaybeMessage<CreateFriendshipRequest>(nullptr);
  }

  CreateFriendshipRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateFriendshipRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateFriendshipRequest& from);
  void MergeFrom(const CreateFriendshipRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateFriendshipRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.CreateFriendshipRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleFieldNumber = 3,
    kAgentIdFieldNumber = 1,
    kTargetIdFieldNumber = 2,
  };
  // repeated uint32 role = 3 [packed = true];
  int role_size() const;
  private:
  int _internal_role_size() const;
  public:
  void clear_role();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_role(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_role() const;
  void _internal_add_role(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_role();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 role(int index) const;
  void set_role(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_role(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      role() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_role();

  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // optional .bgs.protocol.EntityId target_id = 2;
  bool has_target_id() const;
  private:
  bool _internal_has_target_id() const;
  public:
  void clear_target_id();
  const ::bgs::protocol::EntityId& target_id() const;
  ::bgs::protocol::EntityId* release_target_id();
  ::bgs::protocol::EntityId* mutable_target_id();
  void set_allocated_target_id(::bgs::protocol::EntityId* target_id);
  private:
  const ::bgs::protocol::EntityId& _internal_target_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_target_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.CreateFriendshipRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > role_;
  mutable std::atomic<int> _role_cached_byte_size_;
  ::bgs::protocol::EntityId* agent_id_;
  ::bgs::protocol::EntityId* target_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class FriendNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.FriendNotification) */ {
 public:
  FriendNotification();
  virtual ~FriendNotification();

  FriendNotification(const FriendNotification& from);
  FriendNotification(FriendNotification&& from) noexcept
    : FriendNotification() {
    *this = ::std::move(from);
  }

  inline FriendNotification& operator=(const FriendNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline FriendNotification& operator=(FriendNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FriendNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FriendNotification* internal_default_instance() {
    return reinterpret_cast<const FriendNotification*>(
               &_FriendNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(FriendNotification& a, FriendNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(FriendNotification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FriendNotification* New() const final {
    return CreateMaybeMessage<FriendNotification>(nullptr);
  }

  FriendNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FriendNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FriendNotification& from);
  void MergeFrom(const FriendNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FriendNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.FriendNotification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetFieldNumber = 1,
    kAccountIdFieldNumber = 5,
    kForwardFieldNumber = 6,
  };
  // required .bgs.protocol.friends.v1.Friend target = 1;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  const ::bgs::protocol::friends::v1::Friend& target() const;
  ::bgs::protocol::friends::v1::Friend* release_target();
  ::bgs::protocol::friends::v1::Friend* mutable_target();
  void set_allocated_target(::bgs::protocol::friends::v1::Friend* target);
  private:
  const ::bgs::protocol::friends::v1::Friend& _internal_target() const;
  ::bgs::protocol::friends::v1::Friend* _internal_mutable_target();
  public:

  // optional .bgs.protocol.EntityId account_id = 5;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  const ::bgs::protocol::EntityId& account_id() const;
  ::bgs::protocol::EntityId* release_account_id();
  ::bgs::protocol::EntityId* mutable_account_id();
  void set_allocated_account_id(::bgs::protocol::EntityId* account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_account_id();
  public:

  // optional .bgs.protocol.ObjectAddress forward = 6 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_forward() const;
  private:
  bool _internal_has_forward() const;
  public:
  PROTOBUF_DEPRECATED void clear_forward();
  PROTOBUF_DEPRECATED const ::bgs::protocol::ObjectAddress& forward() const;
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* release_forward();
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* mutable_forward();
  PROTOBUF_DEPRECATED void set_allocated_forward(::bgs::protocol::ObjectAddress* forward);
  private:
  const ::bgs::protocol::ObjectAddress& _internal_forward() const;
  ::bgs::protocol::ObjectAddress* _internal_mutable_forward();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.FriendNotification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::friends::v1::Friend* target_;
  ::bgs::protocol::EntityId* account_id_;
  ::bgs::protocol::ObjectAddress* forward_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class UpdateFriendStateNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.UpdateFriendStateNotification) */ {
 public:
  UpdateFriendStateNotification();
  virtual ~UpdateFriendStateNotification();

  UpdateFriendStateNotification(const UpdateFriendStateNotification& from);
  UpdateFriendStateNotification(UpdateFriendStateNotification&& from) noexcept
    : UpdateFriendStateNotification() {
    *this = ::std::move(from);
  }

  inline UpdateFriendStateNotification& operator=(const UpdateFriendStateNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateFriendStateNotification& operator=(UpdateFriendStateNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateFriendStateNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateFriendStateNotification* internal_default_instance() {
    return reinterpret_cast<const UpdateFriendStateNotification*>(
               &_UpdateFriendStateNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(UpdateFriendStateNotification& a, UpdateFriendStateNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateFriendStateNotification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateFriendStateNotification* New() const final {
    return CreateMaybeMessage<UpdateFriendStateNotification>(nullptr);
  }

  UpdateFriendStateNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateFriendStateNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateFriendStateNotification& from);
  void MergeFrom(const UpdateFriendStateNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateFriendStateNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.UpdateFriendStateNotification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangedFriendFieldNumber = 1,
    kAccountIdFieldNumber = 5,
    kForwardFieldNumber = 6,
  };
  // required .bgs.protocol.friends.v1.Friend changed_friend = 1;
  bool has_changed_friend() const;
  private:
  bool _internal_has_changed_friend() const;
  public:
  void clear_changed_friend();
  const ::bgs::protocol::friends::v1::Friend& changed_friend() const;
  ::bgs::protocol::friends::v1::Friend* release_changed_friend();
  ::bgs::protocol::friends::v1::Friend* mutable_changed_friend();
  void set_allocated_changed_friend(::bgs::protocol::friends::v1::Friend* changed_friend);
  private:
  const ::bgs::protocol::friends::v1::Friend& _internal_changed_friend() const;
  ::bgs::protocol::friends::v1::Friend* _internal_mutable_changed_friend();
  public:

  // optional .bgs.protocol.EntityId account_id = 5;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  const ::bgs::protocol::EntityId& account_id() const;
  ::bgs::protocol::EntityId* release_account_id();
  ::bgs::protocol::EntityId* mutable_account_id();
  void set_allocated_account_id(::bgs::protocol::EntityId* account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_account_id();
  public:

  // optional .bgs.protocol.ObjectAddress forward = 6 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_forward() const;
  private:
  bool _internal_has_forward() const;
  public:
  PROTOBUF_DEPRECATED void clear_forward();
  PROTOBUF_DEPRECATED const ::bgs::protocol::ObjectAddress& forward() const;
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* release_forward();
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* mutable_forward();
  PROTOBUF_DEPRECATED void set_allocated_forward(::bgs::protocol::ObjectAddress* forward);
  private:
  const ::bgs::protocol::ObjectAddress& _internal_forward() const;
  ::bgs::protocol::ObjectAddress* _internal_mutable_forward();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.UpdateFriendStateNotification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::friends::v1::Friend* changed_friend_;
  ::bgs::protocol::EntityId* account_id_;
  ::bgs::protocol::ObjectAddress* forward_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class InvitationNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.InvitationNotification) */ {
 public:
  InvitationNotification();
  virtual ~InvitationNotification();

  InvitationNotification(const InvitationNotification& from);
  InvitationNotification(InvitationNotification&& from) noexcept
    : InvitationNotification() {
    *this = ::std::move(from);
  }

  inline InvitationNotification& operator=(const InvitationNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvitationNotification& operator=(InvitationNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InvitationNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvitationNotification* internal_default_instance() {
    return reinterpret_cast<const InvitationNotification*>(
               &_InvitationNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(InvitationNotification& a, InvitationNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(InvitationNotification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InvitationNotification* New() const final {
    return CreateMaybeMessage<InvitationNotification>(nullptr);
  }

  InvitationNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InvitationNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InvitationNotification& from);
  void MergeFrom(const InvitationNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvitationNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.InvitationNotification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInvitationFieldNumber = 1,
    kAccountIdFieldNumber = 5,
    kForwardFieldNumber = 6,
    kReasonFieldNumber = 3,
  };
  // required .bgs.protocol.friends.v1.ReceivedInvitation invitation = 1;
  bool has_invitation() const;
  private:
  bool _internal_has_invitation() const;
  public:
  void clear_invitation();
  const ::bgs::protocol::friends::v1::ReceivedInvitation& invitation() const;
  ::bgs::protocol::friends::v1::ReceivedInvitation* release_invitation();
  ::bgs::protocol::friends::v1::ReceivedInvitation* mutable_invitation();
  void set_allocated_invitation(::bgs::protocol::friends::v1::ReceivedInvitation* invitation);
  private:
  const ::bgs::protocol::friends::v1::ReceivedInvitation& _internal_invitation() const;
  ::bgs::protocol::friends::v1::ReceivedInvitation* _internal_mutable_invitation();
  public:

  // optional .bgs.protocol.EntityId account_id = 5;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  const ::bgs::protocol::EntityId& account_id() const;
  ::bgs::protocol::EntityId* release_account_id();
  ::bgs::protocol::EntityId* mutable_account_id();
  void set_allocated_account_id(::bgs::protocol::EntityId* account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_account_id();
  public:

  // optional .bgs.protocol.ObjectAddress forward = 6 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_forward() const;
  private:
  bool _internal_has_forward() const;
  public:
  PROTOBUF_DEPRECATED void clear_forward();
  PROTOBUF_DEPRECATED const ::bgs::protocol::ObjectAddress& forward() const;
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* release_forward();
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* mutable_forward();
  PROTOBUF_DEPRECATED void set_allocated_forward(::bgs::protocol::ObjectAddress* forward);
  private:
  const ::bgs::protocol::ObjectAddress& _internal_forward() const;
  ::bgs::protocol::ObjectAddress* _internal_mutable_forward();
  public:

  // optional uint32 reason = 3 [default = 0];
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  ::PROTOBUF_NAMESPACE_ID::uint32 reason() const;
  void set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reason() const;
  void _internal_set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.InvitationNotification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::friends::v1::ReceivedInvitation* invitation_;
  ::bgs::protocol::EntityId* account_id_;
  ::bgs::protocol::ObjectAddress* forward_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reason_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SentInvitationAddedNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.SentInvitationAddedNotification) */ {
 public:
  SentInvitationAddedNotification();
  virtual ~SentInvitationAddedNotification();

  SentInvitationAddedNotification(const SentInvitationAddedNotification& from);
  SentInvitationAddedNotification(SentInvitationAddedNotification&& from) noexcept
    : SentInvitationAddedNotification() {
    *this = ::std::move(from);
  }

  inline SentInvitationAddedNotification& operator=(const SentInvitationAddedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline SentInvitationAddedNotification& operator=(SentInvitationAddedNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SentInvitationAddedNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SentInvitationAddedNotification* internal_default_instance() {
    return reinterpret_cast<const SentInvitationAddedNotification*>(
               &_SentInvitationAddedNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(SentInvitationAddedNotification& a, SentInvitationAddedNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(SentInvitationAddedNotification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SentInvitationAddedNotification* New() const final {
    return CreateMaybeMessage<SentInvitationAddedNotification>(nullptr);
  }

  SentInvitationAddedNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SentInvitationAddedNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SentInvitationAddedNotification& from);
  void MergeFrom(const SentInvitationAddedNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SentInvitationAddedNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.SentInvitationAddedNotification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kInvitationFieldNumber = 2,
    kForwardFieldNumber = 3,
  };
  // optional .bgs.protocol.EntityId account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  const ::bgs::protocol::EntityId& account_id() const;
  ::bgs::protocol::EntityId* release_account_id();
  ::bgs::protocol::EntityId* mutable_account_id();
  void set_allocated_account_id(::bgs::protocol::EntityId* account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_account_id();
  public:

  // optional .bgs.protocol.friends.v1.SentInvitation invitation = 2;
  bool has_invitation() const;
  private:
  bool _internal_has_invitation() const;
  public:
  void clear_invitation();
  const ::bgs::protocol::friends::v1::SentInvitation& invitation() const;
  ::bgs::protocol::friends::v1::SentInvitation* release_invitation();
  ::bgs::protocol::friends::v1::SentInvitation* mutable_invitation();
  void set_allocated_invitation(::bgs::protocol::friends::v1::SentInvitation* invitation);
  private:
  const ::bgs::protocol::friends::v1::SentInvitation& _internal_invitation() const;
  ::bgs::protocol::friends::v1::SentInvitation* _internal_mutable_invitation();
  public:

  // optional .bgs.protocol.ObjectAddress forward = 3 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_forward() const;
  private:
  bool _internal_has_forward() const;
  public:
  PROTOBUF_DEPRECATED void clear_forward();
  PROTOBUF_DEPRECATED const ::bgs::protocol::ObjectAddress& forward() const;
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* release_forward();
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* mutable_forward();
  PROTOBUF_DEPRECATED void set_allocated_forward(::bgs::protocol::ObjectAddress* forward);
  private:
  const ::bgs::protocol::ObjectAddress& _internal_forward() const;
  ::bgs::protocol::ObjectAddress* _internal_mutable_forward();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.SentInvitationAddedNotification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* account_id_;
  ::bgs::protocol::friends::v1::SentInvitation* invitation_;
  ::bgs::protocol::ObjectAddress* forward_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SentInvitationRemovedNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.friends.v1.SentInvitationRemovedNotification) */ {
 public:
  SentInvitationRemovedNotification();
  virtual ~SentInvitationRemovedNotification();

  SentInvitationRemovedNotification(const SentInvitationRemovedNotification& from);
  SentInvitationRemovedNotification(SentInvitationRemovedNotification&& from) noexcept
    : SentInvitationRemovedNotification() {
    *this = ::std::move(from);
  }

  inline SentInvitationRemovedNotification& operator=(const SentInvitationRemovedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline SentInvitationRemovedNotification& operator=(SentInvitationRemovedNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SentInvitationRemovedNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SentInvitationRemovedNotification* internal_default_instance() {
    return reinterpret_cast<const SentInvitationRemovedNotification*>(
               &_SentInvitationRemovedNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(SentInvitationRemovedNotification& a, SentInvitationRemovedNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(SentInvitationRemovedNotification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SentInvitationRemovedNotification* New() const final {
    return CreateMaybeMessage<SentInvitationRemovedNotification>(nullptr);
  }

  SentInvitationRemovedNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SentInvitationRemovedNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SentInvitationRemovedNotification& from);
  void MergeFrom(const SentInvitationRemovedNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SentInvitationRemovedNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.friends.v1.SentInvitationRemovedNotification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kForwardFieldNumber = 4,
    kInvitationIdFieldNumber = 2,
    kReasonFieldNumber = 3,
  };
  // optional .bgs.protocol.EntityId account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  const ::bgs::protocol::EntityId& account_id() const;
  ::bgs::protocol::EntityId* release_account_id();
  ::bgs::protocol::EntityId* mutable_account_id();
  void set_allocated_account_id(::bgs::protocol::EntityId* account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_account_id();
  public:

  // optional .bgs.protocol.ObjectAddress forward = 4 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_forward() const;
  private:
  bool _internal_has_forward() const;
  public:
  PROTOBUF_DEPRECATED void clear_forward();
  PROTOBUF_DEPRECATED const ::bgs::protocol::ObjectAddress& forward() const;
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* release_forward();
  PROTOBUF_DEPRECATED ::bgs::protocol::ObjectAddress* mutable_forward();
  PROTOBUF_DEPRECATED void set_allocated_forward(::bgs::protocol::ObjectAddress* forward);
  private:
  const ::bgs::protocol::ObjectAddress& _internal_forward() const;
  ::bgs::protocol::ObjectAddress* _internal_mutable_forward();
  public:

  // optional fixed64 invitation_id = 2;
  bool has_invitation_id() const;
  private:
  bool _internal_has_invitation_id() const;
  public:
  void clear_invitation_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 invitation_id() const;
  void set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_invitation_id() const;
  void _internal_set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 reason = 3;
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  ::PROTOBUF_NAMESPACE_ID::uint32 reason() const;
  void set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reason() const;
  void _internal_set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.friends.v1.SentInvitationRemovedNotification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* account_id_;
  ::bgs::protocol::ObjectAddress* forward_;
  ::PROTOBUF_NAMESPACE_ID::uint64 invitation_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reason_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SubscribeRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool SubscribeRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool SubscribeRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& SubscribeRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& SubscribeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SubscribeRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* SubscribeRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.SubscribeRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* SubscribeRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* SubscribeRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.SubscribeRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void SubscribeRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.SubscribeRequest.agent_id)
}

// required uint64 object_id = 2;
inline bool SubscribeRequest::_internal_has_object_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SubscribeRequest::has_object_id() const {
  return _internal_has_object_id();
}
inline void SubscribeRequest::clear_object_id() {
  object_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SubscribeRequest::_internal_object_id() const {
  return object_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SubscribeRequest::object_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SubscribeRequest.object_id)
  return _internal_object_id();
}
inline void SubscribeRequest::_internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  object_id_ = value;
}
inline void SubscribeRequest::set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.SubscribeRequest.object_id)
}

// optional .bgs.protocol.ObjectAddress forward = 3 [deprecated = true];
inline bool SubscribeRequest::_internal_has_forward() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || forward_ != nullptr);
  return value;
}
inline bool SubscribeRequest::has_forward() const {
  return _internal_has_forward();
}
inline const ::bgs::protocol::ObjectAddress& SubscribeRequest::_internal_forward() const {
  const ::bgs::protocol::ObjectAddress* p = forward_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ObjectAddress*>(
      &::bgs::protocol::_ObjectAddress_default_instance_);
}
inline const ::bgs::protocol::ObjectAddress& SubscribeRequest::forward() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SubscribeRequest.forward)
  return _internal_forward();
}
inline ::bgs::protocol::ObjectAddress* SubscribeRequest::release_forward() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.SubscribeRequest.forward)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::ObjectAddress* temp = forward_;
  forward_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ObjectAddress* SubscribeRequest::_internal_mutable_forward() {
  _has_bits_[0] |= 0x00000002u;
  if (forward_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ObjectAddress>(GetArenaNoVirtual());
    forward_ = p;
  }
  return forward_;
}
inline ::bgs::protocol::ObjectAddress* SubscribeRequest::mutable_forward() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.SubscribeRequest.forward)
  return _internal_mutable_forward();
}
inline void SubscribeRequest::set_allocated_forward(::bgs::protocol::ObjectAddress* forward) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forward_);
  }
  if (forward) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      forward = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, forward, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  forward_ = forward;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.SubscribeRequest.forward)
}

// -------------------------------------------------------------------

// UnsubscribeRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool UnsubscribeRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool UnsubscribeRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& UnsubscribeRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& UnsubscribeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.UnsubscribeRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* UnsubscribeRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.UnsubscribeRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* UnsubscribeRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* UnsubscribeRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.UnsubscribeRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void UnsubscribeRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.UnsubscribeRequest.agent_id)
}

// optional uint64 object_id = 2;
inline bool UnsubscribeRequest::_internal_has_object_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UnsubscribeRequest::has_object_id() const {
  return _internal_has_object_id();
}
inline void UnsubscribeRequest::clear_object_id() {
  object_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsubscribeRequest::_internal_object_id() const {
  return object_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsubscribeRequest::object_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.UnsubscribeRequest.object_id)
  return _internal_object_id();
}
inline void UnsubscribeRequest::_internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  object_id_ = value;
}
inline void UnsubscribeRequest::set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.UnsubscribeRequest.object_id)
}

// optional .bgs.protocol.ObjectAddress forward = 3 [deprecated = true];
inline bool UnsubscribeRequest::_internal_has_forward() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || forward_ != nullptr);
  return value;
}
inline bool UnsubscribeRequest::has_forward() const {
  return _internal_has_forward();
}
inline const ::bgs::protocol::ObjectAddress& UnsubscribeRequest::_internal_forward() const {
  const ::bgs::protocol::ObjectAddress* p = forward_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ObjectAddress*>(
      &::bgs::protocol::_ObjectAddress_default_instance_);
}
inline const ::bgs::protocol::ObjectAddress& UnsubscribeRequest::forward() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.UnsubscribeRequest.forward)
  return _internal_forward();
}
inline ::bgs::protocol::ObjectAddress* UnsubscribeRequest::release_forward() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.UnsubscribeRequest.forward)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::ObjectAddress* temp = forward_;
  forward_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ObjectAddress* UnsubscribeRequest::_internal_mutable_forward() {
  _has_bits_[0] |= 0x00000002u;
  if (forward_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ObjectAddress>(GetArenaNoVirtual());
    forward_ = p;
  }
  return forward_;
}
inline ::bgs::protocol::ObjectAddress* UnsubscribeRequest::mutable_forward() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.UnsubscribeRequest.forward)
  return _internal_mutable_forward();
}
inline void UnsubscribeRequest::set_allocated_forward(::bgs::protocol::ObjectAddress* forward) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forward_);
  }
  if (forward) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      forward = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, forward, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  forward_ = forward;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.UnsubscribeRequest.forward)
}

// -------------------------------------------------------------------

// SendInvitationRequest

// optional .bgs.protocol.Identity agent_identity = 1;
inline bool SendInvitationRequest::_internal_has_agent_identity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_identity_ != nullptr);
  return value;
}
inline bool SendInvitationRequest::has_agent_identity() const {
  return _internal_has_agent_identity();
}
inline const ::bgs::protocol::Identity& SendInvitationRequest::_internal_agent_identity() const {
  const ::bgs::protocol::Identity* p = agent_identity_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::Identity*>(
      &::bgs::protocol::_Identity_default_instance_);
}
inline const ::bgs::protocol::Identity& SendInvitationRequest::agent_identity() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SendInvitationRequest.agent_identity)
  return _internal_agent_identity();
}
inline ::bgs::protocol::Identity* SendInvitationRequest::release_agent_identity() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.SendInvitationRequest.agent_identity)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::Identity* temp = agent_identity_;
  agent_identity_ = nullptr;
  return temp;
}
inline ::bgs::protocol::Identity* SendInvitationRequest::_internal_mutable_agent_identity() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_identity_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::Identity>(GetArenaNoVirtual());
    agent_identity_ = p;
  }
  return agent_identity_;
}
inline ::bgs::protocol::Identity* SendInvitationRequest::mutable_agent_identity() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.SendInvitationRequest.agent_identity)
  return _internal_mutable_agent_identity();
}
inline void SendInvitationRequest::set_allocated_agent_identity(::bgs::protocol::Identity* agent_identity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_identity_);
  }
  if (agent_identity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_identity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_identity, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_identity_ = agent_identity;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.SendInvitationRequest.agent_identity)
}

// required .bgs.protocol.EntityId target_id = 2;
inline bool SendInvitationRequest::_internal_has_target_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || target_id_ != nullptr);
  return value;
}
inline bool SendInvitationRequest::has_target_id() const {
  return _internal_has_target_id();
}
inline const ::bgs::protocol::EntityId& SendInvitationRequest::_internal_target_id() const {
  const ::bgs::protocol::EntityId* p = target_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& SendInvitationRequest::target_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SendInvitationRequest.target_id)
  return _internal_target_id();
}
inline ::bgs::protocol::EntityId* SendInvitationRequest::release_target_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.SendInvitationRequest.target_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = target_id_;
  target_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* SendInvitationRequest::_internal_mutable_target_id() {
  _has_bits_[0] |= 0x00000002u;
  if (target_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    target_id_ = p;
  }
  return target_id_;
}
inline ::bgs::protocol::EntityId* SendInvitationRequest::mutable_target_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.SendInvitationRequest.target_id)
  return _internal_mutable_target_id();
}
inline void SendInvitationRequest::set_allocated_target_id(::bgs::protocol::EntityId* target_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_id_);
  }
  if (target_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  target_id_ = target_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.SendInvitationRequest.target_id)
}

// required .bgs.protocol.InvitationParams params = 3;
inline bool SendInvitationRequest::_internal_has_params() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || params_ != nullptr);
  return value;
}
inline bool SendInvitationRequest::has_params() const {
  return _internal_has_params();
}
inline const ::bgs::protocol::InvitationParams& SendInvitationRequest::_internal_params() const {
  const ::bgs::protocol::InvitationParams* p = params_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::InvitationParams*>(
      &::bgs::protocol::_InvitationParams_default_instance_);
}
inline const ::bgs::protocol::InvitationParams& SendInvitationRequest::params() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SendInvitationRequest.params)
  return _internal_params();
}
inline ::bgs::protocol::InvitationParams* SendInvitationRequest::release_params() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.SendInvitationRequest.params)
  _has_bits_[0] &= ~0x00000004u;
  ::bgs::protocol::InvitationParams* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::bgs::protocol::InvitationParams* SendInvitationRequest::_internal_mutable_params() {
  _has_bits_[0] |= 0x00000004u;
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::InvitationParams>(GetArenaNoVirtual());
    params_ = p;
  }
  return params_;
}
inline ::bgs::protocol::InvitationParams* SendInvitationRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.SendInvitationRequest.params)
  return _internal_mutable_params();
}
inline void SendInvitationRequest::set_allocated_params(::bgs::protocol::InvitationParams* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.SendInvitationRequest.params)
}

// -------------------------------------------------------------------

// RevokeInvitationRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool RevokeInvitationRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool RevokeInvitationRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& RevokeInvitationRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& RevokeInvitationRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.RevokeInvitationRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* RevokeInvitationRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.RevokeInvitationRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* RevokeInvitationRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* RevokeInvitationRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.RevokeInvitationRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void RevokeInvitationRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.RevokeInvitationRequest.agent_id)
}

// optional fixed64 invitation_id = 2;
inline bool RevokeInvitationRequest::_internal_has_invitation_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RevokeInvitationRequest::has_invitation_id() const {
  return _internal_has_invitation_id();
}
inline void RevokeInvitationRequest::clear_invitation_id() {
  invitation_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RevokeInvitationRequest::_internal_invitation_id() const {
  return invitation_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RevokeInvitationRequest::invitation_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.RevokeInvitationRequest.invitation_id)
  return _internal_invitation_id();
}
inline void RevokeInvitationRequest::_internal_set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  invitation_id_ = value;
}
inline void RevokeInvitationRequest::set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_invitation_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.RevokeInvitationRequest.invitation_id)
}

// -------------------------------------------------------------------

// AcceptInvitationRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool AcceptInvitationRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool AcceptInvitationRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& AcceptInvitationRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& AcceptInvitationRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.AcceptInvitationRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* AcceptInvitationRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.AcceptInvitationRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* AcceptInvitationRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* AcceptInvitationRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.AcceptInvitationRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void AcceptInvitationRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.AcceptInvitationRequest.agent_id)
}

// required fixed64 invitation_id = 3;
inline bool AcceptInvitationRequest::_internal_has_invitation_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool AcceptInvitationRequest::has_invitation_id() const {
  return _internal_has_invitation_id();
}
inline void AcceptInvitationRequest::clear_invitation_id() {
  invitation_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptInvitationRequest::_internal_invitation_id() const {
  return invitation_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptInvitationRequest::invitation_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.AcceptInvitationRequest.invitation_id)
  return _internal_invitation_id();
}
inline void AcceptInvitationRequest::_internal_set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  invitation_id_ = value;
}
inline void AcceptInvitationRequest::set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_invitation_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.AcceptInvitationRequest.invitation_id)
}

// optional .bgs.protocol.friends.v1.AcceptInvitationOptions options = 4;
inline bool AcceptInvitationRequest::_internal_has_options() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || options_ != nullptr);
  return value;
}
inline bool AcceptInvitationRequest::has_options() const {
  return _internal_has_options();
}
inline const ::bgs::protocol::friends::v1::AcceptInvitationOptions& AcceptInvitationRequest::_internal_options() const {
  const ::bgs::protocol::friends::v1::AcceptInvitationOptions* p = options_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::friends::v1::AcceptInvitationOptions*>(
      &::bgs::protocol::friends::v1::_AcceptInvitationOptions_default_instance_);
}
inline const ::bgs::protocol::friends::v1::AcceptInvitationOptions& AcceptInvitationRequest::options() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.AcceptInvitationRequest.options)
  return _internal_options();
}
inline ::bgs::protocol::friends::v1::AcceptInvitationOptions* AcceptInvitationRequest::release_options() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.AcceptInvitationRequest.options)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::friends::v1::AcceptInvitationOptions* temp = options_;
  options_ = nullptr;
  return temp;
}
inline ::bgs::protocol::friends::v1::AcceptInvitationOptions* AcceptInvitationRequest::_internal_mutable_options() {
  _has_bits_[0] |= 0x00000002u;
  if (options_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::friends::v1::AcceptInvitationOptions>(GetArenaNoVirtual());
    options_ = p;
  }
  return options_;
}
inline ::bgs::protocol::friends::v1::AcceptInvitationOptions* AcceptInvitationRequest::mutable_options() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.AcceptInvitationRequest.options)
  return _internal_mutable_options();
}
inline void AcceptInvitationRequest::set_allocated_options(::bgs::protocol::friends::v1::AcceptInvitationOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(options_);
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  options_ = options;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.AcceptInvitationRequest.options)
}

// -------------------------------------------------------------------

// DeclineInvitationRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool DeclineInvitationRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool DeclineInvitationRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& DeclineInvitationRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& DeclineInvitationRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.DeclineInvitationRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* DeclineInvitationRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.DeclineInvitationRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* DeclineInvitationRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* DeclineInvitationRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.DeclineInvitationRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void DeclineInvitationRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.DeclineInvitationRequest.agent_id)
}

// required fixed64 invitation_id = 3;
inline bool DeclineInvitationRequest::_internal_has_invitation_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DeclineInvitationRequest::has_invitation_id() const {
  return _internal_has_invitation_id();
}
inline void DeclineInvitationRequest::clear_invitation_id() {
  invitation_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DeclineInvitationRequest::_internal_invitation_id() const {
  return invitation_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DeclineInvitationRequest::invitation_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.DeclineInvitationRequest.invitation_id)
  return _internal_invitation_id();
}
inline void DeclineInvitationRequest::_internal_set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  invitation_id_ = value;
}
inline void DeclineInvitationRequest::set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_invitation_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.DeclineInvitationRequest.invitation_id)
}

// -------------------------------------------------------------------

// IgnoreInvitationRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool IgnoreInvitationRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool IgnoreInvitationRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& IgnoreInvitationRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& IgnoreInvitationRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.IgnoreInvitationRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* IgnoreInvitationRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.IgnoreInvitationRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* IgnoreInvitationRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* IgnoreInvitationRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.IgnoreInvitationRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void IgnoreInvitationRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.IgnoreInvitationRequest.agent_id)
}

// required fixed64 invitation_id = 3;
inline bool IgnoreInvitationRequest::_internal_has_invitation_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool IgnoreInvitationRequest::has_invitation_id() const {
  return _internal_has_invitation_id();
}
inline void IgnoreInvitationRequest::clear_invitation_id() {
  invitation_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IgnoreInvitationRequest::_internal_invitation_id() const {
  return invitation_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IgnoreInvitationRequest::invitation_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.IgnoreInvitationRequest.invitation_id)
  return _internal_invitation_id();
}
inline void IgnoreInvitationRequest::_internal_set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  invitation_id_ = value;
}
inline void IgnoreInvitationRequest::set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_invitation_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.IgnoreInvitationRequest.invitation_id)
}

// optional fixed32 program = 4;
inline bool IgnoreInvitationRequest::_internal_has_program() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool IgnoreInvitationRequest::has_program() const {
  return _internal_has_program();
}
inline void IgnoreInvitationRequest::clear_program() {
  program_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IgnoreInvitationRequest::_internal_program() const {
  return program_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IgnoreInvitationRequest::program() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.IgnoreInvitationRequest.program)
  return _internal_program();
}
inline void IgnoreInvitationRequest::_internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  program_ = value;
}
inline void IgnoreInvitationRequest::set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_program(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.IgnoreInvitationRequest.program)
}

// -------------------------------------------------------------------

// RemoveFriendRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool RemoveFriendRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool RemoveFriendRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& RemoveFriendRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& RemoveFriendRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.RemoveFriendRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* RemoveFriendRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.RemoveFriendRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* RemoveFriendRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* RemoveFriendRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.RemoveFriendRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void RemoveFriendRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.RemoveFriendRequest.agent_id)
}

// required .bgs.protocol.EntityId target_id = 2;
inline bool RemoveFriendRequest::_internal_has_target_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || target_id_ != nullptr);
  return value;
}
inline bool RemoveFriendRequest::has_target_id() const {
  return _internal_has_target_id();
}
inline const ::bgs::protocol::EntityId& RemoveFriendRequest::_internal_target_id() const {
  const ::bgs::protocol::EntityId* p = target_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& RemoveFriendRequest::target_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.RemoveFriendRequest.target_id)
  return _internal_target_id();
}
inline ::bgs::protocol::EntityId* RemoveFriendRequest::release_target_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.RemoveFriendRequest.target_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = target_id_;
  target_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* RemoveFriendRequest::_internal_mutable_target_id() {
  _has_bits_[0] |= 0x00000002u;
  if (target_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    target_id_ = p;
  }
  return target_id_;
}
inline ::bgs::protocol::EntityId* RemoveFriendRequest::mutable_target_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.RemoveFriendRequest.target_id)
  return _internal_mutable_target_id();
}
inline void RemoveFriendRequest::set_allocated_target_id(::bgs::protocol::EntityId* target_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_id_);
  }
  if (target_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  target_id_ = target_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.RemoveFriendRequest.target_id)
}

// -------------------------------------------------------------------

// RevokeAllInvitationsRequest

// optional .bgs.protocol.EntityId agent_id = 2;
inline bool RevokeAllInvitationsRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool RevokeAllInvitationsRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& RevokeAllInvitationsRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& RevokeAllInvitationsRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.RevokeAllInvitationsRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* RevokeAllInvitationsRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.RevokeAllInvitationsRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* RevokeAllInvitationsRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* RevokeAllInvitationsRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.RevokeAllInvitationsRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void RevokeAllInvitationsRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.RevokeAllInvitationsRequest.agent_id)
}

// -------------------------------------------------------------------

// ViewFriendsRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool ViewFriendsRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool ViewFriendsRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& ViewFriendsRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& ViewFriendsRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.ViewFriendsRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* ViewFriendsRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.ViewFriendsRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* ViewFriendsRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* ViewFriendsRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.ViewFriendsRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void ViewFriendsRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.ViewFriendsRequest.agent_id)
}

// required .bgs.protocol.EntityId target_id = 2;
inline bool ViewFriendsRequest::_internal_has_target_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || target_id_ != nullptr);
  return value;
}
inline bool ViewFriendsRequest::has_target_id() const {
  return _internal_has_target_id();
}
inline const ::bgs::protocol::EntityId& ViewFriendsRequest::_internal_target_id() const {
  const ::bgs::protocol::EntityId* p = target_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& ViewFriendsRequest::target_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.ViewFriendsRequest.target_id)
  return _internal_target_id();
}
inline ::bgs::protocol::EntityId* ViewFriendsRequest::release_target_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.ViewFriendsRequest.target_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = target_id_;
  target_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* ViewFriendsRequest::_internal_mutable_target_id() {
  _has_bits_[0] |= 0x00000002u;
  if (target_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    target_id_ = p;
  }
  return target_id_;
}
inline ::bgs::protocol::EntityId* ViewFriendsRequest::mutable_target_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.ViewFriendsRequest.target_id)
  return _internal_mutable_target_id();
}
inline void ViewFriendsRequest::set_allocated_target_id(::bgs::protocol::EntityId* target_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_id_);
  }
  if (target_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  target_id_ = target_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.ViewFriendsRequest.target_id)
}

// -------------------------------------------------------------------

// ViewFriendsResponse

// repeated .bgs.protocol.friends.v1.FriendOfFriend friends = 1;
inline int ViewFriendsResponse::_internal_friends_size() const {
  return friends_.size();
}
inline int ViewFriendsResponse::friends_size() const {
  return _internal_friends_size();
}
inline ::bgs::protocol::friends::v1::FriendOfFriend* ViewFriendsResponse::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.ViewFriendsResponse.friends)
  return friends_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::friends::v1::FriendOfFriend >*
ViewFriendsResponse::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.friends.v1.ViewFriendsResponse.friends)
  return &friends_;
}
inline const ::bgs::protocol::friends::v1::FriendOfFriend& ViewFriendsResponse::_internal_friends(int index) const {
  return friends_.Get(index);
}
inline const ::bgs::protocol::friends::v1::FriendOfFriend& ViewFriendsResponse::friends(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.ViewFriendsResponse.friends)
  return _internal_friends(index);
}
inline ::bgs::protocol::friends::v1::FriendOfFriend* ViewFriendsResponse::_internal_add_friends() {
  return friends_.Add();
}
inline ::bgs::protocol::friends::v1::FriendOfFriend* ViewFriendsResponse::add_friends() {
  // @@protoc_insertion_point(field_add:bgs.protocol.friends.v1.ViewFriendsResponse.friends)
  return _internal_add_friends();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::friends::v1::FriendOfFriend >&
ViewFriendsResponse::friends() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.friends.v1.ViewFriendsResponse.friends)
  return friends_;
}

// -------------------------------------------------------------------

// UpdateFriendStateRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool UpdateFriendStateRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool UpdateFriendStateRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& UpdateFriendStateRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& UpdateFriendStateRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.UpdateFriendStateRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* UpdateFriendStateRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.UpdateFriendStateRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* UpdateFriendStateRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* UpdateFriendStateRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.UpdateFriendStateRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void UpdateFriendStateRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.UpdateFriendStateRequest.agent_id)
}

// required .bgs.protocol.EntityId target_id = 2;
inline bool UpdateFriendStateRequest::_internal_has_target_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || target_id_ != nullptr);
  return value;
}
inline bool UpdateFriendStateRequest::has_target_id() const {
  return _internal_has_target_id();
}
inline const ::bgs::protocol::EntityId& UpdateFriendStateRequest::_internal_target_id() const {
  const ::bgs::protocol::EntityId* p = target_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& UpdateFriendStateRequest::target_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.UpdateFriendStateRequest.target_id)
  return _internal_target_id();
}
inline ::bgs::protocol::EntityId* UpdateFriendStateRequest::release_target_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.UpdateFriendStateRequest.target_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = target_id_;
  target_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* UpdateFriendStateRequest::_internal_mutable_target_id() {
  _has_bits_[0] |= 0x00000002u;
  if (target_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    target_id_ = p;
  }
  return target_id_;
}
inline ::bgs::protocol::EntityId* UpdateFriendStateRequest::mutable_target_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.UpdateFriendStateRequest.target_id)
  return _internal_mutable_target_id();
}
inline void UpdateFriendStateRequest::set_allocated_target_id(::bgs::protocol::EntityId* target_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_id_);
  }
  if (target_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  target_id_ = target_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.UpdateFriendStateRequest.target_id)
}

// repeated .bgs.protocol.Attribute attribute = 3;
inline int UpdateFriendStateRequest::_internal_attribute_size() const {
  return attribute_.size();
}
inline int UpdateFriendStateRequest::attribute_size() const {
  return _internal_attribute_size();
}
inline ::bgs::protocol::Attribute* UpdateFriendStateRequest::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.UpdateFriendStateRequest.attribute)
  return attribute_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
UpdateFriendStateRequest::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.friends.v1.UpdateFriendStateRequest.attribute)
  return &attribute_;
}
inline const ::bgs::protocol::Attribute& UpdateFriendStateRequest::_internal_attribute(int index) const {
  return attribute_.Get(index);
}
inline const ::bgs::protocol::Attribute& UpdateFriendStateRequest::attribute(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.UpdateFriendStateRequest.attribute)
  return _internal_attribute(index);
}
inline ::bgs::protocol::Attribute* UpdateFriendStateRequest::_internal_add_attribute() {
  return attribute_.Add();
}
inline ::bgs::protocol::Attribute* UpdateFriendStateRequest::add_attribute() {
  // @@protoc_insertion_point(field_add:bgs.protocol.friends.v1.UpdateFriendStateRequest.attribute)
  return _internal_add_attribute();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
UpdateFriendStateRequest::attribute() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.friends.v1.UpdateFriendStateRequest.attribute)
  return attribute_;
}

// -------------------------------------------------------------------

// GetFriendListRequest

// optional .bgs.protocol.EntityId agent_id = 2;
inline bool GetFriendListRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool GetFriendListRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& GetFriendListRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& GetFriendListRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.GetFriendListRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* GetFriendListRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.GetFriendListRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* GetFriendListRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* GetFriendListRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.GetFriendListRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void GetFriendListRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.GetFriendListRequest.agent_id)
}

// -------------------------------------------------------------------

// GetFriendListResponse

// repeated .bgs.protocol.friends.v1.Friend friends = 1;
inline int GetFriendListResponse::_internal_friends_size() const {
  return friends_.size();
}
inline int GetFriendListResponse::friends_size() const {
  return _internal_friends_size();
}
inline ::bgs::protocol::friends::v1::Friend* GetFriendListResponse::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.GetFriendListResponse.friends)
  return friends_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::friends::v1::Friend >*
GetFriendListResponse::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.friends.v1.GetFriendListResponse.friends)
  return &friends_;
}
inline const ::bgs::protocol::friends::v1::Friend& GetFriendListResponse::_internal_friends(int index) const {
  return friends_.Get(index);
}
inline const ::bgs::protocol::friends::v1::Friend& GetFriendListResponse::friends(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.GetFriendListResponse.friends)
  return _internal_friends(index);
}
inline ::bgs::protocol::friends::v1::Friend* GetFriendListResponse::_internal_add_friends() {
  return friends_.Add();
}
inline ::bgs::protocol::friends::v1::Friend* GetFriendListResponse::add_friends() {
  // @@protoc_insertion_point(field_add:bgs.protocol.friends.v1.GetFriendListResponse.friends)
  return _internal_add_friends();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::friends::v1::Friend >&
GetFriendListResponse::friends() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.friends.v1.GetFriendListResponse.friends)
  return friends_;
}

// -------------------------------------------------------------------

// CreateFriendshipRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool CreateFriendshipRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool CreateFriendshipRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& CreateFriendshipRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& CreateFriendshipRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.CreateFriendshipRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* CreateFriendshipRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.CreateFriendshipRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* CreateFriendshipRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* CreateFriendshipRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.CreateFriendshipRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void CreateFriendshipRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.CreateFriendshipRequest.agent_id)
}

// optional .bgs.protocol.EntityId target_id = 2;
inline bool CreateFriendshipRequest::_internal_has_target_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || target_id_ != nullptr);
  return value;
}
inline bool CreateFriendshipRequest::has_target_id() const {
  return _internal_has_target_id();
}
inline const ::bgs::protocol::EntityId& CreateFriendshipRequest::_internal_target_id() const {
  const ::bgs::protocol::EntityId* p = target_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& CreateFriendshipRequest::target_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.CreateFriendshipRequest.target_id)
  return _internal_target_id();
}
inline ::bgs::protocol::EntityId* CreateFriendshipRequest::release_target_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.CreateFriendshipRequest.target_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = target_id_;
  target_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* CreateFriendshipRequest::_internal_mutable_target_id() {
  _has_bits_[0] |= 0x00000002u;
  if (target_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    target_id_ = p;
  }
  return target_id_;
}
inline ::bgs::protocol::EntityId* CreateFriendshipRequest::mutable_target_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.CreateFriendshipRequest.target_id)
  return _internal_mutable_target_id();
}
inline void CreateFriendshipRequest::set_allocated_target_id(::bgs::protocol::EntityId* target_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_id_);
  }
  if (target_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  target_id_ = target_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.CreateFriendshipRequest.target_id)
}

// repeated uint32 role = 3 [packed = true];
inline int CreateFriendshipRequest::_internal_role_size() const {
  return role_.size();
}
inline int CreateFriendshipRequest::role_size() const {
  return _internal_role_size();
}
inline void CreateFriendshipRequest::clear_role() {
  role_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CreateFriendshipRequest::_internal_role(int index) const {
  return role_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CreateFriendshipRequest::role(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.CreateFriendshipRequest.role)
  return _internal_role(index);
}
inline void CreateFriendshipRequest::set_role(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  role_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.CreateFriendshipRequest.role)
}
inline void CreateFriendshipRequest::_internal_add_role(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  role_.Add(value);
}
inline void CreateFriendshipRequest::add_role(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_role(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.friends.v1.CreateFriendshipRequest.role)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CreateFriendshipRequest::_internal_role() const {
  return role_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CreateFriendshipRequest::role() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.friends.v1.CreateFriendshipRequest.role)
  return _internal_role();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CreateFriendshipRequest::_internal_mutable_role() {
  return &role_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CreateFriendshipRequest::mutable_role() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.friends.v1.CreateFriendshipRequest.role)
  return _internal_mutable_role();
}

// -------------------------------------------------------------------

// FriendNotification

// required .bgs.protocol.friends.v1.Friend target = 1;
inline bool FriendNotification::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || target_ != nullptr);
  return value;
}
inline bool FriendNotification::has_target() const {
  return _internal_has_target();
}
inline const ::bgs::protocol::friends::v1::Friend& FriendNotification::_internal_target() const {
  const ::bgs::protocol::friends::v1::Friend* p = target_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::friends::v1::Friend*>(
      &::bgs::protocol::friends::v1::_Friend_default_instance_);
}
inline const ::bgs::protocol::friends::v1::Friend& FriendNotification::target() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendNotification.target)
  return _internal_target();
}
inline ::bgs::protocol::friends::v1::Friend* FriendNotification::release_target() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.FriendNotification.target)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::friends::v1::Friend* temp = target_;
  target_ = nullptr;
  return temp;
}
inline ::bgs::protocol::friends::v1::Friend* FriendNotification::_internal_mutable_target() {
  _has_bits_[0] |= 0x00000001u;
  if (target_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::friends::v1::Friend>(GetArenaNoVirtual());
    target_ = p;
  }
  return target_;
}
inline ::bgs::protocol::friends::v1::Friend* FriendNotification::mutable_target() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.FriendNotification.target)
  return _internal_mutable_target();
}
inline void FriendNotification::set_allocated_target(::bgs::protocol::friends::v1::Friend* target) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_);
  }
  if (target) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.FriendNotification.target)
}

// optional .bgs.protocol.EntityId account_id = 5;
inline bool FriendNotification::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || account_id_ != nullptr);
  return value;
}
inline bool FriendNotification::has_account_id() const {
  return _internal_has_account_id();
}
inline const ::bgs::protocol::EntityId& FriendNotification::_internal_account_id() const {
  const ::bgs::protocol::EntityId* p = account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& FriendNotification::account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendNotification.account_id)
  return _internal_account_id();
}
inline ::bgs::protocol::EntityId* FriendNotification::release_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.FriendNotification.account_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = account_id_;
  account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* FriendNotification::_internal_mutable_account_id() {
  _has_bits_[0] |= 0x00000002u;
  if (account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    account_id_ = p;
  }
  return account_id_;
}
inline ::bgs::protocol::EntityId* FriendNotification::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.FriendNotification.account_id)
  return _internal_mutable_account_id();
}
inline void FriendNotification::set_allocated_account_id(::bgs::protocol::EntityId* account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_id_);
  }
  if (account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  account_id_ = account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.FriendNotification.account_id)
}

// optional .bgs.protocol.ObjectAddress forward = 6 [deprecated = true];
inline bool FriendNotification::_internal_has_forward() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || forward_ != nullptr);
  return value;
}
inline bool FriendNotification::has_forward() const {
  return _internal_has_forward();
}
inline const ::bgs::protocol::ObjectAddress& FriendNotification::_internal_forward() const {
  const ::bgs::protocol::ObjectAddress* p = forward_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ObjectAddress*>(
      &::bgs::protocol::_ObjectAddress_default_instance_);
}
inline const ::bgs::protocol::ObjectAddress& FriendNotification::forward() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.FriendNotification.forward)
  return _internal_forward();
}
inline ::bgs::protocol::ObjectAddress* FriendNotification::release_forward() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.FriendNotification.forward)
  _has_bits_[0] &= ~0x00000004u;
  ::bgs::protocol::ObjectAddress* temp = forward_;
  forward_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ObjectAddress* FriendNotification::_internal_mutable_forward() {
  _has_bits_[0] |= 0x00000004u;
  if (forward_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ObjectAddress>(GetArenaNoVirtual());
    forward_ = p;
  }
  return forward_;
}
inline ::bgs::protocol::ObjectAddress* FriendNotification::mutable_forward() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.FriendNotification.forward)
  return _internal_mutable_forward();
}
inline void FriendNotification::set_allocated_forward(::bgs::protocol::ObjectAddress* forward) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forward_);
  }
  if (forward) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      forward = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, forward, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  forward_ = forward;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.FriendNotification.forward)
}

// -------------------------------------------------------------------

// UpdateFriendStateNotification

// required .bgs.protocol.friends.v1.Friend changed_friend = 1;
inline bool UpdateFriendStateNotification::_internal_has_changed_friend() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || changed_friend_ != nullptr);
  return value;
}
inline bool UpdateFriendStateNotification::has_changed_friend() const {
  return _internal_has_changed_friend();
}
inline const ::bgs::protocol::friends::v1::Friend& UpdateFriendStateNotification::_internal_changed_friend() const {
  const ::bgs::protocol::friends::v1::Friend* p = changed_friend_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::friends::v1::Friend*>(
      &::bgs::protocol::friends::v1::_Friend_default_instance_);
}
inline const ::bgs::protocol::friends::v1::Friend& UpdateFriendStateNotification::changed_friend() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.UpdateFriendStateNotification.changed_friend)
  return _internal_changed_friend();
}
inline ::bgs::protocol::friends::v1::Friend* UpdateFriendStateNotification::release_changed_friend() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.UpdateFriendStateNotification.changed_friend)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::friends::v1::Friend* temp = changed_friend_;
  changed_friend_ = nullptr;
  return temp;
}
inline ::bgs::protocol::friends::v1::Friend* UpdateFriendStateNotification::_internal_mutable_changed_friend() {
  _has_bits_[0] |= 0x00000001u;
  if (changed_friend_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::friends::v1::Friend>(GetArenaNoVirtual());
    changed_friend_ = p;
  }
  return changed_friend_;
}
inline ::bgs::protocol::friends::v1::Friend* UpdateFriendStateNotification::mutable_changed_friend() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.UpdateFriendStateNotification.changed_friend)
  return _internal_mutable_changed_friend();
}
inline void UpdateFriendStateNotification::set_allocated_changed_friend(::bgs::protocol::friends::v1::Friend* changed_friend) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(changed_friend_);
  }
  if (changed_friend) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      changed_friend = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, changed_friend, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  changed_friend_ = changed_friend;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.UpdateFriendStateNotification.changed_friend)
}

// optional .bgs.protocol.EntityId account_id = 5;
inline bool UpdateFriendStateNotification::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || account_id_ != nullptr);
  return value;
}
inline bool UpdateFriendStateNotification::has_account_id() const {
  return _internal_has_account_id();
}
inline const ::bgs::protocol::EntityId& UpdateFriendStateNotification::_internal_account_id() const {
  const ::bgs::protocol::EntityId* p = account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& UpdateFriendStateNotification::account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.UpdateFriendStateNotification.account_id)
  return _internal_account_id();
}
inline ::bgs::protocol::EntityId* UpdateFriendStateNotification::release_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.UpdateFriendStateNotification.account_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = account_id_;
  account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* UpdateFriendStateNotification::_internal_mutable_account_id() {
  _has_bits_[0] |= 0x00000002u;
  if (account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    account_id_ = p;
  }
  return account_id_;
}
inline ::bgs::protocol::EntityId* UpdateFriendStateNotification::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.UpdateFriendStateNotification.account_id)
  return _internal_mutable_account_id();
}
inline void UpdateFriendStateNotification::set_allocated_account_id(::bgs::protocol::EntityId* account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_id_);
  }
  if (account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  account_id_ = account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.UpdateFriendStateNotification.account_id)
}

// optional .bgs.protocol.ObjectAddress forward = 6 [deprecated = true];
inline bool UpdateFriendStateNotification::_internal_has_forward() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || forward_ != nullptr);
  return value;
}
inline bool UpdateFriendStateNotification::has_forward() const {
  return _internal_has_forward();
}
inline const ::bgs::protocol::ObjectAddress& UpdateFriendStateNotification::_internal_forward() const {
  const ::bgs::protocol::ObjectAddress* p = forward_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ObjectAddress*>(
      &::bgs::protocol::_ObjectAddress_default_instance_);
}
inline const ::bgs::protocol::ObjectAddress& UpdateFriendStateNotification::forward() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.UpdateFriendStateNotification.forward)
  return _internal_forward();
}
inline ::bgs::protocol::ObjectAddress* UpdateFriendStateNotification::release_forward() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.UpdateFriendStateNotification.forward)
  _has_bits_[0] &= ~0x00000004u;
  ::bgs::protocol::ObjectAddress* temp = forward_;
  forward_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ObjectAddress* UpdateFriendStateNotification::_internal_mutable_forward() {
  _has_bits_[0] |= 0x00000004u;
  if (forward_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ObjectAddress>(GetArenaNoVirtual());
    forward_ = p;
  }
  return forward_;
}
inline ::bgs::protocol::ObjectAddress* UpdateFriendStateNotification::mutable_forward() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.UpdateFriendStateNotification.forward)
  return _internal_mutable_forward();
}
inline void UpdateFriendStateNotification::set_allocated_forward(::bgs::protocol::ObjectAddress* forward) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forward_);
  }
  if (forward) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      forward = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, forward, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  forward_ = forward;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.UpdateFriendStateNotification.forward)
}

// -------------------------------------------------------------------

// InvitationNotification

// required .bgs.protocol.friends.v1.ReceivedInvitation invitation = 1;
inline bool InvitationNotification::_internal_has_invitation() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || invitation_ != nullptr);
  return value;
}
inline bool InvitationNotification::has_invitation() const {
  return _internal_has_invitation();
}
inline const ::bgs::protocol::friends::v1::ReceivedInvitation& InvitationNotification::_internal_invitation() const {
  const ::bgs::protocol::friends::v1::ReceivedInvitation* p = invitation_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::friends::v1::ReceivedInvitation*>(
      &::bgs::protocol::friends::v1::_ReceivedInvitation_default_instance_);
}
inline const ::bgs::protocol::friends::v1::ReceivedInvitation& InvitationNotification::invitation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.InvitationNotification.invitation)
  return _internal_invitation();
}
inline ::bgs::protocol::friends::v1::ReceivedInvitation* InvitationNotification::release_invitation() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.InvitationNotification.invitation)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::friends::v1::ReceivedInvitation* temp = invitation_;
  invitation_ = nullptr;
  return temp;
}
inline ::bgs::protocol::friends::v1::ReceivedInvitation* InvitationNotification::_internal_mutable_invitation() {
  _has_bits_[0] |= 0x00000001u;
  if (invitation_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::friends::v1::ReceivedInvitation>(GetArenaNoVirtual());
    invitation_ = p;
  }
  return invitation_;
}
inline ::bgs::protocol::friends::v1::ReceivedInvitation* InvitationNotification::mutable_invitation() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.InvitationNotification.invitation)
  return _internal_mutable_invitation();
}
inline void InvitationNotification::set_allocated_invitation(::bgs::protocol::friends::v1::ReceivedInvitation* invitation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(invitation_);
  }
  if (invitation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      invitation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, invitation, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  invitation_ = invitation;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.InvitationNotification.invitation)
}

// optional uint32 reason = 3 [default = 0];
inline bool InvitationNotification::_internal_has_reason() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool InvitationNotification::has_reason() const {
  return _internal_has_reason();
}
inline void InvitationNotification::clear_reason() {
  reason_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 InvitationNotification::_internal_reason() const {
  return reason_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 InvitationNotification::reason() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.InvitationNotification.reason)
  return _internal_reason();
}
inline void InvitationNotification::_internal_set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  reason_ = value;
}
inline void InvitationNotification::set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.InvitationNotification.reason)
}

// optional .bgs.protocol.EntityId account_id = 5;
inline bool InvitationNotification::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || account_id_ != nullptr);
  return value;
}
inline bool InvitationNotification::has_account_id() const {
  return _internal_has_account_id();
}
inline const ::bgs::protocol::EntityId& InvitationNotification::_internal_account_id() const {
  const ::bgs::protocol::EntityId* p = account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& InvitationNotification::account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.InvitationNotification.account_id)
  return _internal_account_id();
}
inline ::bgs::protocol::EntityId* InvitationNotification::release_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.InvitationNotification.account_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = account_id_;
  account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* InvitationNotification::_internal_mutable_account_id() {
  _has_bits_[0] |= 0x00000002u;
  if (account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    account_id_ = p;
  }
  return account_id_;
}
inline ::bgs::protocol::EntityId* InvitationNotification::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.InvitationNotification.account_id)
  return _internal_mutable_account_id();
}
inline void InvitationNotification::set_allocated_account_id(::bgs::protocol::EntityId* account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_id_);
  }
  if (account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  account_id_ = account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.InvitationNotification.account_id)
}

// optional .bgs.protocol.ObjectAddress forward = 6 [deprecated = true];
inline bool InvitationNotification::_internal_has_forward() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || forward_ != nullptr);
  return value;
}
inline bool InvitationNotification::has_forward() const {
  return _internal_has_forward();
}
inline const ::bgs::protocol::ObjectAddress& InvitationNotification::_internal_forward() const {
  const ::bgs::protocol::ObjectAddress* p = forward_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ObjectAddress*>(
      &::bgs::protocol::_ObjectAddress_default_instance_);
}
inline const ::bgs::protocol::ObjectAddress& InvitationNotification::forward() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.InvitationNotification.forward)
  return _internal_forward();
}
inline ::bgs::protocol::ObjectAddress* InvitationNotification::release_forward() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.InvitationNotification.forward)
  _has_bits_[0] &= ~0x00000004u;
  ::bgs::protocol::ObjectAddress* temp = forward_;
  forward_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ObjectAddress* InvitationNotification::_internal_mutable_forward() {
  _has_bits_[0] |= 0x00000004u;
  if (forward_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ObjectAddress>(GetArenaNoVirtual());
    forward_ = p;
  }
  return forward_;
}
inline ::bgs::protocol::ObjectAddress* InvitationNotification::mutable_forward() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.InvitationNotification.forward)
  return _internal_mutable_forward();
}
inline void InvitationNotification::set_allocated_forward(::bgs::protocol::ObjectAddress* forward) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forward_);
  }
  if (forward) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      forward = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, forward, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  forward_ = forward;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.InvitationNotification.forward)
}

// -------------------------------------------------------------------

// SentInvitationAddedNotification

// optional .bgs.protocol.EntityId account_id = 1;
inline bool SentInvitationAddedNotification::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || account_id_ != nullptr);
  return value;
}
inline bool SentInvitationAddedNotification::has_account_id() const {
  return _internal_has_account_id();
}
inline const ::bgs::protocol::EntityId& SentInvitationAddedNotification::_internal_account_id() const {
  const ::bgs::protocol::EntityId* p = account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& SentInvitationAddedNotification::account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SentInvitationAddedNotification.account_id)
  return _internal_account_id();
}
inline ::bgs::protocol::EntityId* SentInvitationAddedNotification::release_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.SentInvitationAddedNotification.account_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = account_id_;
  account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* SentInvitationAddedNotification::_internal_mutable_account_id() {
  _has_bits_[0] |= 0x00000001u;
  if (account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    account_id_ = p;
  }
  return account_id_;
}
inline ::bgs::protocol::EntityId* SentInvitationAddedNotification::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.SentInvitationAddedNotification.account_id)
  return _internal_mutable_account_id();
}
inline void SentInvitationAddedNotification::set_allocated_account_id(::bgs::protocol::EntityId* account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_id_);
  }
  if (account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_id_ = account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.SentInvitationAddedNotification.account_id)
}

// optional .bgs.protocol.friends.v1.SentInvitation invitation = 2;
inline bool SentInvitationAddedNotification::_internal_has_invitation() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || invitation_ != nullptr);
  return value;
}
inline bool SentInvitationAddedNotification::has_invitation() const {
  return _internal_has_invitation();
}
inline const ::bgs::protocol::friends::v1::SentInvitation& SentInvitationAddedNotification::_internal_invitation() const {
  const ::bgs::protocol::friends::v1::SentInvitation* p = invitation_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::friends::v1::SentInvitation*>(
      &::bgs::protocol::friends::v1::_SentInvitation_default_instance_);
}
inline const ::bgs::protocol::friends::v1::SentInvitation& SentInvitationAddedNotification::invitation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SentInvitationAddedNotification.invitation)
  return _internal_invitation();
}
inline ::bgs::protocol::friends::v1::SentInvitation* SentInvitationAddedNotification::release_invitation() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.SentInvitationAddedNotification.invitation)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::friends::v1::SentInvitation* temp = invitation_;
  invitation_ = nullptr;
  return temp;
}
inline ::bgs::protocol::friends::v1::SentInvitation* SentInvitationAddedNotification::_internal_mutable_invitation() {
  _has_bits_[0] |= 0x00000002u;
  if (invitation_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::friends::v1::SentInvitation>(GetArenaNoVirtual());
    invitation_ = p;
  }
  return invitation_;
}
inline ::bgs::protocol::friends::v1::SentInvitation* SentInvitationAddedNotification::mutable_invitation() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.SentInvitationAddedNotification.invitation)
  return _internal_mutable_invitation();
}
inline void SentInvitationAddedNotification::set_allocated_invitation(::bgs::protocol::friends::v1::SentInvitation* invitation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(invitation_);
  }
  if (invitation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      invitation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, invitation, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  invitation_ = invitation;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.SentInvitationAddedNotification.invitation)
}

// optional .bgs.protocol.ObjectAddress forward = 3 [deprecated = true];
inline bool SentInvitationAddedNotification::_internal_has_forward() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || forward_ != nullptr);
  return value;
}
inline bool SentInvitationAddedNotification::has_forward() const {
  return _internal_has_forward();
}
inline const ::bgs::protocol::ObjectAddress& SentInvitationAddedNotification::_internal_forward() const {
  const ::bgs::protocol::ObjectAddress* p = forward_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ObjectAddress*>(
      &::bgs::protocol::_ObjectAddress_default_instance_);
}
inline const ::bgs::protocol::ObjectAddress& SentInvitationAddedNotification::forward() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SentInvitationAddedNotification.forward)
  return _internal_forward();
}
inline ::bgs::protocol::ObjectAddress* SentInvitationAddedNotification::release_forward() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.SentInvitationAddedNotification.forward)
  _has_bits_[0] &= ~0x00000004u;
  ::bgs::protocol::ObjectAddress* temp = forward_;
  forward_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ObjectAddress* SentInvitationAddedNotification::_internal_mutable_forward() {
  _has_bits_[0] |= 0x00000004u;
  if (forward_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ObjectAddress>(GetArenaNoVirtual());
    forward_ = p;
  }
  return forward_;
}
inline ::bgs::protocol::ObjectAddress* SentInvitationAddedNotification::mutable_forward() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.SentInvitationAddedNotification.forward)
  return _internal_mutable_forward();
}
inline void SentInvitationAddedNotification::set_allocated_forward(::bgs::protocol::ObjectAddress* forward) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forward_);
  }
  if (forward) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      forward = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, forward, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  forward_ = forward;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.SentInvitationAddedNotification.forward)
}

// -------------------------------------------------------------------

// SentInvitationRemovedNotification

// optional .bgs.protocol.EntityId account_id = 1;
inline bool SentInvitationRemovedNotification::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || account_id_ != nullptr);
  return value;
}
inline bool SentInvitationRemovedNotification::has_account_id() const {
  return _internal_has_account_id();
}
inline const ::bgs::protocol::EntityId& SentInvitationRemovedNotification::_internal_account_id() const {
  const ::bgs::protocol::EntityId* p = account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& SentInvitationRemovedNotification::account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SentInvitationRemovedNotification.account_id)
  return _internal_account_id();
}
inline ::bgs::protocol::EntityId* SentInvitationRemovedNotification::release_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.SentInvitationRemovedNotification.account_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = account_id_;
  account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* SentInvitationRemovedNotification::_internal_mutable_account_id() {
  _has_bits_[0] |= 0x00000001u;
  if (account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    account_id_ = p;
  }
  return account_id_;
}
inline ::bgs::protocol::EntityId* SentInvitationRemovedNotification::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.SentInvitationRemovedNotification.account_id)
  return _internal_mutable_account_id();
}
inline void SentInvitationRemovedNotification::set_allocated_account_id(::bgs::protocol::EntityId* account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_id_);
  }
  if (account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_id_ = account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.SentInvitationRemovedNotification.account_id)
}

// optional fixed64 invitation_id = 2;
inline bool SentInvitationRemovedNotification::_internal_has_invitation_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SentInvitationRemovedNotification::has_invitation_id() const {
  return _internal_has_invitation_id();
}
inline void SentInvitationRemovedNotification::clear_invitation_id() {
  invitation_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SentInvitationRemovedNotification::_internal_invitation_id() const {
  return invitation_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SentInvitationRemovedNotification::invitation_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SentInvitationRemovedNotification.invitation_id)
  return _internal_invitation_id();
}
inline void SentInvitationRemovedNotification::_internal_set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  invitation_id_ = value;
}
inline void SentInvitationRemovedNotification::set_invitation_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_invitation_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.SentInvitationRemovedNotification.invitation_id)
}

// optional uint32 reason = 3;
inline bool SentInvitationRemovedNotification::_internal_has_reason() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SentInvitationRemovedNotification::has_reason() const {
  return _internal_has_reason();
}
inline void SentInvitationRemovedNotification::clear_reason() {
  reason_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SentInvitationRemovedNotification::_internal_reason() const {
  return reason_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SentInvitationRemovedNotification::reason() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SentInvitationRemovedNotification.reason)
  return _internal_reason();
}
inline void SentInvitationRemovedNotification::_internal_set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  reason_ = value;
}
inline void SentInvitationRemovedNotification::set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.friends.v1.SentInvitationRemovedNotification.reason)
}

// optional .bgs.protocol.ObjectAddress forward = 4 [deprecated = true];
inline bool SentInvitationRemovedNotification::_internal_has_forward() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || forward_ != nullptr);
  return value;
}
inline bool SentInvitationRemovedNotification::has_forward() const {
  return _internal_has_forward();
}
inline const ::bgs::protocol::ObjectAddress& SentInvitationRemovedNotification::_internal_forward() const {
  const ::bgs::protocol::ObjectAddress* p = forward_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ObjectAddress*>(
      &::bgs::protocol::_ObjectAddress_default_instance_);
}
inline const ::bgs::protocol::ObjectAddress& SentInvitationRemovedNotification::forward() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.friends.v1.SentInvitationRemovedNotification.forward)
  return _internal_forward();
}
inline ::bgs::protocol::ObjectAddress* SentInvitationRemovedNotification::release_forward() {
  // @@protoc_insertion_point(field_release:bgs.protocol.friends.v1.SentInvitationRemovedNotification.forward)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::ObjectAddress* temp = forward_;
  forward_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ObjectAddress* SentInvitationRemovedNotification::_internal_mutable_forward() {
  _has_bits_[0] |= 0x00000002u;
  if (forward_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ObjectAddress>(GetArenaNoVirtual());
    forward_ = p;
  }
  return forward_;
}
inline ::bgs::protocol::ObjectAddress* SentInvitationRemovedNotification::mutable_forward() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.friends.v1.SentInvitationRemovedNotification.forward)
  return _internal_mutable_forward();
}
inline void SentInvitationRemovedNotification::set_allocated_forward(::bgs::protocol::ObjectAddress* forward) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forward_);
  }
  if (forward) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      forward = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, forward, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  forward_ = forward;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.friends.v1.SentInvitationRemovedNotification.forward)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace friends
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2ffriends_5fservice_2eproto
