// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/game_utilities_service.proto

#include "bgs/low/pb/client/game_utilities_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Attribute_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fcontent_5fhandle_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContentHandle_bgs_2flow_2fpb_2fclient_2fcontent_5fhandle_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityId_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessId_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Variant_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientInfo_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PlayerVariables_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto;
namespace bgs {
namespace protocol {
namespace game_utilities {
namespace v1 {
class ClientRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientRequest> _instance;
} _ClientRequest_default_instance_;
class ClientResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientResponse> _instance;
} _ClientResponse_default_instance_;
class ServerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerRequest> _instance;
} _ServerRequest_default_instance_;
class ServerResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerResponse> _instance;
} _ServerResponse_default_instance_;
class PresenceChannelCreatedRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PresenceChannelCreatedRequest> _instance;
} _PresenceChannelCreatedRequest_default_instance_;
class GetPlayerVariablesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPlayerVariablesRequest> _instance;
} _GetPlayerVariablesRequest_default_instance_;
class GetPlayerVariablesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPlayerVariablesResponse> _instance;
} _GetPlayerVariablesResponse_default_instance_;
class GameAccountOnlineNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GameAccountOnlineNotification> _instance;
} _GameAccountOnlineNotification_default_instance_;
class GameAccountOfflineNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GameAccountOfflineNotification> _instance;
} _GameAccountOfflineNotification_default_instance_;
class GetAchievementsFileRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAchievementsFileRequest> _instance;
} _GetAchievementsFileRequest_default_instance_;
class GetAchievementsFileResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAchievementsFileResponse> _instance;
} _GetAchievementsFileResponse_default_instance_;
class GetAllValuesForAttributeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllValuesForAttributeRequest> _instance;
} _GetAllValuesForAttributeRequest_default_instance_;
class GetAllValuesForAttributeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllValuesForAttributeResponse> _instance;
} _GetAllValuesForAttributeResponse_default_instance_;
class RegisterUtilitiesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterUtilitiesRequest> _instance;
} _RegisterUtilitiesRequest_default_instance_;
class RegisterUtilitiesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterUtilitiesResponse> _instance;
} _RegisterUtilitiesResponse_default_instance_;
class UnregisterUtilitiesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnregisterUtilitiesRequest> _instance;
} _UnregisterUtilitiesRequest_default_instance_;
}  // namespace v1
}  // namespace game_utilities
}  // namespace protocol
}  // namespace bgs
static void InitDefaultsscc_info_ClientRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_ClientRequest_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::ClientRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::ClientRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ClientRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_ClientRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_Attribute_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto.base,
      &scc_info_ProcessId_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto.base,
      &scc_info_EntityId_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto.base,
      &scc_info_ClientInfo_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_ClientResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_ClientResponse_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::ClientResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::ClientResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClientResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ClientResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_Attribute_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_GameAccountOfflineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_GameAccountOfflineNotification_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GameAccountOfflineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GameAccountOfflineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_EntityId_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto.base,
      &scc_info_ProcessId_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_GameAccountOnlineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_GameAccountOnlineNotification_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GameAccountOnlineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GameAccountOnlineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_EntityId_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto.base,
      &scc_info_ProcessId_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_GetAchievementsFileRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_GetAchievementsFileRequest_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAchievementsFileRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAchievementsFileRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_ProcessId_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_GetAchievementsFileResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_GetAchievementsFileResponse_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAchievementsFileResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAchievementsFileResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_ContentHandle_bgs_2flow_2fpb_2fclient_2fcontent_5fhandle_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_GetAllValuesForAttributeRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_GetAllValuesForAttributeRequest_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAllValuesForAttributeRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAllValuesForAttributeRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_EntityId_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_GetAllValuesForAttributeResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_GetAllValuesForAttributeResponse_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAllValuesForAttributeResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAllValuesForAttributeResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_Variant_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_GetPlayerVariablesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_GetPlayerVariablesRequest_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetPlayerVariablesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetPlayerVariablesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_PlayerVariables_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto.base,
      &scc_info_ProcessId_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_GetPlayerVariablesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_GetPlayerVariablesResponse_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPlayerVariablesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPlayerVariablesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_PlayerVariables_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_PresenceChannelCreatedRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_PresenceChannelCreatedRequest_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PresenceChannelCreatedRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PresenceChannelCreatedRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_EntityId_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto.base,
      &scc_info_ProcessId_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_RegisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_RegisterUtilitiesRequest_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_Attribute_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_RegisterUtilitiesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_RegisterUtilitiesResponse_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterUtilitiesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterUtilitiesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_ServerRequest_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::ServerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::ServerRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ServerRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ServerRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_Attribute_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto.base,
      &scc_info_ProcessId_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_ServerResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_ServerResponse_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::ServerResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::ServerResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ServerResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ServerResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {
      &scc_info_Attribute_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_UnregisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::game_utilities::v1::_UnregisterUtilitiesRequest_default_instance_;
    new (ptr) ::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnregisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnregisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto[16];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientRequest, attribute_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientRequest, host_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientRequest, account_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientRequest, game_account_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientRequest, program_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientRequest, client_info_),
  ~0u,
  0,
  1,
  2,
  4,
  3,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ClientResponse, attribute_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ServerRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ServerRequest, attribute_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ServerRequest, program_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ServerRequest, host_),
  ~0u,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ServerResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::ServerResponse, attribute_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest, id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest, game_account_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest, account_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest, host_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest, player_variables_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest, host_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse, player_variables_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification, game_account_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification, host_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification, session_id_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification, game_account_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification, host_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification, session_id_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest, host_),
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse, content_handle_),
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest, attribute_key_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest, agent_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest, program_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse, attribute_value_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest, attribute_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest, program_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse, client_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::bgs::protocol::game_utilities::v1::ClientRequest)},
  { 17, 23, sizeof(::bgs::protocol::game_utilities::v1::ClientResponse)},
  { 24, 32, sizeof(::bgs::protocol::game_utilities::v1::ServerRequest)},
  { 35, 41, sizeof(::bgs::protocol::game_utilities::v1::ServerResponse)},
  { 42, 51, sizeof(::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest)},
  { 55, 62, sizeof(::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest)},
  { 64, 70, sizeof(::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse)},
  { 71, 79, sizeof(::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification)},
  { 82, 90, sizeof(::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification)},
  { 93, 99, sizeof(::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest)},
  { 100, 106, sizeof(::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse)},
  { 107, 115, sizeof(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest)},
  { 118, 124, sizeof(::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse)},
  { 125, 132, sizeof(::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest)},
  { 134, 140, sizeof(::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse)},
  { 141, 146, sizeof(::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_ClientRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_ClientResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_ServerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_ServerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_PresenceChannelCreatedRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_GetPlayerVariablesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_GetPlayerVariablesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_GameAccountOnlineNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_GameAccountOfflineNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_GetAchievementsFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_GetAchievementsFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_GetAllValuesForAttributeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_GetAllValuesForAttributeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_RegisterUtilitiesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_RegisterUtilitiesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::game_utilities::v1::_UnregisterUtilitiesRequest_default_instance_),
};

const char descriptor_table_protodef_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n.bgs/low/pb/client/game_utilities_servi"
  "ce.proto\022\036bgs.protocol.game_utilities.v1"
  "\032\'bgs/low/pb/client/attribute_types.prot"
  "o\032,bgs/low/pb/client/content_handle_type"
  "s.proto\032$bgs/low/pb/client/entity_types."
  "proto\032,bgs/low/pb/client/game_utilities_"
  "types.proto\032!bgs/low/pb/client/rpc_types"
  ".proto\"\221\002\n\rClientRequest\022*\n\tattribute\030\001 "
  "\003(\0132\027.bgs.protocol.Attribute\022%\n\004host\030\002 \001"
  "(\0132\027.bgs.protocol.ProcessId\022*\n\naccount_i"
  "d\030\003 \001(\0132\026.bgs.protocol.EntityId\022/\n\017game_"
  "account_id\030\004 \001(\0132\026.bgs.protocol.EntityId"
  "\022\017\n\007program\030\005 \001(\007\022\?\n\013client_info\030\006 \001(\0132*"
  ".bgs.protocol.game_utilities.v1.ClientIn"
  "fo\"<\n\016ClientResponse\022*\n\tattribute\030\001 \003(\0132"
  "\027.bgs.protocol.Attribute\"s\n\rServerReques"
  "t\022*\n\tattribute\030\001 \003(\0132\027.bgs.protocol.Attr"
  "ibute\022\017\n\007program\030\002 \002(\007\022%\n\004host\030\003 \001(\0132\027.b"
  "gs.protocol.ProcessId\"<\n\016ServerResponse\022"
  "*\n\tattribute\030\001 \003(\0132\027.bgs.protocol.Attrib"
  "ute\"\307\001\n\035PresenceChannelCreatedRequest\022\"\n"
  "\002id\030\001 \002(\0132\026.bgs.protocol.EntityId\022/\n\017gam"
  "e_account_id\030\003 \001(\0132\026.bgs.protocol.Entity"
  "Id\022*\n\naccount_id\030\004 \001(\0132\026.bgs.protocol.En"
  "tityId\022%\n\004host\030\005 \001(\0132\027.bgs.protocol.Proc"
  "essId\"\215\001\n\031GetPlayerVariablesRequest\022I\n\020p"
  "layer_variables\030\001 \003(\0132/.bgs.protocol.gam"
  "e_utilities.v1.PlayerVariables\022%\n\004host\030\002"
  " \001(\0132\027.bgs.protocol.ProcessId\"g\n\032GetPlay"
  "erVariablesResponse\022I\n\020player_variables\030"
  "\001 \003(\0132/.bgs.protocol.game_utilities.v1.P"
  "layerVariables\"\213\001\n\035GameAccountOnlineNoti"
  "fication\022/\n\017game_account_id\030\001 \002(\0132\026.bgs."
  "protocol.EntityId\022%\n\004host\030\002 \001(\0132\027.bgs.pr"
  "otocol.ProcessId\022\022\n\nsession_id\030\003 \001(\t\"\214\001\n"
  "\036GameAccountOfflineNotification\022/\n\017game_"
  "account_id\030\001 \002(\0132\026.bgs.protocol.EntityId"
  "\022%\n\004host\030\002 \001(\0132\027.bgs.protocol.ProcessId\022"
  "\022\n\nsession_id\030\003 \001(\t\"C\n\032GetAchievementsFi"
  "leRequest\022%\n\004host\030\001 \001(\0132\027.bgs.protocol.P"
  "rocessId\"R\n\033GetAchievementsFileResponse\022"
  "3\n\016content_handle\030\001 \001(\0132\033.bgs.protocol.C"
  "ontentHandle\"s\n\037GetAllValuesForAttribute"
  "Request\022\025\n\rattribute_key\030\001 \001(\t\022(\n\010agent_"
  "id\030\002 \001(\0132\026.bgs.protocol.EntityId\022\017\n\007prog"
  "ram\030\005 \001(\007\"R\n GetAllValuesForAttributeRes"
  "ponse\022.\n\017attribute_value\030\001 \003(\0132\025.bgs.pro"
  "tocol.Variant\"W\n\030RegisterUtilitiesReques"
  "t\022*\n\tattribute\030\001 \003(\0132\027.bgs.protocol.Attr"
  "ibute\022\017\n\007program\030\002 \001(\007\".\n\031RegisterUtilit"
  "iesResponse\022\021\n\tclient_id\030\001 \001(\t\"\034\n\032Unregi"
  "sterUtilitiesRequest2\261\013\n\024GameUtilitiesSe"
  "rvice\022}\n\024ProcessClientRequest\022-.bgs.prot"
  "ocol.game_utilities.v1.ClientRequest\032..b"
  "gs.protocol.game_utilities.v1.ClientResp"
  "onse\"\006\202\371+\002\010\001\022u\n\026PresenceChannelCreated\022="
  ".bgs.protocol.game_utilities.v1.Presence"
  "ChannelCreatedRequest\032\024.bgs.protocol.NoD"
  "ata\"\006\202\371+\002\010\002\022\223\001\n\022GetPlayerVariables\0229.bgs"
  ".protocol.game_utilities.v1.GetPlayerVar"
  "iablesRequest\032:.bgs.protocol.game_utilit"
  "ies.v1.GetPlayerVariablesResponse\"\006\202\371+\002\010"
  "\003\022}\n\024ProcessServerRequest\022-.bgs.protocol"
  ".game_utilities.v1.ServerRequest\032..bgs.p"
  "rotocol.game_utilities.v1.ServerResponse"
  "\"\006\202\371+\002\010\006\022w\n\023OnGameAccountOnline\022=.bgs.pr"
  "otocol.game_utilities.v1.GameAccountOnli"
  "neNotification\032\031.bgs.protocol.NO_RESPONS"
  "E\"\006\202\371+\002\010\007\022y\n\024OnGameAccountOffline\022>.bgs."
  "protocol.game_utilities.v1.GameAccountOf"
  "flineNotification\032\031.bgs.protocol.NO_RESP"
  "ONSE\"\006\202\371+\002\010\010\022\226\001\n\023GetAchievementsFile\022:.b"
  "gs.protocol.game_utilities.v1.GetAchieve"
  "mentsFileRequest\032;.bgs.protocol.game_uti"
  "lities.v1.GetAchievementsFileResponse\"\006\202"
  "\371+\002\010\t\022\245\001\n\030GetAllValuesForAttribute\022\?.bgs"
  ".protocol.game_utilities.v1.GetAllValues"
  "ForAttributeRequest\032@.bgs.protocol.game_"
  "utilities.v1.GetAllValuesForAttributeRes"
  "ponse\"\006\202\371+\002\010\n\022\220\001\n\021RegisterUtilities\0228.bg"
  "s.protocol.game_utilities.v1.RegisterUti"
  "litiesRequest\0329.bgs.protocol.game_utilit"
  "ies.v1.RegisterUtilitiesResponse\"\006\202\371+\002\010\013"
  "\022t\n\023UnregisterUtilities\022:.bgs.protocol.g"
  "ame_utilities.v1.UnregisterUtilitiesRequ"
  "est\032\031.bgs.protocol.NO_RESPONSE\"\006\202\371+\002\010\014\032P"
  "\202\371+,\n*bnet.protocol.game_utilities.GameU"
  "tilities\202\371+\020*\016game_utilities\212\371+\002\010\001\212\371+\002\020\001"
  "BB\n\037bnet.protocol.game_utilities.v1B\031Gam"
  "eUtilitiesServiceProto\200\001\000\210\001\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto_deps[5] = {
  &::descriptor_table_bgs_2flow_2fpb_2fclient_2fattribute_5ftypes_2eproto,
  &::descriptor_table_bgs_2flow_2fpb_2fclient_2fcontent_5fhandle_5ftypes_2eproto,
  &::descriptor_table_bgs_2flow_2fpb_2fclient_2fentity_5ftypes_2eproto,
  &::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto,
  &::descriptor_table_bgs_2flow_2fpb_2fclient_2frpc_5ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto_sccs[16] = {
  &scc_info_ClientRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_ClientResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_GameAccountOfflineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_GameAccountOnlineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_GetAchievementsFileRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_GetAchievementsFileResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_GetAllValuesForAttributeRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_GetAllValuesForAttributeResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_GetPlayerVariablesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_GetPlayerVariablesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_PresenceChannelCreatedRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_RegisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_RegisterUtilitiesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_ServerRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_ServerResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
  &scc_info_UnregisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto_once;
static bool descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto = {
  &descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto_initialized, descriptor_table_protodef_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto, "bgs/low/pb/client/game_utilities_service.proto", 3588,
  &descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto_once, descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto_sccs, descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto_deps, 16, 5,
  schemas, file_default_instances, TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto::offsets,
  file_level_metadata_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto, 16, file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto, file_level_service_descriptors_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto)), true);
namespace bgs {
namespace protocol {
namespace game_utilities {
namespace v1 {

// ===================================================================

void ClientRequest::InitAsDefaultInstance() {
  ::bgs::protocol::game_utilities::v1::_ClientRequest_default_instance_._instance.get_mutable()->host_ = const_cast< ::bgs::protocol::ProcessId*>(
      ::bgs::protocol::ProcessId::internal_default_instance());
  ::bgs::protocol::game_utilities::v1::_ClientRequest_default_instance_._instance.get_mutable()->account_id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
  ::bgs::protocol::game_utilities::v1::_ClientRequest_default_instance_._instance.get_mutable()->game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
  ::bgs::protocol::game_utilities::v1::_ClientRequest_default_instance_._instance.get_mutable()->client_info_ = const_cast< ::bgs::protocol::game_utilities::v1::ClientInfo*>(
      ::bgs::protocol::game_utilities::v1::ClientInfo::internal_default_instance());
}
class ClientRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ClientRequest>()._has_bits_);
  static const ::bgs::protocol::ProcessId& host(const ClientRequest* msg);
  static void set_has_host(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::bgs::protocol::EntityId& account_id(const ClientRequest* msg);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::bgs::protocol::EntityId& game_account_id(const ClientRequest* msg);
  static void set_has_game_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_program(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::bgs::protocol::game_utilities::v1::ClientInfo& client_info(const ClientRequest* msg);
  static void set_has_client_info(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::bgs::protocol::ProcessId&
ClientRequest::_Internal::host(const ClientRequest* msg) {
  return *msg->host_;
}
const ::bgs::protocol::EntityId&
ClientRequest::_Internal::account_id(const ClientRequest* msg) {
  return *msg->account_id_;
}
const ::bgs::protocol::EntityId&
ClientRequest::_Internal::game_account_id(const ClientRequest* msg) {
  return *msg->game_account_id_;
}
const ::bgs::protocol::game_utilities::v1::ClientInfo&
ClientRequest::_Internal::client_info(const ClientRequest* msg) {
  return *msg->client_info_;
}
void ClientRequest::clear_attribute() {
  attribute_.Clear();
}
void ClientRequest::clear_host() {
  if (host_ != nullptr) host_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ClientRequest::clear_account_id() {
  if (account_id_ != nullptr) account_id_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ClientRequest::clear_game_account_id() {
  if (game_account_id_ != nullptr) game_account_id_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void ClientRequest::clear_client_info() {
  if (client_info_ != nullptr) client_info_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
ClientRequest::ClientRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.ClientRequest)
}
ClientRequest::ClientRequest(const ClientRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      attribute_(from.attribute_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_host()) {
    host_ = new ::bgs::protocol::ProcessId(*from.host_);
  } else {
    host_ = nullptr;
  }
  if (from._internal_has_account_id()) {
    account_id_ = new ::bgs::protocol::EntityId(*from.account_id_);
  } else {
    account_id_ = nullptr;
  }
  if (from._internal_has_game_account_id()) {
    game_account_id_ = new ::bgs::protocol::EntityId(*from.game_account_id_);
  } else {
    game_account_id_ = nullptr;
  }
  if (from._internal_has_client_info()) {
    client_info_ = new ::bgs::protocol::game_utilities::v1::ClientInfo(*from.client_info_);
  } else {
    client_info_ = nullptr;
  }
  program_ = from.program_;
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.ClientRequest)
}

void ClientRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  ::memset(&host_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&program_) -
      reinterpret_cast<char*>(&host_)) + sizeof(program_));
}

ClientRequest::~ClientRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.ClientRequest)
  SharedDtor();
}

void ClientRequest::SharedDtor() {
  if (this != internal_default_instance()) delete host_;
  if (this != internal_default_instance()) delete account_id_;
  if (this != internal_default_instance()) delete game_account_id_;
  if (this != internal_default_instance()) delete client_info_;
}

void ClientRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientRequest& ClientRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(host_ != nullptr);
      host_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(account_id_ != nullptr);
      account_id_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(game_account_id_ != nullptr);
      game_account_id_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(client_info_ != nullptr);
      client_info_->Clear();
    }
  }
  program_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ClientRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bgs.protocol.Attribute attribute = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attribute(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.ProcessId host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_host(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.EntityId account_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_account_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.EntityId game_account_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_game_account_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed32 program = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          _Internal::set_has_program(&has_bits);
          program_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.game_utilities.v1.ClientInfo client_info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_client_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bgs.protocol.Attribute attribute = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attribute_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_attribute(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.ProcessId host = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::host(this), target, stream);
  }

  // optional .bgs.protocol.EntityId account_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::account_id(this), target, stream);
  }

  // optional .bgs.protocol.EntityId game_account_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::game_account_id(this), target, stream);
  }

  // optional fixed32 program = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(5, this->_internal_program(), target);
  }

  // optional .bgs.protocol.game_utilities.v1.ClientInfo client_info = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::client_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.ClientRequest)
  return target;
}

size_t ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.ClientRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bgs.protocol.Attribute attribute = 1;
  total_size += 1UL * this->_internal_attribute_size();
  for (const auto& msg : this->attribute_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .bgs.protocol.ProcessId host = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *host_);
    }

    // optional .bgs.protocol.EntityId account_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *account_id_);
    }

    // optional .bgs.protocol.EntityId game_account_id = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *game_account_id_);
    }

    // optional .bgs.protocol.game_utilities.v1.ClientInfo client_info = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *client_info_);
    }

    // optional fixed32 program = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.ClientRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.ClientRequest)
    MergeFrom(*source);
  }
}

void ClientRequest::MergeFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribute_.MergeFrom(from.attribute_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_host()->::bgs::protocol::ProcessId::MergeFrom(from._internal_host());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_account_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_account_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_game_account_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_game_account_id());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_client_info()->::bgs::protocol::game_utilities::v1::ClientInfo::MergeFrom(from._internal_client_info());
    }
    if (cached_has_bits & 0x00000010u) {
      program_ = from.program_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClientRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRequest::CopyFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientRequest::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(attribute_)) return false;
  if (_internal_has_host()) {
    if (!host_->IsInitialized()) return false;
  }
  if (_internal_has_account_id()) {
    if (!account_id_->IsInitialized()) return false;
  }
  if (_internal_has_game_account_id()) {
    if (!game_account_id_->IsInitialized()) return false;
  }
  return true;
}

void ClientRequest::InternalSwap(ClientRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  attribute_.InternalSwap(&other->attribute_);
  swap(host_, other->host_);
  swap(account_id_, other->account_id_);
  swap(game_account_id_, other->game_account_id_);
  swap(client_info_, other->client_info_);
  swap(program_, other->program_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientResponse::InitAsDefaultInstance() {
}
class ClientResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ClientResponse>()._has_bits_);
};

void ClientResponse::clear_attribute() {
  attribute_.Clear();
}
ClientResponse::ClientResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.ClientResponse)
}
ClientResponse::ClientResponse(const ClientResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      attribute_(from.attribute_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.ClientResponse)
}

void ClientResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
}

ClientResponse::~ClientResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.ClientResponse)
  SharedDtor();
}

void ClientResponse::SharedDtor() {
}

void ClientResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientResponse& ClientResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ClientResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.ClientResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ClientResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bgs.protocol.Attribute attribute = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attribute(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.ClientResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bgs.protocol.Attribute attribute = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attribute_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_attribute(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.ClientResponse)
  return target;
}

size_t ClientResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.ClientResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bgs.protocol.Attribute attribute = 1;
  total_size += 1UL * this->_internal_attribute_size();
  for (const auto& msg : this->attribute_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.ClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.ClientResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.ClientResponse)
    MergeFrom(*source);
  }
}

void ClientResponse::MergeFrom(const ClientResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.ClientResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribute_.MergeFrom(from.attribute_);
}

void ClientResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.ClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientResponse::CopyFrom(const ClientResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.ClientResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientResponse::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(attribute_)) return false;
  return true;
}

void ClientResponse::InternalSwap(ClientResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  attribute_.InternalSwap(&other->attribute_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerRequest::InitAsDefaultInstance() {
  ::bgs::protocol::game_utilities::v1::_ServerRequest_default_instance_._instance.get_mutable()->host_ = const_cast< ::bgs::protocol::ProcessId*>(
      ::bgs::protocol::ProcessId::internal_default_instance());
}
class ServerRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ServerRequest>()._has_bits_);
  static void set_has_program(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::bgs::protocol::ProcessId& host(const ServerRequest* msg);
  static void set_has_host(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::ProcessId&
ServerRequest::_Internal::host(const ServerRequest* msg) {
  return *msg->host_;
}
void ServerRequest::clear_attribute() {
  attribute_.Clear();
}
void ServerRequest::clear_host() {
  if (host_ != nullptr) host_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
ServerRequest::ServerRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.ServerRequest)
}
ServerRequest::ServerRequest(const ServerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      attribute_(from.attribute_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_host()) {
    host_ = new ::bgs::protocol::ProcessId(*from.host_);
  } else {
    host_ = nullptr;
  }
  program_ = from.program_;
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.ServerRequest)
}

void ServerRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServerRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  ::memset(&host_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&program_) -
      reinterpret_cast<char*>(&host_)) + sizeof(program_));
}

ServerRequest::~ServerRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.ServerRequest)
  SharedDtor();
}

void ServerRequest::SharedDtor() {
  if (this != internal_default_instance()) delete host_;
}

void ServerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerRequest& ServerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.ServerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(host_ != nullptr);
    host_->Clear();
  }
  program_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ServerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bgs.protocol.Attribute attribute = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attribute(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // required fixed32 program = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_program(&has_bits);
          program_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.ProcessId host = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_host(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.ServerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bgs.protocol.Attribute attribute = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attribute_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_attribute(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // required fixed32 program = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_program(), target);
  }

  // optional .bgs.protocol.ProcessId host = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::host(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.ServerRequest)
  return target;
}

size_t ServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.ServerRequest)
  size_t total_size = 0;

  // required fixed32 program = 2;
  if (_internal_has_program()) {
    total_size += 1 + 4;
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bgs.protocol.Attribute attribute = 1;
  total_size += 1UL * this->_internal_attribute_size();
  for (const auto& msg : this->attribute_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .bgs.protocol.ProcessId host = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *host_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.ServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.ServerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.ServerRequest)
    MergeFrom(*source);
  }
}

void ServerRequest::MergeFrom(const ServerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.ServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribute_.MergeFrom(from.attribute_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_host()->::bgs::protocol::ProcessId::MergeFrom(from._internal_host());
    }
    if (cached_has_bits & 0x00000002u) {
      program_ = from.program_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.ServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRequest::CopyFrom(const ServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.ServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(attribute_)) return false;
  if (_internal_has_host()) {
    if (!host_->IsInitialized()) return false;
  }
  return true;
}

void ServerRequest::InternalSwap(ServerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  attribute_.InternalSwap(&other->attribute_);
  swap(host_, other->host_);
  swap(program_, other->program_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerResponse::InitAsDefaultInstance() {
}
class ServerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ServerResponse>()._has_bits_);
};

void ServerResponse::clear_attribute() {
  attribute_.Clear();
}
ServerResponse::ServerResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.ServerResponse)
}
ServerResponse::ServerResponse(const ServerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      attribute_(from.attribute_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.ServerResponse)
}

void ServerResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServerResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
}

ServerResponse::~ServerResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.ServerResponse)
  SharedDtor();
}

void ServerResponse::SharedDtor() {
}

void ServerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerResponse& ServerResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.ServerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ServerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bgs.protocol.Attribute attribute = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attribute(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.ServerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bgs.protocol.Attribute attribute = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attribute_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_attribute(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.ServerResponse)
  return target;
}

size_t ServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.ServerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bgs.protocol.Attribute attribute = 1;
  total_size += 1UL * this->_internal_attribute_size();
  for (const auto& msg : this->attribute_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.ServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.ServerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.ServerResponse)
    MergeFrom(*source);
  }
}

void ServerResponse::MergeFrom(const ServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.ServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribute_.MergeFrom(from.attribute_);
}

void ServerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.ServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerResponse::CopyFrom(const ServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.ServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerResponse::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(attribute_)) return false;
  return true;
}

void ServerResponse::InternalSwap(ServerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  attribute_.InternalSwap(&other->attribute_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PresenceChannelCreatedRequest::InitAsDefaultInstance() {
  ::bgs::protocol::game_utilities::v1::_PresenceChannelCreatedRequest_default_instance_._instance.get_mutable()->id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
  ::bgs::protocol::game_utilities::v1::_PresenceChannelCreatedRequest_default_instance_._instance.get_mutable()->game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
  ::bgs::protocol::game_utilities::v1::_PresenceChannelCreatedRequest_default_instance_._instance.get_mutable()->account_id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
  ::bgs::protocol::game_utilities::v1::_PresenceChannelCreatedRequest_default_instance_._instance.get_mutable()->host_ = const_cast< ::bgs::protocol::ProcessId*>(
      ::bgs::protocol::ProcessId::internal_default_instance());
}
class PresenceChannelCreatedRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PresenceChannelCreatedRequest>()._has_bits_);
  static const ::bgs::protocol::EntityId& id(const PresenceChannelCreatedRequest* msg);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::bgs::protocol::EntityId& game_account_id(const PresenceChannelCreatedRequest* msg);
  static void set_has_game_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::bgs::protocol::EntityId& account_id(const PresenceChannelCreatedRequest* msg);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::bgs::protocol::ProcessId& host(const PresenceChannelCreatedRequest* msg);
  static void set_has_host(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::bgs::protocol::EntityId&
PresenceChannelCreatedRequest::_Internal::id(const PresenceChannelCreatedRequest* msg) {
  return *msg->id_;
}
const ::bgs::protocol::EntityId&
PresenceChannelCreatedRequest::_Internal::game_account_id(const PresenceChannelCreatedRequest* msg) {
  return *msg->game_account_id_;
}
const ::bgs::protocol::EntityId&
PresenceChannelCreatedRequest::_Internal::account_id(const PresenceChannelCreatedRequest* msg) {
  return *msg->account_id_;
}
const ::bgs::protocol::ProcessId&
PresenceChannelCreatedRequest::_Internal::host(const PresenceChannelCreatedRequest* msg) {
  return *msg->host_;
}
void PresenceChannelCreatedRequest::clear_id() {
  if (id_ != nullptr) id_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void PresenceChannelCreatedRequest::clear_game_account_id() {
  if (game_account_id_ != nullptr) game_account_id_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void PresenceChannelCreatedRequest::clear_account_id() {
  if (account_id_ != nullptr) account_id_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void PresenceChannelCreatedRequest::clear_host() {
  if (host_ != nullptr) host_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
PresenceChannelCreatedRequest::PresenceChannelCreatedRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
}
PresenceChannelCreatedRequest::PresenceChannelCreatedRequest(const PresenceChannelCreatedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_id()) {
    id_ = new ::bgs::protocol::EntityId(*from.id_);
  } else {
    id_ = nullptr;
  }
  if (from._internal_has_game_account_id()) {
    game_account_id_ = new ::bgs::protocol::EntityId(*from.game_account_id_);
  } else {
    game_account_id_ = nullptr;
  }
  if (from._internal_has_account_id()) {
    account_id_ = new ::bgs::protocol::EntityId(*from.account_id_);
  } else {
    account_id_ = nullptr;
  }
  if (from._internal_has_host()) {
    host_ = new ::bgs::protocol::ProcessId(*from.host_);
  } else {
    host_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
}

void PresenceChannelCreatedRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PresenceChannelCreatedRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&id_)) + sizeof(host_));
}

PresenceChannelCreatedRequest::~PresenceChannelCreatedRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
  SharedDtor();
}

void PresenceChannelCreatedRequest::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete game_account_id_;
  if (this != internal_default_instance()) delete account_id_;
  if (this != internal_default_instance()) delete host_;
}

void PresenceChannelCreatedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PresenceChannelCreatedRequest& PresenceChannelCreatedRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PresenceChannelCreatedRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void PresenceChannelCreatedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(id_ != nullptr);
      id_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(game_account_id_ != nullptr);
      game_account_id_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(account_id_ != nullptr);
      account_id_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(host_ != nullptr);
      host_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* PresenceChannelCreatedRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .bgs.protocol.EntityId id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.EntityId game_account_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_game_account_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.EntityId account_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_account_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.ProcessId host = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_host(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PresenceChannelCreatedRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .bgs.protocol.EntityId id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::id(this), target, stream);
  }

  // optional .bgs.protocol.EntityId game_account_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::game_account_id(this), target, stream);
  }

  // optional .bgs.protocol.EntityId account_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::account_id(this), target, stream);
  }

  // optional .bgs.protocol.ProcessId host = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::host(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
  return target;
}

size_t PresenceChannelCreatedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
  size_t total_size = 0;

  // required .bgs.protocol.EntityId id = 1;
  if (_internal_has_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *id_);
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000eu) {
    // optional .bgs.protocol.EntityId game_account_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *game_account_id_);
    }

    // optional .bgs.protocol.EntityId account_id = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *account_id_);
    }

    // optional .bgs.protocol.ProcessId host = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *host_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PresenceChannelCreatedRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PresenceChannelCreatedRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PresenceChannelCreatedRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
    MergeFrom(*source);
  }
}

void PresenceChannelCreatedRequest::MergeFrom(const PresenceChannelCreatedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_game_account_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_game_account_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_account_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_account_id());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_host()->::bgs::protocol::ProcessId::MergeFrom(from._internal_host());
    }
  }
}

void PresenceChannelCreatedRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresenceChannelCreatedRequest::CopyFrom(const PresenceChannelCreatedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresenceChannelCreatedRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (_internal_has_id()) {
    if (!id_->IsInitialized()) return false;
  }
  if (_internal_has_game_account_id()) {
    if (!game_account_id_->IsInitialized()) return false;
  }
  if (_internal_has_account_id()) {
    if (!account_id_->IsInitialized()) return false;
  }
  if (_internal_has_host()) {
    if (!host_->IsInitialized()) return false;
  }
  return true;
}

void PresenceChannelCreatedRequest::InternalSwap(PresenceChannelCreatedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(id_, other->id_);
  swap(game_account_id_, other->game_account_id_);
  swap(account_id_, other->account_id_);
  swap(host_, other->host_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PresenceChannelCreatedRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPlayerVariablesRequest::InitAsDefaultInstance() {
  ::bgs::protocol::game_utilities::v1::_GetPlayerVariablesRequest_default_instance_._instance.get_mutable()->host_ = const_cast< ::bgs::protocol::ProcessId*>(
      ::bgs::protocol::ProcessId::internal_default_instance());
}
class GetPlayerVariablesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetPlayerVariablesRequest>()._has_bits_);
  static const ::bgs::protocol::ProcessId& host(const GetPlayerVariablesRequest* msg);
  static void set_has_host(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::ProcessId&
GetPlayerVariablesRequest::_Internal::host(const GetPlayerVariablesRequest* msg) {
  return *msg->host_;
}
void GetPlayerVariablesRequest::clear_player_variables() {
  player_variables_.Clear();
}
void GetPlayerVariablesRequest::clear_host() {
  if (host_ != nullptr) host_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
GetPlayerVariablesRequest::GetPlayerVariablesRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
}
GetPlayerVariablesRequest::GetPlayerVariablesRequest(const GetPlayerVariablesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      player_variables_(from.player_variables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_host()) {
    host_ = new ::bgs::protocol::ProcessId(*from.host_);
  } else {
    host_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
}

void GetPlayerVariablesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPlayerVariablesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  host_ = nullptr;
}

GetPlayerVariablesRequest::~GetPlayerVariablesRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
  SharedDtor();
}

void GetPlayerVariablesRequest::SharedDtor() {
  if (this != internal_default_instance()) delete host_;
}

void GetPlayerVariablesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPlayerVariablesRequest& GetPlayerVariablesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPlayerVariablesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetPlayerVariablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_variables_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(host_ != nullptr);
    host_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GetPlayerVariablesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bgs.protocol.game_utilities.v1.PlayerVariables player_variables = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_player_variables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.ProcessId host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_host(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPlayerVariablesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bgs.protocol.game_utilities.v1.PlayerVariables player_variables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_player_variables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_player_variables(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.ProcessId host = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::host(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
  return target;
}

size_t GetPlayerVariablesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bgs.protocol.game_utilities.v1.PlayerVariables player_variables = 1;
  total_size += 1UL * this->_internal_player_variables_size();
  for (const auto& msg : this->player_variables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .bgs.protocol.ProcessId host = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *host_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPlayerVariablesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerVariablesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPlayerVariablesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
    MergeFrom(*source);
  }
}

void GetPlayerVariablesRequest::MergeFrom(const GetPlayerVariablesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_variables_.MergeFrom(from.player_variables_);
  if (from._internal_has_host()) {
    _internal_mutable_host()->::bgs::protocol::ProcessId::MergeFrom(from._internal_host());
  }
}

void GetPlayerVariablesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerVariablesRequest::CopyFrom(const GetPlayerVariablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerVariablesRequest::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(player_variables_)) return false;
  if (_internal_has_host()) {
    if (!host_->IsInitialized()) return false;
  }
  return true;
}

void GetPlayerVariablesRequest::InternalSwap(GetPlayerVariablesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  player_variables_.InternalSwap(&other->player_variables_);
  swap(host_, other->host_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPlayerVariablesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPlayerVariablesResponse::InitAsDefaultInstance() {
}
class GetPlayerVariablesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetPlayerVariablesResponse>()._has_bits_);
};

void GetPlayerVariablesResponse::clear_player_variables() {
  player_variables_.Clear();
}
GetPlayerVariablesResponse::GetPlayerVariablesResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
}
GetPlayerVariablesResponse::GetPlayerVariablesResponse(const GetPlayerVariablesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      player_variables_(from.player_variables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
}

void GetPlayerVariablesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPlayerVariablesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
}

GetPlayerVariablesResponse::~GetPlayerVariablesResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
  SharedDtor();
}

void GetPlayerVariablesResponse::SharedDtor() {
}

void GetPlayerVariablesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPlayerVariablesResponse& GetPlayerVariablesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPlayerVariablesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetPlayerVariablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_variables_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GetPlayerVariablesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bgs.protocol.game_utilities.v1.PlayerVariables player_variables = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_player_variables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPlayerVariablesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bgs.protocol.game_utilities.v1.PlayerVariables player_variables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_player_variables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_player_variables(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
  return target;
}

size_t GetPlayerVariablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bgs.protocol.game_utilities.v1.PlayerVariables player_variables = 1;
  total_size += 1UL * this->_internal_player_variables_size();
  for (const auto& msg : this->player_variables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPlayerVariablesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerVariablesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPlayerVariablesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
    MergeFrom(*source);
  }
}

void GetPlayerVariablesResponse::MergeFrom(const GetPlayerVariablesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_variables_.MergeFrom(from.player_variables_);
}

void GetPlayerVariablesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerVariablesResponse::CopyFrom(const GetPlayerVariablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerVariablesResponse::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(player_variables_)) return false;
  return true;
}

void GetPlayerVariablesResponse::InternalSwap(GetPlayerVariablesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  player_variables_.InternalSwap(&other->player_variables_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPlayerVariablesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GameAccountOnlineNotification::InitAsDefaultInstance() {
  ::bgs::protocol::game_utilities::v1::_GameAccountOnlineNotification_default_instance_._instance.get_mutable()->game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
  ::bgs::protocol::game_utilities::v1::_GameAccountOnlineNotification_default_instance_._instance.get_mutable()->host_ = const_cast< ::bgs::protocol::ProcessId*>(
      ::bgs::protocol::ProcessId::internal_default_instance());
}
class GameAccountOnlineNotification::_Internal {
 public:
  using HasBits = decltype(std::declval<GameAccountOnlineNotification>()._has_bits_);
  static const ::bgs::protocol::EntityId& game_account_id(const GameAccountOnlineNotification* msg);
  static void set_has_game_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::bgs::protocol::ProcessId& host(const GameAccountOnlineNotification* msg);
  static void set_has_host(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::EntityId&
GameAccountOnlineNotification::_Internal::game_account_id(const GameAccountOnlineNotification* msg) {
  return *msg->game_account_id_;
}
const ::bgs::protocol::ProcessId&
GameAccountOnlineNotification::_Internal::host(const GameAccountOnlineNotification* msg) {
  return *msg->host_;
}
void GameAccountOnlineNotification::clear_game_account_id() {
  if (game_account_id_ != nullptr) game_account_id_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void GameAccountOnlineNotification::clear_host() {
  if (host_ != nullptr) host_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
GameAccountOnlineNotification::GameAccountOnlineNotification()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
}
GameAccountOnlineNotification::GameAccountOnlineNotification(const GameAccountOnlineNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_session_id()) {
    session_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from._internal_has_game_account_id()) {
    game_account_id_ = new ::bgs::protocol::EntityId(*from.game_account_id_);
  } else {
    game_account_id_ = nullptr;
  }
  if (from._internal_has_host()) {
    host_ = new ::bgs::protocol::ProcessId(*from.host_);
  } else {
    host_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
}

void GameAccountOnlineNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GameAccountOnlineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&game_account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&game_account_id_)) + sizeof(host_));
}

GameAccountOnlineNotification::~GameAccountOnlineNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
  SharedDtor();
}

void GameAccountOnlineNotification::SharedDtor() {
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete game_account_id_;
  if (this != internal_default_instance()) delete host_;
}

void GameAccountOnlineNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameAccountOnlineNotification& GameAccountOnlineNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GameAccountOnlineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GameAccountOnlineNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      session_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(game_account_id_ != nullptr);
      game_account_id_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(host_ != nullptr);
      host_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GameAccountOnlineNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .bgs.protocol.EntityId game_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_game_account_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.ProcessId host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_host(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string session_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.session_id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GameAccountOnlineNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .bgs.protocol.EntityId game_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::game_account_id(this), target, stream);
  }

  // optional .bgs.protocol.ProcessId host = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::host(this), target, stream);
  }

  // optional string session_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.session_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
  return target;
}

size_t GameAccountOnlineNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
  size_t total_size = 0;

  // required .bgs.protocol.EntityId game_account_id = 1;
  if (_internal_has_game_account_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *game_account_id_);
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string session_id = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // optional .bgs.protocol.ProcessId host = 2;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *host_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameAccountOnlineNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const GameAccountOnlineNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GameAccountOnlineNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
    MergeFrom(*source);
  }
}

void GameAccountOnlineNotification::MergeFrom(const GameAccountOnlineNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      session_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.session_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_game_account_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_game_account_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_host()->::bgs::protocol::ProcessId::MergeFrom(from._internal_host());
    }
  }
}

void GameAccountOnlineNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAccountOnlineNotification::CopyFrom(const GameAccountOnlineNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAccountOnlineNotification::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (_internal_has_game_account_id()) {
    if (!game_account_id_->IsInitialized()) return false;
  }
  if (_internal_has_host()) {
    if (!host_->IsInitialized()) return false;
  }
  return true;
}

void GameAccountOnlineNotification::InternalSwap(GameAccountOnlineNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(game_account_id_, other->game_account_id_);
  swap(host_, other->host_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GameAccountOnlineNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GameAccountOfflineNotification::InitAsDefaultInstance() {
  ::bgs::protocol::game_utilities::v1::_GameAccountOfflineNotification_default_instance_._instance.get_mutable()->game_account_id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
  ::bgs::protocol::game_utilities::v1::_GameAccountOfflineNotification_default_instance_._instance.get_mutable()->host_ = const_cast< ::bgs::protocol::ProcessId*>(
      ::bgs::protocol::ProcessId::internal_default_instance());
}
class GameAccountOfflineNotification::_Internal {
 public:
  using HasBits = decltype(std::declval<GameAccountOfflineNotification>()._has_bits_);
  static const ::bgs::protocol::EntityId& game_account_id(const GameAccountOfflineNotification* msg);
  static void set_has_game_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::bgs::protocol::ProcessId& host(const GameAccountOfflineNotification* msg);
  static void set_has_host(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::EntityId&
GameAccountOfflineNotification::_Internal::game_account_id(const GameAccountOfflineNotification* msg) {
  return *msg->game_account_id_;
}
const ::bgs::protocol::ProcessId&
GameAccountOfflineNotification::_Internal::host(const GameAccountOfflineNotification* msg) {
  return *msg->host_;
}
void GameAccountOfflineNotification::clear_game_account_id() {
  if (game_account_id_ != nullptr) game_account_id_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void GameAccountOfflineNotification::clear_host() {
  if (host_ != nullptr) host_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
GameAccountOfflineNotification::GameAccountOfflineNotification()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
}
GameAccountOfflineNotification::GameAccountOfflineNotification(const GameAccountOfflineNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_session_id()) {
    session_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from._internal_has_game_account_id()) {
    game_account_id_ = new ::bgs::protocol::EntityId(*from.game_account_id_);
  } else {
    game_account_id_ = nullptr;
  }
  if (from._internal_has_host()) {
    host_ = new ::bgs::protocol::ProcessId(*from.host_);
  } else {
    host_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
}

void GameAccountOfflineNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GameAccountOfflineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&game_account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&game_account_id_)) + sizeof(host_));
}

GameAccountOfflineNotification::~GameAccountOfflineNotification() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
  SharedDtor();
}

void GameAccountOfflineNotification::SharedDtor() {
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete game_account_id_;
  if (this != internal_default_instance()) delete host_;
}

void GameAccountOfflineNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameAccountOfflineNotification& GameAccountOfflineNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GameAccountOfflineNotification_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GameAccountOfflineNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      session_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(game_account_id_ != nullptr);
      game_account_id_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(host_ != nullptr);
      host_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GameAccountOfflineNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .bgs.protocol.EntityId game_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_game_account_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.ProcessId host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_host(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string session_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.session_id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GameAccountOfflineNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .bgs.protocol.EntityId game_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::game_account_id(this), target, stream);
  }

  // optional .bgs.protocol.ProcessId host = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::host(this), target, stream);
  }

  // optional string session_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.session_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
  return target;
}

size_t GameAccountOfflineNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
  size_t total_size = 0;

  // required .bgs.protocol.EntityId game_account_id = 1;
  if (_internal_has_game_account_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *game_account_id_);
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string session_id = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // optional .bgs.protocol.ProcessId host = 2;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *host_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameAccountOfflineNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const GameAccountOfflineNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GameAccountOfflineNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
    MergeFrom(*source);
  }
}

void GameAccountOfflineNotification::MergeFrom(const GameAccountOfflineNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      session_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.session_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_game_account_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_game_account_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_host()->::bgs::protocol::ProcessId::MergeFrom(from._internal_host());
    }
  }
}

void GameAccountOfflineNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAccountOfflineNotification::CopyFrom(const GameAccountOfflineNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAccountOfflineNotification::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (_internal_has_game_account_id()) {
    if (!game_account_id_->IsInitialized()) return false;
  }
  if (_internal_has_host()) {
    if (!host_->IsInitialized()) return false;
  }
  return true;
}

void GameAccountOfflineNotification::InternalSwap(GameAccountOfflineNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(game_account_id_, other->game_account_id_);
  swap(host_, other->host_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GameAccountOfflineNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAchievementsFileRequest::InitAsDefaultInstance() {
  ::bgs::protocol::game_utilities::v1::_GetAchievementsFileRequest_default_instance_._instance.get_mutable()->host_ = const_cast< ::bgs::protocol::ProcessId*>(
      ::bgs::protocol::ProcessId::internal_default_instance());
}
class GetAchievementsFileRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetAchievementsFileRequest>()._has_bits_);
  static const ::bgs::protocol::ProcessId& host(const GetAchievementsFileRequest* msg);
  static void set_has_host(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::ProcessId&
GetAchievementsFileRequest::_Internal::host(const GetAchievementsFileRequest* msg) {
  return *msg->host_;
}
void GetAchievementsFileRequest::clear_host() {
  if (host_ != nullptr) host_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
GetAchievementsFileRequest::GetAchievementsFileRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
}
GetAchievementsFileRequest::GetAchievementsFileRequest(const GetAchievementsFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_host()) {
    host_ = new ::bgs::protocol::ProcessId(*from.host_);
  } else {
    host_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
}

void GetAchievementsFileRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAchievementsFileRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  host_ = nullptr;
}

GetAchievementsFileRequest::~GetAchievementsFileRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
  SharedDtor();
}

void GetAchievementsFileRequest::SharedDtor() {
  if (this != internal_default_instance()) delete host_;
}

void GetAchievementsFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAchievementsFileRequest& GetAchievementsFileRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAchievementsFileRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetAchievementsFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(host_ != nullptr);
    host_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GetAchievementsFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .bgs.protocol.ProcessId host = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_host(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAchievementsFileRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.ProcessId host = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::host(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
  return target;
}

size_t GetAchievementsFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .bgs.protocol.ProcessId host = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *host_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAchievementsFileRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAchievementsFileRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAchievementsFileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
    MergeFrom(*source);
  }
}

void GetAchievementsFileRequest::MergeFrom(const GetAchievementsFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_host()) {
    _internal_mutable_host()->::bgs::protocol::ProcessId::MergeFrom(from._internal_host());
  }
}

void GetAchievementsFileRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAchievementsFileRequest::CopyFrom(const GetAchievementsFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAchievementsFileRequest::IsInitialized() const {
  if (_internal_has_host()) {
    if (!host_->IsInitialized()) return false;
  }
  return true;
}

void GetAchievementsFileRequest::InternalSwap(GetAchievementsFileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(host_, other->host_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAchievementsFileRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAchievementsFileResponse::InitAsDefaultInstance() {
  ::bgs::protocol::game_utilities::v1::_GetAchievementsFileResponse_default_instance_._instance.get_mutable()->content_handle_ = const_cast< ::bgs::protocol::ContentHandle*>(
      ::bgs::protocol::ContentHandle::internal_default_instance());
}
class GetAchievementsFileResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetAchievementsFileResponse>()._has_bits_);
  static const ::bgs::protocol::ContentHandle& content_handle(const GetAchievementsFileResponse* msg);
  static void set_has_content_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::ContentHandle&
GetAchievementsFileResponse::_Internal::content_handle(const GetAchievementsFileResponse* msg) {
  return *msg->content_handle_;
}
void GetAchievementsFileResponse::clear_content_handle() {
  if (content_handle_ != nullptr) content_handle_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
GetAchievementsFileResponse::GetAchievementsFileResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
}
GetAchievementsFileResponse::GetAchievementsFileResponse(const GetAchievementsFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_content_handle()) {
    content_handle_ = new ::bgs::protocol::ContentHandle(*from.content_handle_);
  } else {
    content_handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
}

void GetAchievementsFileResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAchievementsFileResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  content_handle_ = nullptr;
}

GetAchievementsFileResponse::~GetAchievementsFileResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
  SharedDtor();
}

void GetAchievementsFileResponse::SharedDtor() {
  if (this != internal_default_instance()) delete content_handle_;
}

void GetAchievementsFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAchievementsFileResponse& GetAchievementsFileResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAchievementsFileResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetAchievementsFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(content_handle_ != nullptr);
    content_handle_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GetAchievementsFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .bgs.protocol.ContentHandle content_handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_content_handle(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAchievementsFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.ContentHandle content_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::content_handle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
  return target;
}

size_t GetAchievementsFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .bgs.protocol.ContentHandle content_handle = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *content_handle_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAchievementsFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAchievementsFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAchievementsFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
    MergeFrom(*source);
  }
}

void GetAchievementsFileResponse::MergeFrom(const GetAchievementsFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_content_handle()) {
    _internal_mutable_content_handle()->::bgs::protocol::ContentHandle::MergeFrom(from._internal_content_handle());
  }
}

void GetAchievementsFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAchievementsFileResponse::CopyFrom(const GetAchievementsFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAchievementsFileResponse::IsInitialized() const {
  if (_internal_has_content_handle()) {
    if (!content_handle_->IsInitialized()) return false;
  }
  return true;
}

void GetAchievementsFileResponse::InternalSwap(GetAchievementsFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(content_handle_, other->content_handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAchievementsFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllValuesForAttributeRequest::InitAsDefaultInstance() {
  ::bgs::protocol::game_utilities::v1::_GetAllValuesForAttributeRequest_default_instance_._instance.get_mutable()->agent_id_ = const_cast< ::bgs::protocol::EntityId*>(
      ::bgs::protocol::EntityId::internal_default_instance());
}
class GetAllValuesForAttributeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetAllValuesForAttributeRequest>()._has_bits_);
  static void set_has_attribute_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::bgs::protocol::EntityId& agent_id(const GetAllValuesForAttributeRequest* msg);
  static void set_has_agent_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_program(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::bgs::protocol::EntityId&
GetAllValuesForAttributeRequest::_Internal::agent_id(const GetAllValuesForAttributeRequest* msg) {
  return *msg->agent_id_;
}
void GetAllValuesForAttributeRequest::clear_agent_id() {
  if (agent_id_ != nullptr) agent_id_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
GetAllValuesForAttributeRequest::GetAllValuesForAttributeRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
}
GetAllValuesForAttributeRequest::GetAllValuesForAttributeRequest(const GetAllValuesForAttributeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attribute_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_attribute_key()) {
    attribute_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.attribute_key_);
  }
  if (from._internal_has_agent_id()) {
    agent_id_ = new ::bgs::protocol::EntityId(*from.agent_id_);
  } else {
    agent_id_ = nullptr;
  }
  program_ = from.program_;
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
}

void GetAllValuesForAttributeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllValuesForAttributeRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  attribute_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&agent_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&program_) -
      reinterpret_cast<char*>(&agent_id_)) + sizeof(program_));
}

GetAllValuesForAttributeRequest::~GetAllValuesForAttributeRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
  SharedDtor();
}

void GetAllValuesForAttributeRequest::SharedDtor() {
  attribute_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete agent_id_;
}

void GetAllValuesForAttributeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllValuesForAttributeRequest& GetAllValuesForAttributeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllValuesForAttributeRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetAllValuesForAttributeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      attribute_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(agent_id_ != nullptr);
      agent_id_->Clear();
    }
  }
  program_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GetAllValuesForAttributeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string attribute_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_attribute_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.attribute_key");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.EntityId agent_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_agent_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed32 program = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          _Internal::set_has_program(&has_bits);
          program_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllValuesForAttributeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string attribute_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_attribute_key().data(), static_cast<int>(this->_internal_attribute_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.attribute_key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_attribute_key(), target);
  }

  // optional .bgs.protocol.EntityId agent_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::agent_id(this), target, stream);
  }

  // optional fixed32 program = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(5, this->_internal_program(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
  return target;
}

size_t GetAllValuesForAttributeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string attribute_key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_attribute_key());
    }

    // optional .bgs.protocol.EntityId agent_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *agent_id_);
    }

    // optional fixed32 program = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllValuesForAttributeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllValuesForAttributeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllValuesForAttributeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
    MergeFrom(*source);
  }
}

void GetAllValuesForAttributeRequest::MergeFrom(const GetAllValuesForAttributeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      attribute_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.attribute_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_agent_id()->::bgs::protocol::EntityId::MergeFrom(from._internal_agent_id());
    }
    if (cached_has_bits & 0x00000004u) {
      program_ = from.program_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAllValuesForAttributeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllValuesForAttributeRequest::CopyFrom(const GetAllValuesForAttributeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllValuesForAttributeRequest::IsInitialized() const {
  if (_internal_has_agent_id()) {
    if (!agent_id_->IsInitialized()) return false;
  }
  return true;
}

void GetAllValuesForAttributeRequest::InternalSwap(GetAllValuesForAttributeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  attribute_key_.Swap(&other->attribute_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(agent_id_, other->agent_id_);
  swap(program_, other->program_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllValuesForAttributeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllValuesForAttributeResponse::InitAsDefaultInstance() {
}
class GetAllValuesForAttributeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetAllValuesForAttributeResponse>()._has_bits_);
};

void GetAllValuesForAttributeResponse::clear_attribute_value() {
  attribute_value_.Clear();
}
GetAllValuesForAttributeResponse::GetAllValuesForAttributeResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
}
GetAllValuesForAttributeResponse::GetAllValuesForAttributeResponse(const GetAllValuesForAttributeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      attribute_value_(from.attribute_value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
}

void GetAllValuesForAttributeResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllValuesForAttributeResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
}

GetAllValuesForAttributeResponse::~GetAllValuesForAttributeResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
  SharedDtor();
}

void GetAllValuesForAttributeResponse::SharedDtor() {
}

void GetAllValuesForAttributeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllValuesForAttributeResponse& GetAllValuesForAttributeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllValuesForAttributeResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetAllValuesForAttributeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_value_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GetAllValuesForAttributeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bgs.protocol.Variant attribute_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attribute_value(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllValuesForAttributeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bgs.protocol.Variant attribute_value = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attribute_value_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_attribute_value(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
  return target;
}

size_t GetAllValuesForAttributeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bgs.protocol.Variant attribute_value = 1;
  total_size += 1UL * this->_internal_attribute_value_size();
  for (const auto& msg : this->attribute_value_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllValuesForAttributeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllValuesForAttributeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllValuesForAttributeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
    MergeFrom(*source);
  }
}

void GetAllValuesForAttributeResponse::MergeFrom(const GetAllValuesForAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribute_value_.MergeFrom(from.attribute_value_);
}

void GetAllValuesForAttributeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllValuesForAttributeResponse::CopyFrom(const GetAllValuesForAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllValuesForAttributeResponse::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(attribute_value_)) return false;
  return true;
}

void GetAllValuesForAttributeResponse::InternalSwap(GetAllValuesForAttributeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  attribute_value_.InternalSwap(&other->attribute_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllValuesForAttributeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterUtilitiesRequest::InitAsDefaultInstance() {
}
class RegisterUtilitiesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterUtilitiesRequest>()._has_bits_);
  static void set_has_program(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void RegisterUtilitiesRequest::clear_attribute() {
  attribute_.Clear();
}
RegisterUtilitiesRequest::RegisterUtilitiesRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
}
RegisterUtilitiesRequest::RegisterUtilitiesRequest(const RegisterUtilitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      attribute_(from.attribute_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  program_ = from.program_;
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
}

void RegisterUtilitiesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  program_ = 0u;
}

RegisterUtilitiesRequest::~RegisterUtilitiesRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
  SharedDtor();
}

void RegisterUtilitiesRequest::SharedDtor() {
}

void RegisterUtilitiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterUtilitiesRequest& RegisterUtilitiesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RegisterUtilitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_.Clear();
  program_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* RegisterUtilitiesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bgs.protocol.Attribute attribute = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attribute(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional fixed32 program = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_program(&has_bits);
          program_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterUtilitiesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bgs.protocol.Attribute attribute = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attribute_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_attribute(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional fixed32 program = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_program(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
  return target;
}

size_t RegisterUtilitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bgs.protocol.Attribute attribute = 1;
  total_size += 1UL * this->_internal_attribute_size();
  for (const auto& msg : this->attribute_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional fixed32 program = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterUtilitiesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterUtilitiesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterUtilitiesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
    MergeFrom(*source);
  }
}

void RegisterUtilitiesRequest::MergeFrom(const RegisterUtilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribute_.MergeFrom(from.attribute_);
  if (from._internal_has_program()) {
    _internal_set_program(from._internal_program());
  }
}

void RegisterUtilitiesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterUtilitiesRequest::CopyFrom(const RegisterUtilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterUtilitiesRequest::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(attribute_)) return false;
  return true;
}

void RegisterUtilitiesRequest::InternalSwap(RegisterUtilitiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  attribute_.InternalSwap(&other->attribute_);
  swap(program_, other->program_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterUtilitiesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterUtilitiesResponse::InitAsDefaultInstance() {
}
class RegisterUtilitiesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterUtilitiesResponse>()._has_bits_);
  static void set_has_client_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RegisterUtilitiesResponse::RegisterUtilitiesResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
}
RegisterUtilitiesResponse::RegisterUtilitiesResponse(const RegisterUtilitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_id()) {
    client_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
}

void RegisterUtilitiesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterUtilitiesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterUtilitiesResponse::~RegisterUtilitiesResponse() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
  SharedDtor();
}

void RegisterUtilitiesResponse::SharedDtor() {
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterUtilitiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterUtilitiesResponse& RegisterUtilitiesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterUtilitiesResponse_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RegisterUtilitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    client_id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* RegisterUtilitiesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse.client_id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterUtilitiesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse.client_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
  return target;
}

size_t RegisterUtilitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string client_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterUtilitiesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterUtilitiesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterUtilitiesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
    MergeFrom(*source);
  }
}

void RegisterUtilitiesResponse::MergeFrom(const RegisterUtilitiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_client_id()) {
    _has_bits_[0] |= 0x00000001u;
    client_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
}

void RegisterUtilitiesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterUtilitiesResponse::CopyFrom(const RegisterUtilitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterUtilitiesResponse::IsInitialized() const {
  return true;
}

void RegisterUtilitiesResponse::InternalSwap(RegisterUtilitiesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_id_.Swap(&other->client_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterUtilitiesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnregisterUtilitiesRequest::InitAsDefaultInstance() {
}
class UnregisterUtilitiesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UnregisterUtilitiesRequest>()._has_bits_);
};

UnregisterUtilitiesRequest::UnregisterUtilitiesRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
}
UnregisterUtilitiesRequest::UnregisterUtilitiesRequest(const UnregisterUtilitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
}

void UnregisterUtilitiesRequest::SharedCtor() {
}

UnregisterUtilitiesRequest::~UnregisterUtilitiesRequest() {
  // @@protoc_insertion_point(destructor:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
  SharedDtor();
}

void UnregisterUtilitiesRequest::SharedDtor() {
}

void UnregisterUtilitiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnregisterUtilitiesRequest& UnregisterUtilitiesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnregisterUtilitiesRequest_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UnregisterUtilitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UnregisterUtilitiesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnregisterUtilitiesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
  return target;
}

size_t UnregisterUtilitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnregisterUtilitiesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnregisterUtilitiesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnregisterUtilitiesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
    MergeFrom(*source);
  }
}

void UnregisterUtilitiesRequest::MergeFrom(const UnregisterUtilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UnregisterUtilitiesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnregisterUtilitiesRequest::CopyFrom(const UnregisterUtilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnregisterUtilitiesRequest::IsInitialized() const {
  return true;
}

void UnregisterUtilitiesRequest::InternalSwap(UnregisterUtilitiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnregisterUtilitiesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace game_utilities
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::ClientRequest* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::ClientRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::ClientRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::ClientResponse* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::ClientResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::ClientResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::ServerRequest* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::ServerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::ServerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::ServerResponse* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::ServerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::ServerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest* Arena::CreateMaybeMessage< ::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
