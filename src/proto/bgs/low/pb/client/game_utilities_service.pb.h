// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/game_utilities_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "bgs/low/pb/client/attribute_types.pb.h"
#include "bgs/low/pb/client/content_handle_types.pb.h"
#include "bgs/low/pb/client/entity_types.pb.h"
#include "bgs/low/pb/client/game_utilities_types.pb.h"
#include "bgs/low/pb/client/rpc_types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
namespace bgs {
namespace protocol {
namespace game_utilities {
namespace v1 {
class ClientRequest;
class ClientRequestDefaultTypeInternal;
extern ClientRequestDefaultTypeInternal _ClientRequest_default_instance_;
class ClientResponse;
class ClientResponseDefaultTypeInternal;
extern ClientResponseDefaultTypeInternal _ClientResponse_default_instance_;
class GameAccountOfflineNotification;
class GameAccountOfflineNotificationDefaultTypeInternal;
extern GameAccountOfflineNotificationDefaultTypeInternal _GameAccountOfflineNotification_default_instance_;
class GameAccountOnlineNotification;
class GameAccountOnlineNotificationDefaultTypeInternal;
extern GameAccountOnlineNotificationDefaultTypeInternal _GameAccountOnlineNotification_default_instance_;
class GetAchievementsFileRequest;
class GetAchievementsFileRequestDefaultTypeInternal;
extern GetAchievementsFileRequestDefaultTypeInternal _GetAchievementsFileRequest_default_instance_;
class GetAchievementsFileResponse;
class GetAchievementsFileResponseDefaultTypeInternal;
extern GetAchievementsFileResponseDefaultTypeInternal _GetAchievementsFileResponse_default_instance_;
class GetAllValuesForAttributeRequest;
class GetAllValuesForAttributeRequestDefaultTypeInternal;
extern GetAllValuesForAttributeRequestDefaultTypeInternal _GetAllValuesForAttributeRequest_default_instance_;
class GetAllValuesForAttributeResponse;
class GetAllValuesForAttributeResponseDefaultTypeInternal;
extern GetAllValuesForAttributeResponseDefaultTypeInternal _GetAllValuesForAttributeResponse_default_instance_;
class GetPlayerVariablesRequest;
class GetPlayerVariablesRequestDefaultTypeInternal;
extern GetPlayerVariablesRequestDefaultTypeInternal _GetPlayerVariablesRequest_default_instance_;
class GetPlayerVariablesResponse;
class GetPlayerVariablesResponseDefaultTypeInternal;
extern GetPlayerVariablesResponseDefaultTypeInternal _GetPlayerVariablesResponse_default_instance_;
class PresenceChannelCreatedRequest;
class PresenceChannelCreatedRequestDefaultTypeInternal;
extern PresenceChannelCreatedRequestDefaultTypeInternal _PresenceChannelCreatedRequest_default_instance_;
class RegisterUtilitiesRequest;
class RegisterUtilitiesRequestDefaultTypeInternal;
extern RegisterUtilitiesRequestDefaultTypeInternal _RegisterUtilitiesRequest_default_instance_;
class RegisterUtilitiesResponse;
class RegisterUtilitiesResponseDefaultTypeInternal;
extern RegisterUtilitiesResponseDefaultTypeInternal _RegisterUtilitiesResponse_default_instance_;
class ServerRequest;
class ServerRequestDefaultTypeInternal;
extern ServerRequestDefaultTypeInternal _ServerRequest_default_instance_;
class ServerResponse;
class ServerResponseDefaultTypeInternal;
extern ServerResponseDefaultTypeInternal _ServerResponse_default_instance_;
class UnregisterUtilitiesRequest;
class UnregisterUtilitiesRequestDefaultTypeInternal;
extern UnregisterUtilitiesRequestDefaultTypeInternal _UnregisterUtilitiesRequest_default_instance_;
}  // namespace v1
}  // namespace game_utilities
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> ::bgs::protocol::game_utilities::v1::ClientRequest* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::ClientRequest>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::ClientResponse* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::ClientResponse>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::GameAccountOfflineNotification>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::GameAccountOnlineNotification>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::GetAchievementsFileRequest>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::GetAchievementsFileResponse>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeRequest>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::GetAllValuesForAttributeResponse>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::GetPlayerVariablesRequest>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::GetPlayerVariablesResponse>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::PresenceChannelCreatedRequest>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::RegisterUtilitiesRequest>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::RegisterUtilitiesResponse>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::ServerRequest* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::ServerRequest>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::ServerResponse* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::ServerResponse>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::UnregisterUtilitiesRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bgs {
namespace protocol {
namespace game_utilities {
namespace v1 {

// ===================================================================

class ClientRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.ClientRequest) */ {
 public:
  ClientRequest();
  virtual ~ClientRequest();

  ClientRequest(const ClientRequest& from);
  ClientRequest(ClientRequest&& from) noexcept
    : ClientRequest() {
    *this = ::std::move(from);
  }

  inline ClientRequest& operator=(const ClientRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientRequest& operator=(ClientRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ClientRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientRequest* internal_default_instance() {
    return reinterpret_cast<const ClientRequest*>(
               &_ClientRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ClientRequest& a, ClientRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ClientRequest* New() const final {
    return CreateMaybeMessage<ClientRequest>(nullptr);
  }

  ClientRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ClientRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ClientRequest& from);
  void MergeFrom(const ClientRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.ClientRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeFieldNumber = 1,
    kHostFieldNumber = 2,
    kAccountIdFieldNumber = 3,
    kGameAccountIdFieldNumber = 4,
    kClientInfoFieldNumber = 6,
    kProgramFieldNumber = 5,
  };
  // repeated .bgs.protocol.Attribute attribute = 1;
  int attribute_size() const;
  private:
  int _internal_attribute_size() const;
  public:
  void clear_attribute();
  ::bgs::protocol::Attribute* mutable_attribute(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
      mutable_attribute();
  private:
  const ::bgs::protocol::Attribute& _internal_attribute(int index) const;
  ::bgs::protocol::Attribute* _internal_add_attribute();
  public:
  const ::bgs::protocol::Attribute& attribute(int index) const;
  ::bgs::protocol::Attribute* add_attribute();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
      attribute() const;

  // optional .bgs.protocol.ProcessId host = 2;
  bool has_host() const;
  private:
  bool _internal_has_host() const;
  public:
  void clear_host();
  const ::bgs::protocol::ProcessId& host() const;
  ::bgs::protocol::ProcessId* release_host();
  ::bgs::protocol::ProcessId* mutable_host();
  void set_allocated_host(::bgs::protocol::ProcessId* host);
  private:
  const ::bgs::protocol::ProcessId& _internal_host() const;
  ::bgs::protocol::ProcessId* _internal_mutable_host();
  public:

  // optional .bgs.protocol.EntityId account_id = 3;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  const ::bgs::protocol::EntityId& account_id() const;
  ::bgs::protocol::EntityId* release_account_id();
  ::bgs::protocol::EntityId* mutable_account_id();
  void set_allocated_account_id(::bgs::protocol::EntityId* account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_account_id();
  public:

  // optional .bgs.protocol.EntityId game_account_id = 4;
  bool has_game_account_id() const;
  private:
  bool _internal_has_game_account_id() const;
  public:
  void clear_game_account_id();
  const ::bgs::protocol::EntityId& game_account_id() const;
  ::bgs::protocol::EntityId* release_game_account_id();
  ::bgs::protocol::EntityId* mutable_game_account_id();
  void set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_game_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_game_account_id();
  public:

  // optional .bgs.protocol.game_utilities.v1.ClientInfo client_info = 6;
  bool has_client_info() const;
  private:
  bool _internal_has_client_info() const;
  public:
  void clear_client_info();
  const ::bgs::protocol::game_utilities::v1::ClientInfo& client_info() const;
  ::bgs::protocol::game_utilities::v1::ClientInfo* release_client_info();
  ::bgs::protocol::game_utilities::v1::ClientInfo* mutable_client_info();
  void set_allocated_client_info(::bgs::protocol::game_utilities::v1::ClientInfo* client_info);
  private:
  const ::bgs::protocol::game_utilities::v1::ClientInfo& _internal_client_info() const;
  ::bgs::protocol::game_utilities::v1::ClientInfo* _internal_mutable_client_info();
  public:

  // optional fixed32 program = 5;
  bool has_program() const;
  private:
  bool _internal_has_program() const;
  public:
  void clear_program();
  ::PROTOBUF_NAMESPACE_ID::uint32 program() const;
  void set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program() const;
  void _internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.ClientRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute > attribute_;
  ::bgs::protocol::ProcessId* host_;
  ::bgs::protocol::EntityId* account_id_;
  ::bgs::protocol::EntityId* game_account_id_;
  ::bgs::protocol::game_utilities::v1::ClientInfo* client_info_;
  ::PROTOBUF_NAMESPACE_ID::uint32 program_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ClientResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.ClientResponse) */ {
 public:
  ClientResponse();
  virtual ~ClientResponse();

  ClientResponse(const ClientResponse& from);
  ClientResponse(ClientResponse&& from) noexcept
    : ClientResponse() {
    *this = ::std::move(from);
  }

  inline ClientResponse& operator=(const ClientResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientResponse& operator=(ClientResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ClientResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientResponse* internal_default_instance() {
    return reinterpret_cast<const ClientResponse*>(
               &_ClientResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ClientResponse& a, ClientResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ClientResponse* New() const final {
    return CreateMaybeMessage<ClientResponse>(nullptr);
  }

  ClientResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ClientResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ClientResponse& from);
  void MergeFrom(const ClientResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.ClientResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeFieldNumber = 1,
  };
  // repeated .bgs.protocol.Attribute attribute = 1;
  int attribute_size() const;
  private:
  int _internal_attribute_size() const;
  public:
  void clear_attribute();
  ::bgs::protocol::Attribute* mutable_attribute(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
      mutable_attribute();
  private:
  const ::bgs::protocol::Attribute& _internal_attribute(int index) const;
  ::bgs::protocol::Attribute* _internal_add_attribute();
  public:
  const ::bgs::protocol::Attribute& attribute(int index) const;
  ::bgs::protocol::Attribute* add_attribute();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
      attribute() const;

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.ClientResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute > attribute_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ServerRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.ServerRequest) */ {
 public:
  ServerRequest();
  virtual ~ServerRequest();

  ServerRequest(const ServerRequest& from);
  ServerRequest(ServerRequest&& from) noexcept
    : ServerRequest() {
    *this = ::std::move(from);
  }

  inline ServerRequest& operator=(const ServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerRequest& operator=(ServerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerRequest* internal_default_instance() {
    return reinterpret_cast<const ServerRequest*>(
               &_ServerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ServerRequest& a, ServerRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServerRequest* New() const final {
    return CreateMaybeMessage<ServerRequest>(nullptr);
  }

  ServerRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServerRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServerRequest& from);
  void MergeFrom(const ServerRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.ServerRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeFieldNumber = 1,
    kHostFieldNumber = 3,
    kProgramFieldNumber = 2,
  };
  // repeated .bgs.protocol.Attribute attribute = 1;
  int attribute_size() const;
  private:
  int _internal_attribute_size() const;
  public:
  void clear_attribute();
  ::bgs::protocol::Attribute* mutable_attribute(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
      mutable_attribute();
  private:
  const ::bgs::protocol::Attribute& _internal_attribute(int index) const;
  ::bgs::protocol::Attribute* _internal_add_attribute();
  public:
  const ::bgs::protocol::Attribute& attribute(int index) const;
  ::bgs::protocol::Attribute* add_attribute();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
      attribute() const;

  // optional .bgs.protocol.ProcessId host = 3;
  bool has_host() const;
  private:
  bool _internal_has_host() const;
  public:
  void clear_host();
  const ::bgs::protocol::ProcessId& host() const;
  ::bgs::protocol::ProcessId* release_host();
  ::bgs::protocol::ProcessId* mutable_host();
  void set_allocated_host(::bgs::protocol::ProcessId* host);
  private:
  const ::bgs::protocol::ProcessId& _internal_host() const;
  ::bgs::protocol::ProcessId* _internal_mutable_host();
  public:

  // required fixed32 program = 2;
  bool has_program() const;
  private:
  bool _internal_has_program() const;
  public:
  void clear_program();
  ::PROTOBUF_NAMESPACE_ID::uint32 program() const;
  void set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program() const;
  void _internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.ServerRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute > attribute_;
  ::bgs::protocol::ProcessId* host_;
  ::PROTOBUF_NAMESPACE_ID::uint32 program_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ServerResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.ServerResponse) */ {
 public:
  ServerResponse();
  virtual ~ServerResponse();

  ServerResponse(const ServerResponse& from);
  ServerResponse(ServerResponse&& from) noexcept
    : ServerResponse() {
    *this = ::std::move(from);
  }

  inline ServerResponse& operator=(const ServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerResponse& operator=(ServerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerResponse* internal_default_instance() {
    return reinterpret_cast<const ServerResponse*>(
               &_ServerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ServerResponse& a, ServerResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServerResponse* New() const final {
    return CreateMaybeMessage<ServerResponse>(nullptr);
  }

  ServerResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServerResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServerResponse& from);
  void MergeFrom(const ServerResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.ServerResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeFieldNumber = 1,
  };
  // repeated .bgs.protocol.Attribute attribute = 1;
  int attribute_size() const;
  private:
  int _internal_attribute_size() const;
  public:
  void clear_attribute();
  ::bgs::protocol::Attribute* mutable_attribute(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
      mutable_attribute();
  private:
  const ::bgs::protocol::Attribute& _internal_attribute(int index) const;
  ::bgs::protocol::Attribute* _internal_add_attribute();
  public:
  const ::bgs::protocol::Attribute& attribute(int index) const;
  ::bgs::protocol::Attribute* add_attribute();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
      attribute() const;

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.ServerResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute > attribute_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PresenceChannelCreatedRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest) */ {
 public:
  PresenceChannelCreatedRequest();
  virtual ~PresenceChannelCreatedRequest();

  PresenceChannelCreatedRequest(const PresenceChannelCreatedRequest& from);
  PresenceChannelCreatedRequest(PresenceChannelCreatedRequest&& from) noexcept
    : PresenceChannelCreatedRequest() {
    *this = ::std::move(from);
  }

  inline PresenceChannelCreatedRequest& operator=(const PresenceChannelCreatedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PresenceChannelCreatedRequest& operator=(PresenceChannelCreatedRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PresenceChannelCreatedRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PresenceChannelCreatedRequest* internal_default_instance() {
    return reinterpret_cast<const PresenceChannelCreatedRequest*>(
               &_PresenceChannelCreatedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PresenceChannelCreatedRequest& a, PresenceChannelCreatedRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PresenceChannelCreatedRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PresenceChannelCreatedRequest* New() const final {
    return CreateMaybeMessage<PresenceChannelCreatedRequest>(nullptr);
  }

  PresenceChannelCreatedRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PresenceChannelCreatedRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PresenceChannelCreatedRequest& from);
  void MergeFrom(const PresenceChannelCreatedRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PresenceChannelCreatedRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kGameAccountIdFieldNumber = 3,
    kAccountIdFieldNumber = 4,
    kHostFieldNumber = 5,
  };
  // required .bgs.protocol.EntityId id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  const ::bgs::protocol::EntityId& id() const;
  ::bgs::protocol::EntityId* release_id();
  ::bgs::protocol::EntityId* mutable_id();
  void set_allocated_id(::bgs::protocol::EntityId* id);
  private:
  const ::bgs::protocol::EntityId& _internal_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_id();
  public:

  // optional .bgs.protocol.EntityId game_account_id = 3;
  bool has_game_account_id() const;
  private:
  bool _internal_has_game_account_id() const;
  public:
  void clear_game_account_id();
  const ::bgs::protocol::EntityId& game_account_id() const;
  ::bgs::protocol::EntityId* release_game_account_id();
  ::bgs::protocol::EntityId* mutable_game_account_id();
  void set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_game_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_game_account_id();
  public:

  // optional .bgs.protocol.EntityId account_id = 4;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  const ::bgs::protocol::EntityId& account_id() const;
  ::bgs::protocol::EntityId* release_account_id();
  ::bgs::protocol::EntityId* mutable_account_id();
  void set_allocated_account_id(::bgs::protocol::EntityId* account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_account_id();
  public:

  // optional .bgs.protocol.ProcessId host = 5;
  bool has_host() const;
  private:
  bool _internal_has_host() const;
  public:
  void clear_host();
  const ::bgs::protocol::ProcessId& host() const;
  ::bgs::protocol::ProcessId* release_host();
  ::bgs::protocol::ProcessId* mutable_host();
  void set_allocated_host(::bgs::protocol::ProcessId* host);
  private:
  const ::bgs::protocol::ProcessId& _internal_host() const;
  ::bgs::protocol::ProcessId* _internal_mutable_host();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* id_;
  ::bgs::protocol::EntityId* game_account_id_;
  ::bgs::protocol::EntityId* account_id_;
  ::bgs::protocol::ProcessId* host_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetPlayerVariablesRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest) */ {
 public:
  GetPlayerVariablesRequest();
  virtual ~GetPlayerVariablesRequest();

  GetPlayerVariablesRequest(const GetPlayerVariablesRequest& from);
  GetPlayerVariablesRequest(GetPlayerVariablesRequest&& from) noexcept
    : GetPlayerVariablesRequest() {
    *this = ::std::move(from);
  }

  inline GetPlayerVariablesRequest& operator=(const GetPlayerVariablesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPlayerVariablesRequest& operator=(GetPlayerVariablesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetPlayerVariablesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPlayerVariablesRequest* internal_default_instance() {
    return reinterpret_cast<const GetPlayerVariablesRequest*>(
               &_GetPlayerVariablesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetPlayerVariablesRequest& a, GetPlayerVariablesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPlayerVariablesRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerVariablesRequest* New() const final {
    return CreateMaybeMessage<GetPlayerVariablesRequest>(nullptr);
  }

  GetPlayerVariablesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetPlayerVariablesRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetPlayerVariablesRequest& from);
  void MergeFrom(const GetPlayerVariablesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPlayerVariablesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerVariablesFieldNumber = 1,
    kHostFieldNumber = 2,
  };
  // repeated .bgs.protocol.game_utilities.v1.PlayerVariables player_variables = 1;
  int player_variables_size() const;
  private:
  int _internal_player_variables_size() const;
  public:
  void clear_player_variables();
  ::bgs::protocol::game_utilities::v1::PlayerVariables* mutable_player_variables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::game_utilities::v1::PlayerVariables >*
      mutable_player_variables();
  private:
  const ::bgs::protocol::game_utilities::v1::PlayerVariables& _internal_player_variables(int index) const;
  ::bgs::protocol::game_utilities::v1::PlayerVariables* _internal_add_player_variables();
  public:
  const ::bgs::protocol::game_utilities::v1::PlayerVariables& player_variables(int index) const;
  ::bgs::protocol::game_utilities::v1::PlayerVariables* add_player_variables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::game_utilities::v1::PlayerVariables >&
      player_variables() const;

  // optional .bgs.protocol.ProcessId host = 2;
  bool has_host() const;
  private:
  bool _internal_has_host() const;
  public:
  void clear_host();
  const ::bgs::protocol::ProcessId& host() const;
  ::bgs::protocol::ProcessId* release_host();
  ::bgs::protocol::ProcessId* mutable_host();
  void set_allocated_host(::bgs::protocol::ProcessId* host);
  private:
  const ::bgs::protocol::ProcessId& _internal_host() const;
  ::bgs::protocol::ProcessId* _internal_mutable_host();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::game_utilities::v1::PlayerVariables > player_variables_;
  ::bgs::protocol::ProcessId* host_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetPlayerVariablesResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse) */ {
 public:
  GetPlayerVariablesResponse();
  virtual ~GetPlayerVariablesResponse();

  GetPlayerVariablesResponse(const GetPlayerVariablesResponse& from);
  GetPlayerVariablesResponse(GetPlayerVariablesResponse&& from) noexcept
    : GetPlayerVariablesResponse() {
    *this = ::std::move(from);
  }

  inline GetPlayerVariablesResponse& operator=(const GetPlayerVariablesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPlayerVariablesResponse& operator=(GetPlayerVariablesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetPlayerVariablesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPlayerVariablesResponse* internal_default_instance() {
    return reinterpret_cast<const GetPlayerVariablesResponse*>(
               &_GetPlayerVariablesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetPlayerVariablesResponse& a, GetPlayerVariablesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPlayerVariablesResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerVariablesResponse* New() const final {
    return CreateMaybeMessage<GetPlayerVariablesResponse>(nullptr);
  }

  GetPlayerVariablesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetPlayerVariablesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetPlayerVariablesResponse& from);
  void MergeFrom(const GetPlayerVariablesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPlayerVariablesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerVariablesFieldNumber = 1,
  };
  // repeated .bgs.protocol.game_utilities.v1.PlayerVariables player_variables = 1;
  int player_variables_size() const;
  private:
  int _internal_player_variables_size() const;
  public:
  void clear_player_variables();
  ::bgs::protocol::game_utilities::v1::PlayerVariables* mutable_player_variables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::game_utilities::v1::PlayerVariables >*
      mutable_player_variables();
  private:
  const ::bgs::protocol::game_utilities::v1::PlayerVariables& _internal_player_variables(int index) const;
  ::bgs::protocol::game_utilities::v1::PlayerVariables* _internal_add_player_variables();
  public:
  const ::bgs::protocol::game_utilities::v1::PlayerVariables& player_variables(int index) const;
  ::bgs::protocol::game_utilities::v1::PlayerVariables* add_player_variables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::game_utilities::v1::PlayerVariables >&
      player_variables() const;

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::game_utilities::v1::PlayerVariables > player_variables_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GameAccountOnlineNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification) */ {
 public:
  GameAccountOnlineNotification();
  virtual ~GameAccountOnlineNotification();

  GameAccountOnlineNotification(const GameAccountOnlineNotification& from);
  GameAccountOnlineNotification(GameAccountOnlineNotification&& from) noexcept
    : GameAccountOnlineNotification() {
    *this = ::std::move(from);
  }

  inline GameAccountOnlineNotification& operator=(const GameAccountOnlineNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameAccountOnlineNotification& operator=(GameAccountOnlineNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GameAccountOnlineNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameAccountOnlineNotification* internal_default_instance() {
    return reinterpret_cast<const GameAccountOnlineNotification*>(
               &_GameAccountOnlineNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GameAccountOnlineNotification& a, GameAccountOnlineNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(GameAccountOnlineNotification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GameAccountOnlineNotification* New() const final {
    return CreateMaybeMessage<GameAccountOnlineNotification>(nullptr);
  }

  GameAccountOnlineNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GameAccountOnlineNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GameAccountOnlineNotification& from);
  void MergeFrom(const GameAccountOnlineNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameAccountOnlineNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.GameAccountOnlineNotification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionIdFieldNumber = 3,
    kGameAccountIdFieldNumber = 1,
    kHostFieldNumber = 2,
  };
  // optional string session_id = 3;
  bool has_session_id() const;
  private:
  bool _internal_has_session_id() const;
  public:
  void clear_session_id();
  const std::string& session_id() const;
  void set_session_id(const std::string& value);
  void set_session_id(std::string&& value);
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  std::string* mutable_session_id();
  std::string* release_session_id();
  void set_allocated_session_id(std::string* session_id);
  private:
  const std::string& _internal_session_id() const;
  void _internal_set_session_id(const std::string& value);
  std::string* _internal_mutable_session_id();
  public:

  // required .bgs.protocol.EntityId game_account_id = 1;
  bool has_game_account_id() const;
  private:
  bool _internal_has_game_account_id() const;
  public:
  void clear_game_account_id();
  const ::bgs::protocol::EntityId& game_account_id() const;
  ::bgs::protocol::EntityId* release_game_account_id();
  ::bgs::protocol::EntityId* mutable_game_account_id();
  void set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_game_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_game_account_id();
  public:

  // optional .bgs.protocol.ProcessId host = 2;
  bool has_host() const;
  private:
  bool _internal_has_host() const;
  public:
  void clear_host();
  const ::bgs::protocol::ProcessId& host() const;
  ::bgs::protocol::ProcessId* release_host();
  ::bgs::protocol::ProcessId* mutable_host();
  void set_allocated_host(::bgs::protocol::ProcessId* host);
  private:
  const ::bgs::protocol::ProcessId& _internal_host() const;
  ::bgs::protocol::ProcessId* _internal_mutable_host();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr session_id_;
  ::bgs::protocol::EntityId* game_account_id_;
  ::bgs::protocol::ProcessId* host_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GameAccountOfflineNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification) */ {
 public:
  GameAccountOfflineNotification();
  virtual ~GameAccountOfflineNotification();

  GameAccountOfflineNotification(const GameAccountOfflineNotification& from);
  GameAccountOfflineNotification(GameAccountOfflineNotification&& from) noexcept
    : GameAccountOfflineNotification() {
    *this = ::std::move(from);
  }

  inline GameAccountOfflineNotification& operator=(const GameAccountOfflineNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameAccountOfflineNotification& operator=(GameAccountOfflineNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GameAccountOfflineNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameAccountOfflineNotification* internal_default_instance() {
    return reinterpret_cast<const GameAccountOfflineNotification*>(
               &_GameAccountOfflineNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GameAccountOfflineNotification& a, GameAccountOfflineNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(GameAccountOfflineNotification* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GameAccountOfflineNotification* New() const final {
    return CreateMaybeMessage<GameAccountOfflineNotification>(nullptr);
  }

  GameAccountOfflineNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GameAccountOfflineNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GameAccountOfflineNotification& from);
  void MergeFrom(const GameAccountOfflineNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameAccountOfflineNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.GameAccountOfflineNotification";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionIdFieldNumber = 3,
    kGameAccountIdFieldNumber = 1,
    kHostFieldNumber = 2,
  };
  // optional string session_id = 3;
  bool has_session_id() const;
  private:
  bool _internal_has_session_id() const;
  public:
  void clear_session_id();
  const std::string& session_id() const;
  void set_session_id(const std::string& value);
  void set_session_id(std::string&& value);
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  std::string* mutable_session_id();
  std::string* release_session_id();
  void set_allocated_session_id(std::string* session_id);
  private:
  const std::string& _internal_session_id() const;
  void _internal_set_session_id(const std::string& value);
  std::string* _internal_mutable_session_id();
  public:

  // required .bgs.protocol.EntityId game_account_id = 1;
  bool has_game_account_id() const;
  private:
  bool _internal_has_game_account_id() const;
  public:
  void clear_game_account_id();
  const ::bgs::protocol::EntityId& game_account_id() const;
  ::bgs::protocol::EntityId* release_game_account_id();
  ::bgs::protocol::EntityId* mutable_game_account_id();
  void set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id);
  private:
  const ::bgs::protocol::EntityId& _internal_game_account_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_game_account_id();
  public:

  // optional .bgs.protocol.ProcessId host = 2;
  bool has_host() const;
  private:
  bool _internal_has_host() const;
  public:
  void clear_host();
  const ::bgs::protocol::ProcessId& host() const;
  ::bgs::protocol::ProcessId* release_host();
  ::bgs::protocol::ProcessId* mutable_host();
  void set_allocated_host(::bgs::protocol::ProcessId* host);
  private:
  const ::bgs::protocol::ProcessId& _internal_host() const;
  ::bgs::protocol::ProcessId* _internal_mutable_host();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr session_id_;
  ::bgs::protocol::EntityId* game_account_id_;
  ::bgs::protocol::ProcessId* host_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetAchievementsFileRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest) */ {
 public:
  GetAchievementsFileRequest();
  virtual ~GetAchievementsFileRequest();

  GetAchievementsFileRequest(const GetAchievementsFileRequest& from);
  GetAchievementsFileRequest(GetAchievementsFileRequest&& from) noexcept
    : GetAchievementsFileRequest() {
    *this = ::std::move(from);
  }

  inline GetAchievementsFileRequest& operator=(const GetAchievementsFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAchievementsFileRequest& operator=(GetAchievementsFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetAchievementsFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAchievementsFileRequest* internal_default_instance() {
    return reinterpret_cast<const GetAchievementsFileRequest*>(
               &_GetAchievementsFileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetAchievementsFileRequest& a, GetAchievementsFileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAchievementsFileRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetAchievementsFileRequest* New() const final {
    return CreateMaybeMessage<GetAchievementsFileRequest>(nullptr);
  }

  GetAchievementsFileRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetAchievementsFileRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetAchievementsFileRequest& from);
  void MergeFrom(const GetAchievementsFileRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAchievementsFileRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.GetAchievementsFileRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHostFieldNumber = 1,
  };
  // optional .bgs.protocol.ProcessId host = 1;
  bool has_host() const;
  private:
  bool _internal_has_host() const;
  public:
  void clear_host();
  const ::bgs::protocol::ProcessId& host() const;
  ::bgs::protocol::ProcessId* release_host();
  ::bgs::protocol::ProcessId* mutable_host();
  void set_allocated_host(::bgs::protocol::ProcessId* host);
  private:
  const ::bgs::protocol::ProcessId& _internal_host() const;
  ::bgs::protocol::ProcessId* _internal_mutable_host();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::ProcessId* host_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetAchievementsFileResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse) */ {
 public:
  GetAchievementsFileResponse();
  virtual ~GetAchievementsFileResponse();

  GetAchievementsFileResponse(const GetAchievementsFileResponse& from);
  GetAchievementsFileResponse(GetAchievementsFileResponse&& from) noexcept
    : GetAchievementsFileResponse() {
    *this = ::std::move(from);
  }

  inline GetAchievementsFileResponse& operator=(const GetAchievementsFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAchievementsFileResponse& operator=(GetAchievementsFileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetAchievementsFileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAchievementsFileResponse* internal_default_instance() {
    return reinterpret_cast<const GetAchievementsFileResponse*>(
               &_GetAchievementsFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GetAchievementsFileResponse& a, GetAchievementsFileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAchievementsFileResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetAchievementsFileResponse* New() const final {
    return CreateMaybeMessage<GetAchievementsFileResponse>(nullptr);
  }

  GetAchievementsFileResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetAchievementsFileResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetAchievementsFileResponse& from);
  void MergeFrom(const GetAchievementsFileResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAchievementsFileResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.GetAchievementsFileResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentHandleFieldNumber = 1,
  };
  // optional .bgs.protocol.ContentHandle content_handle = 1;
  bool has_content_handle() const;
  private:
  bool _internal_has_content_handle() const;
  public:
  void clear_content_handle();
  const ::bgs::protocol::ContentHandle& content_handle() const;
  ::bgs::protocol::ContentHandle* release_content_handle();
  ::bgs::protocol::ContentHandle* mutable_content_handle();
  void set_allocated_content_handle(::bgs::protocol::ContentHandle* content_handle);
  private:
  const ::bgs::protocol::ContentHandle& _internal_content_handle() const;
  ::bgs::protocol::ContentHandle* _internal_mutable_content_handle();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::ContentHandle* content_handle_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetAllValuesForAttributeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest) */ {
 public:
  GetAllValuesForAttributeRequest();
  virtual ~GetAllValuesForAttributeRequest();

  GetAllValuesForAttributeRequest(const GetAllValuesForAttributeRequest& from);
  GetAllValuesForAttributeRequest(GetAllValuesForAttributeRequest&& from) noexcept
    : GetAllValuesForAttributeRequest() {
    *this = ::std::move(from);
  }

  inline GetAllValuesForAttributeRequest& operator=(const GetAllValuesForAttributeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllValuesForAttributeRequest& operator=(GetAllValuesForAttributeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetAllValuesForAttributeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAllValuesForAttributeRequest* internal_default_instance() {
    return reinterpret_cast<const GetAllValuesForAttributeRequest*>(
               &_GetAllValuesForAttributeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GetAllValuesForAttributeRequest& a, GetAllValuesForAttributeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAllValuesForAttributeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetAllValuesForAttributeRequest* New() const final {
    return CreateMaybeMessage<GetAllValuesForAttributeRequest>(nullptr);
  }

  GetAllValuesForAttributeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetAllValuesForAttributeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetAllValuesForAttributeRequest& from);
  void MergeFrom(const GetAllValuesForAttributeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAllValuesForAttributeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeKeyFieldNumber = 1,
    kAgentIdFieldNumber = 2,
    kProgramFieldNumber = 5,
  };
  // optional string attribute_key = 1;
  bool has_attribute_key() const;
  private:
  bool _internal_has_attribute_key() const;
  public:
  void clear_attribute_key();
  const std::string& attribute_key() const;
  void set_attribute_key(const std::string& value);
  void set_attribute_key(std::string&& value);
  void set_attribute_key(const char* value);
  void set_attribute_key(const char* value, size_t size);
  std::string* mutable_attribute_key();
  std::string* release_attribute_key();
  void set_allocated_attribute_key(std::string* attribute_key);
  private:
  const std::string& _internal_attribute_key() const;
  void _internal_set_attribute_key(const std::string& value);
  std::string* _internal_mutable_attribute_key();
  public:

  // optional .bgs.protocol.EntityId agent_id = 2;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // optional fixed32 program = 5;
  bool has_program() const;
  private:
  bool _internal_has_program() const;
  public:
  void clear_program();
  ::PROTOBUF_NAMESPACE_ID::uint32 program() const;
  void set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program() const;
  void _internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr attribute_key_;
  ::bgs::protocol::EntityId* agent_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 program_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetAllValuesForAttributeResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse) */ {
 public:
  GetAllValuesForAttributeResponse();
  virtual ~GetAllValuesForAttributeResponse();

  GetAllValuesForAttributeResponse(const GetAllValuesForAttributeResponse& from);
  GetAllValuesForAttributeResponse(GetAllValuesForAttributeResponse&& from) noexcept
    : GetAllValuesForAttributeResponse() {
    *this = ::std::move(from);
  }

  inline GetAllValuesForAttributeResponse& operator=(const GetAllValuesForAttributeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllValuesForAttributeResponse& operator=(GetAllValuesForAttributeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetAllValuesForAttributeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAllValuesForAttributeResponse* internal_default_instance() {
    return reinterpret_cast<const GetAllValuesForAttributeResponse*>(
               &_GetAllValuesForAttributeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GetAllValuesForAttributeResponse& a, GetAllValuesForAttributeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAllValuesForAttributeResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetAllValuesForAttributeResponse* New() const final {
    return CreateMaybeMessage<GetAllValuesForAttributeResponse>(nullptr);
  }

  GetAllValuesForAttributeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetAllValuesForAttributeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetAllValuesForAttributeResponse& from);
  void MergeFrom(const GetAllValuesForAttributeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAllValuesForAttributeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeValueFieldNumber = 1,
  };
  // repeated .bgs.protocol.Variant attribute_value = 1;
  int attribute_value_size() const;
  private:
  int _internal_attribute_value_size() const;
  public:
  void clear_attribute_value();
  ::bgs::protocol::Variant* mutable_attribute_value(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Variant >*
      mutable_attribute_value();
  private:
  const ::bgs::protocol::Variant& _internal_attribute_value(int index) const;
  ::bgs::protocol::Variant* _internal_add_attribute_value();
  public:
  const ::bgs::protocol::Variant& attribute_value(int index) const;
  ::bgs::protocol::Variant* add_attribute_value();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Variant >&
      attribute_value() const;

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Variant > attribute_value_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RegisterUtilitiesRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest) */ {
 public:
  RegisterUtilitiesRequest();
  virtual ~RegisterUtilitiesRequest();

  RegisterUtilitiesRequest(const RegisterUtilitiesRequest& from);
  RegisterUtilitiesRequest(RegisterUtilitiesRequest&& from) noexcept
    : RegisterUtilitiesRequest() {
    *this = ::std::move(from);
  }

  inline RegisterUtilitiesRequest& operator=(const RegisterUtilitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterUtilitiesRequest& operator=(RegisterUtilitiesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RegisterUtilitiesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterUtilitiesRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterUtilitiesRequest*>(
               &_RegisterUtilitiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(RegisterUtilitiesRequest& a, RegisterUtilitiesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterUtilitiesRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RegisterUtilitiesRequest* New() const final {
    return CreateMaybeMessage<RegisterUtilitiesRequest>(nullptr);
  }

  RegisterUtilitiesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RegisterUtilitiesRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RegisterUtilitiesRequest& from);
  void MergeFrom(const RegisterUtilitiesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterUtilitiesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeFieldNumber = 1,
    kProgramFieldNumber = 2,
  };
  // repeated .bgs.protocol.Attribute attribute = 1;
  int attribute_size() const;
  private:
  int _internal_attribute_size() const;
  public:
  void clear_attribute();
  ::bgs::protocol::Attribute* mutable_attribute(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
      mutable_attribute();
  private:
  const ::bgs::protocol::Attribute& _internal_attribute(int index) const;
  ::bgs::protocol::Attribute* _internal_add_attribute();
  public:
  const ::bgs::protocol::Attribute& attribute(int index) const;
  ::bgs::protocol::Attribute* add_attribute();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
      attribute() const;

  // optional fixed32 program = 2;
  bool has_program() const;
  private:
  bool _internal_has_program() const;
  public:
  void clear_program();
  ::PROTOBUF_NAMESPACE_ID::uint32 program() const;
  void set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program() const;
  void _internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute > attribute_;
  ::PROTOBUF_NAMESPACE_ID::uint32 program_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RegisterUtilitiesResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse) */ {
 public:
  RegisterUtilitiesResponse();
  virtual ~RegisterUtilitiesResponse();

  RegisterUtilitiesResponse(const RegisterUtilitiesResponse& from);
  RegisterUtilitiesResponse(RegisterUtilitiesResponse&& from) noexcept
    : RegisterUtilitiesResponse() {
    *this = ::std::move(from);
  }

  inline RegisterUtilitiesResponse& operator=(const RegisterUtilitiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterUtilitiesResponse& operator=(RegisterUtilitiesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RegisterUtilitiesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterUtilitiesResponse* internal_default_instance() {
    return reinterpret_cast<const RegisterUtilitiesResponse*>(
               &_RegisterUtilitiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(RegisterUtilitiesResponse& a, RegisterUtilitiesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterUtilitiesResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RegisterUtilitiesResponse* New() const final {
    return CreateMaybeMessage<RegisterUtilitiesResponse>(nullptr);
  }

  RegisterUtilitiesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RegisterUtilitiesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RegisterUtilitiesResponse& from);
  void MergeFrom(const RegisterUtilitiesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterUtilitiesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientIdFieldNumber = 1,
  };
  // optional string client_id = 1;
  bool has_client_id() const;
  private:
  bool _internal_has_client_id() const;
  public:
  void clear_client_id();
  const std::string& client_id() const;
  void set_client_id(const std::string& value);
  void set_client_id(std::string&& value);
  void set_client_id(const char* value);
  void set_client_id(const char* value, size_t size);
  std::string* mutable_client_id();
  std::string* release_client_id();
  void set_allocated_client_id(std::string* client_id);
  private:
  const std::string& _internal_client_id() const;
  void _internal_set_client_id(const std::string& value);
  std::string* _internal_mutable_client_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// -------------------------------------------------------------------

class UnregisterUtilitiesRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest) */ {
 public:
  UnregisterUtilitiesRequest();
  virtual ~UnregisterUtilitiesRequest();

  UnregisterUtilitiesRequest(const UnregisterUtilitiesRequest& from);
  UnregisterUtilitiesRequest(UnregisterUtilitiesRequest&& from) noexcept
    : UnregisterUtilitiesRequest() {
    *this = ::std::move(from);
  }

  inline UnregisterUtilitiesRequest& operator=(const UnregisterUtilitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnregisterUtilitiesRequest& operator=(UnregisterUtilitiesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnregisterUtilitiesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnregisterUtilitiesRequest* internal_default_instance() {
    return reinterpret_cast<const UnregisterUtilitiesRequest*>(
               &_UnregisterUtilitiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(UnregisterUtilitiesRequest& a, UnregisterUtilitiesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UnregisterUtilitiesRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnregisterUtilitiesRequest* New() const final {
    return CreateMaybeMessage<UnregisterUtilitiesRequest>(nullptr);
  }

  UnregisterUtilitiesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnregisterUtilitiesRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnregisterUtilitiesRequest& from);
  void MergeFrom(const UnregisterUtilitiesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnregisterUtilitiesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClientRequest

// repeated .bgs.protocol.Attribute attribute = 1;
inline int ClientRequest::_internal_attribute_size() const {
  return attribute_.size();
}
inline int ClientRequest::attribute_size() const {
  return _internal_attribute_size();
}
inline ::bgs::protocol::Attribute* ClientRequest::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.ClientRequest.attribute)
  return attribute_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
ClientRequest::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.game_utilities.v1.ClientRequest.attribute)
  return &attribute_;
}
inline const ::bgs::protocol::Attribute& ClientRequest::_internal_attribute(int index) const {
  return attribute_.Get(index);
}
inline const ::bgs::protocol::Attribute& ClientRequest::attribute(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ClientRequest.attribute)
  return _internal_attribute(index);
}
inline ::bgs::protocol::Attribute* ClientRequest::_internal_add_attribute() {
  return attribute_.Add();
}
inline ::bgs::protocol::Attribute* ClientRequest::add_attribute() {
  // @@protoc_insertion_point(field_add:bgs.protocol.game_utilities.v1.ClientRequest.attribute)
  return _internal_add_attribute();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
ClientRequest::attribute() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.game_utilities.v1.ClientRequest.attribute)
  return attribute_;
}

// optional .bgs.protocol.ProcessId host = 2;
inline bool ClientRequest::_internal_has_host() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || host_ != nullptr);
  return value;
}
inline bool ClientRequest::has_host() const {
  return _internal_has_host();
}
inline const ::bgs::protocol::ProcessId& ClientRequest::_internal_host() const {
  const ::bgs::protocol::ProcessId* p = host_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ProcessId*>(
      &::bgs::protocol::_ProcessId_default_instance_);
}
inline const ::bgs::protocol::ProcessId& ClientRequest::host() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ClientRequest.host)
  return _internal_host();
}
inline ::bgs::protocol::ProcessId* ClientRequest::release_host() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.ClientRequest.host)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::ProcessId* temp = host_;
  host_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ProcessId* ClientRequest::_internal_mutable_host() {
  _has_bits_[0] |= 0x00000001u;
  if (host_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ProcessId>(GetArenaNoVirtual());
    host_ = p;
  }
  return host_;
}
inline ::bgs::protocol::ProcessId* ClientRequest::mutable_host() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.ClientRequest.host)
  return _internal_mutable_host();
}
inline void ClientRequest::set_allocated_host(::bgs::protocol::ProcessId* host) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_);
  }
  if (host) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.ClientRequest.host)
}

// optional .bgs.protocol.EntityId account_id = 3;
inline bool ClientRequest::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || account_id_ != nullptr);
  return value;
}
inline bool ClientRequest::has_account_id() const {
  return _internal_has_account_id();
}
inline const ::bgs::protocol::EntityId& ClientRequest::_internal_account_id() const {
  const ::bgs::protocol::EntityId* p = account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& ClientRequest::account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ClientRequest.account_id)
  return _internal_account_id();
}
inline ::bgs::protocol::EntityId* ClientRequest::release_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.ClientRequest.account_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = account_id_;
  account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* ClientRequest::_internal_mutable_account_id() {
  _has_bits_[0] |= 0x00000002u;
  if (account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    account_id_ = p;
  }
  return account_id_;
}
inline ::bgs::protocol::EntityId* ClientRequest::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.ClientRequest.account_id)
  return _internal_mutable_account_id();
}
inline void ClientRequest::set_allocated_account_id(::bgs::protocol::EntityId* account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_id_);
  }
  if (account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  account_id_ = account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.ClientRequest.account_id)
}

// optional .bgs.protocol.EntityId game_account_id = 4;
inline bool ClientRequest::_internal_has_game_account_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || game_account_id_ != nullptr);
  return value;
}
inline bool ClientRequest::has_game_account_id() const {
  return _internal_has_game_account_id();
}
inline const ::bgs::protocol::EntityId& ClientRequest::_internal_game_account_id() const {
  const ::bgs::protocol::EntityId* p = game_account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& ClientRequest::game_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ClientRequest.game_account_id)
  return _internal_game_account_id();
}
inline ::bgs::protocol::EntityId* ClientRequest::release_game_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.ClientRequest.game_account_id)
  _has_bits_[0] &= ~0x00000004u;
  ::bgs::protocol::EntityId* temp = game_account_id_;
  game_account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* ClientRequest::_internal_mutable_game_account_id() {
  _has_bits_[0] |= 0x00000004u;
  if (game_account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    game_account_id_ = p;
  }
  return game_account_id_;
}
inline ::bgs::protocol::EntityId* ClientRequest::mutable_game_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.ClientRequest.game_account_id)
  return _internal_mutable_game_account_id();
}
inline void ClientRequest::set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(game_account_id_);
  }
  if (game_account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      game_account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, game_account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  game_account_id_ = game_account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.ClientRequest.game_account_id)
}

// optional fixed32 program = 5;
inline bool ClientRequest::_internal_has_program() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ClientRequest::has_program() const {
  return _internal_has_program();
}
inline void ClientRequest::clear_program() {
  program_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ClientRequest::_internal_program() const {
  return program_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ClientRequest::program() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ClientRequest.program)
  return _internal_program();
}
inline void ClientRequest::_internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  program_ = value;
}
inline void ClientRequest::set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_program(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.ClientRequest.program)
}

// optional .bgs.protocol.game_utilities.v1.ClientInfo client_info = 6;
inline bool ClientRequest::_internal_has_client_info() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || client_info_ != nullptr);
  return value;
}
inline bool ClientRequest::has_client_info() const {
  return _internal_has_client_info();
}
inline const ::bgs::protocol::game_utilities::v1::ClientInfo& ClientRequest::_internal_client_info() const {
  const ::bgs::protocol::game_utilities::v1::ClientInfo* p = client_info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::game_utilities::v1::ClientInfo*>(
      &::bgs::protocol::game_utilities::v1::_ClientInfo_default_instance_);
}
inline const ::bgs::protocol::game_utilities::v1::ClientInfo& ClientRequest::client_info() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ClientRequest.client_info)
  return _internal_client_info();
}
inline ::bgs::protocol::game_utilities::v1::ClientInfo* ClientRequest::release_client_info() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.ClientRequest.client_info)
  _has_bits_[0] &= ~0x00000008u;
  ::bgs::protocol::game_utilities::v1::ClientInfo* temp = client_info_;
  client_info_ = nullptr;
  return temp;
}
inline ::bgs::protocol::game_utilities::v1::ClientInfo* ClientRequest::_internal_mutable_client_info() {
  _has_bits_[0] |= 0x00000008u;
  if (client_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::game_utilities::v1::ClientInfo>(GetArenaNoVirtual());
    client_info_ = p;
  }
  return client_info_;
}
inline ::bgs::protocol::game_utilities::v1::ClientInfo* ClientRequest::mutable_client_info() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.ClientRequest.client_info)
  return _internal_mutable_client_info();
}
inline void ClientRequest::set_allocated_client_info(::bgs::protocol::game_utilities::v1::ClientInfo* client_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(client_info_);
  }
  if (client_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      client_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, client_info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  client_info_ = client_info;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.ClientRequest.client_info)
}

// -------------------------------------------------------------------

// ClientResponse

// repeated .bgs.protocol.Attribute attribute = 1;
inline int ClientResponse::_internal_attribute_size() const {
  return attribute_.size();
}
inline int ClientResponse::attribute_size() const {
  return _internal_attribute_size();
}
inline ::bgs::protocol::Attribute* ClientResponse::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.ClientResponse.attribute)
  return attribute_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
ClientResponse::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.game_utilities.v1.ClientResponse.attribute)
  return &attribute_;
}
inline const ::bgs::protocol::Attribute& ClientResponse::_internal_attribute(int index) const {
  return attribute_.Get(index);
}
inline const ::bgs::protocol::Attribute& ClientResponse::attribute(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ClientResponse.attribute)
  return _internal_attribute(index);
}
inline ::bgs::protocol::Attribute* ClientResponse::_internal_add_attribute() {
  return attribute_.Add();
}
inline ::bgs::protocol::Attribute* ClientResponse::add_attribute() {
  // @@protoc_insertion_point(field_add:bgs.protocol.game_utilities.v1.ClientResponse.attribute)
  return _internal_add_attribute();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
ClientResponse::attribute() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.game_utilities.v1.ClientResponse.attribute)
  return attribute_;
}

// -------------------------------------------------------------------

// ServerRequest

// repeated .bgs.protocol.Attribute attribute = 1;
inline int ServerRequest::_internal_attribute_size() const {
  return attribute_.size();
}
inline int ServerRequest::attribute_size() const {
  return _internal_attribute_size();
}
inline ::bgs::protocol::Attribute* ServerRequest::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.ServerRequest.attribute)
  return attribute_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
ServerRequest::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.game_utilities.v1.ServerRequest.attribute)
  return &attribute_;
}
inline const ::bgs::protocol::Attribute& ServerRequest::_internal_attribute(int index) const {
  return attribute_.Get(index);
}
inline const ::bgs::protocol::Attribute& ServerRequest::attribute(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ServerRequest.attribute)
  return _internal_attribute(index);
}
inline ::bgs::protocol::Attribute* ServerRequest::_internal_add_attribute() {
  return attribute_.Add();
}
inline ::bgs::protocol::Attribute* ServerRequest::add_attribute() {
  // @@protoc_insertion_point(field_add:bgs.protocol.game_utilities.v1.ServerRequest.attribute)
  return _internal_add_attribute();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
ServerRequest::attribute() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.game_utilities.v1.ServerRequest.attribute)
  return attribute_;
}

// required fixed32 program = 2;
inline bool ServerRequest::_internal_has_program() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ServerRequest::has_program() const {
  return _internal_has_program();
}
inline void ServerRequest::clear_program() {
  program_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ServerRequest::_internal_program() const {
  return program_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ServerRequest::program() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ServerRequest.program)
  return _internal_program();
}
inline void ServerRequest::_internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  program_ = value;
}
inline void ServerRequest::set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_program(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.ServerRequest.program)
}

// optional .bgs.protocol.ProcessId host = 3;
inline bool ServerRequest::_internal_has_host() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || host_ != nullptr);
  return value;
}
inline bool ServerRequest::has_host() const {
  return _internal_has_host();
}
inline const ::bgs::protocol::ProcessId& ServerRequest::_internal_host() const {
  const ::bgs::protocol::ProcessId* p = host_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ProcessId*>(
      &::bgs::protocol::_ProcessId_default_instance_);
}
inline const ::bgs::protocol::ProcessId& ServerRequest::host() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ServerRequest.host)
  return _internal_host();
}
inline ::bgs::protocol::ProcessId* ServerRequest::release_host() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.ServerRequest.host)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::ProcessId* temp = host_;
  host_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ProcessId* ServerRequest::_internal_mutable_host() {
  _has_bits_[0] |= 0x00000001u;
  if (host_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ProcessId>(GetArenaNoVirtual());
    host_ = p;
  }
  return host_;
}
inline ::bgs::protocol::ProcessId* ServerRequest::mutable_host() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.ServerRequest.host)
  return _internal_mutable_host();
}
inline void ServerRequest::set_allocated_host(::bgs::protocol::ProcessId* host) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_);
  }
  if (host) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.ServerRequest.host)
}

// -------------------------------------------------------------------

// ServerResponse

// repeated .bgs.protocol.Attribute attribute = 1;
inline int ServerResponse::_internal_attribute_size() const {
  return attribute_.size();
}
inline int ServerResponse::attribute_size() const {
  return _internal_attribute_size();
}
inline ::bgs::protocol::Attribute* ServerResponse::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.ServerResponse.attribute)
  return attribute_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
ServerResponse::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.game_utilities.v1.ServerResponse.attribute)
  return &attribute_;
}
inline const ::bgs::protocol::Attribute& ServerResponse::_internal_attribute(int index) const {
  return attribute_.Get(index);
}
inline const ::bgs::protocol::Attribute& ServerResponse::attribute(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ServerResponse.attribute)
  return _internal_attribute(index);
}
inline ::bgs::protocol::Attribute* ServerResponse::_internal_add_attribute() {
  return attribute_.Add();
}
inline ::bgs::protocol::Attribute* ServerResponse::add_attribute() {
  // @@protoc_insertion_point(field_add:bgs.protocol.game_utilities.v1.ServerResponse.attribute)
  return _internal_add_attribute();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
ServerResponse::attribute() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.game_utilities.v1.ServerResponse.attribute)
  return attribute_;
}

// -------------------------------------------------------------------

// PresenceChannelCreatedRequest

// required .bgs.protocol.EntityId id = 1;
inline bool PresenceChannelCreatedRequest::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || id_ != nullptr);
  return value;
}
inline bool PresenceChannelCreatedRequest::has_id() const {
  return _internal_has_id();
}
inline const ::bgs::protocol::EntityId& PresenceChannelCreatedRequest::_internal_id() const {
  const ::bgs::protocol::EntityId* p = id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& PresenceChannelCreatedRequest::id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.id)
  return _internal_id();
}
inline ::bgs::protocol::EntityId* PresenceChannelCreatedRequest::release_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = id_;
  id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* PresenceChannelCreatedRequest::_internal_mutable_id() {
  _has_bits_[0] |= 0x00000001u;
  if (id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    id_ = p;
  }
  return id_;
}
inline ::bgs::protocol::EntityId* PresenceChannelCreatedRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.id)
  return _internal_mutable_id();
}
inline void PresenceChannelCreatedRequest::set_allocated_id(::bgs::protocol::EntityId* id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(id_);
  }
  if (id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.id)
}

// optional .bgs.protocol.EntityId game_account_id = 3;
inline bool PresenceChannelCreatedRequest::_internal_has_game_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || game_account_id_ != nullptr);
  return value;
}
inline bool PresenceChannelCreatedRequest::has_game_account_id() const {
  return _internal_has_game_account_id();
}
inline const ::bgs::protocol::EntityId& PresenceChannelCreatedRequest::_internal_game_account_id() const {
  const ::bgs::protocol::EntityId* p = game_account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& PresenceChannelCreatedRequest::game_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.game_account_id)
  return _internal_game_account_id();
}
inline ::bgs::protocol::EntityId* PresenceChannelCreatedRequest::release_game_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.game_account_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = game_account_id_;
  game_account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* PresenceChannelCreatedRequest::_internal_mutable_game_account_id() {
  _has_bits_[0] |= 0x00000002u;
  if (game_account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    game_account_id_ = p;
  }
  return game_account_id_;
}
inline ::bgs::protocol::EntityId* PresenceChannelCreatedRequest::mutable_game_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.game_account_id)
  return _internal_mutable_game_account_id();
}
inline void PresenceChannelCreatedRequest::set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(game_account_id_);
  }
  if (game_account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      game_account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, game_account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  game_account_id_ = game_account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.game_account_id)
}

// optional .bgs.protocol.EntityId account_id = 4;
inline bool PresenceChannelCreatedRequest::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || account_id_ != nullptr);
  return value;
}
inline bool PresenceChannelCreatedRequest::has_account_id() const {
  return _internal_has_account_id();
}
inline const ::bgs::protocol::EntityId& PresenceChannelCreatedRequest::_internal_account_id() const {
  const ::bgs::protocol::EntityId* p = account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& PresenceChannelCreatedRequest::account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.account_id)
  return _internal_account_id();
}
inline ::bgs::protocol::EntityId* PresenceChannelCreatedRequest::release_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.account_id)
  _has_bits_[0] &= ~0x00000004u;
  ::bgs::protocol::EntityId* temp = account_id_;
  account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* PresenceChannelCreatedRequest::_internal_mutable_account_id() {
  _has_bits_[0] |= 0x00000004u;
  if (account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    account_id_ = p;
  }
  return account_id_;
}
inline ::bgs::protocol::EntityId* PresenceChannelCreatedRequest::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.account_id)
  return _internal_mutable_account_id();
}
inline void PresenceChannelCreatedRequest::set_allocated_account_id(::bgs::protocol::EntityId* account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_id_);
  }
  if (account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  account_id_ = account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.account_id)
}

// optional .bgs.protocol.ProcessId host = 5;
inline bool PresenceChannelCreatedRequest::_internal_has_host() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || host_ != nullptr);
  return value;
}
inline bool PresenceChannelCreatedRequest::has_host() const {
  return _internal_has_host();
}
inline const ::bgs::protocol::ProcessId& PresenceChannelCreatedRequest::_internal_host() const {
  const ::bgs::protocol::ProcessId* p = host_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ProcessId*>(
      &::bgs::protocol::_ProcessId_default_instance_);
}
inline const ::bgs::protocol::ProcessId& PresenceChannelCreatedRequest::host() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.host)
  return _internal_host();
}
inline ::bgs::protocol::ProcessId* PresenceChannelCreatedRequest::release_host() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.host)
  _has_bits_[0] &= ~0x00000008u;
  ::bgs::protocol::ProcessId* temp = host_;
  host_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ProcessId* PresenceChannelCreatedRequest::_internal_mutable_host() {
  _has_bits_[0] |= 0x00000008u;
  if (host_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ProcessId>(GetArenaNoVirtual());
    host_ = p;
  }
  return host_;
}
inline ::bgs::protocol::ProcessId* PresenceChannelCreatedRequest::mutable_host() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.host)
  return _internal_mutable_host();
}
inline void PresenceChannelCreatedRequest::set_allocated_host(::bgs::protocol::ProcessId* host) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_);
  }
  if (host) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest.host)
}

// -------------------------------------------------------------------

// GetPlayerVariablesRequest

// repeated .bgs.protocol.game_utilities.v1.PlayerVariables player_variables = 1;
inline int GetPlayerVariablesRequest::_internal_player_variables_size() const {
  return player_variables_.size();
}
inline int GetPlayerVariablesRequest::player_variables_size() const {
  return _internal_player_variables_size();
}
inline ::bgs::protocol::game_utilities::v1::PlayerVariables* GetPlayerVariablesRequest::mutable_player_variables(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest.player_variables)
  return player_variables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::game_utilities::v1::PlayerVariables >*
GetPlayerVariablesRequest::mutable_player_variables() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest.player_variables)
  return &player_variables_;
}
inline const ::bgs::protocol::game_utilities::v1::PlayerVariables& GetPlayerVariablesRequest::_internal_player_variables(int index) const {
  return player_variables_.Get(index);
}
inline const ::bgs::protocol::game_utilities::v1::PlayerVariables& GetPlayerVariablesRequest::player_variables(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest.player_variables)
  return _internal_player_variables(index);
}
inline ::bgs::protocol::game_utilities::v1::PlayerVariables* GetPlayerVariablesRequest::_internal_add_player_variables() {
  return player_variables_.Add();
}
inline ::bgs::protocol::game_utilities::v1::PlayerVariables* GetPlayerVariablesRequest::add_player_variables() {
  // @@protoc_insertion_point(field_add:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest.player_variables)
  return _internal_add_player_variables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::game_utilities::v1::PlayerVariables >&
GetPlayerVariablesRequest::player_variables() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest.player_variables)
  return player_variables_;
}

// optional .bgs.protocol.ProcessId host = 2;
inline bool GetPlayerVariablesRequest::_internal_has_host() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || host_ != nullptr);
  return value;
}
inline bool GetPlayerVariablesRequest::has_host() const {
  return _internal_has_host();
}
inline const ::bgs::protocol::ProcessId& GetPlayerVariablesRequest::_internal_host() const {
  const ::bgs::protocol::ProcessId* p = host_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ProcessId*>(
      &::bgs::protocol::_ProcessId_default_instance_);
}
inline const ::bgs::protocol::ProcessId& GetPlayerVariablesRequest::host() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest.host)
  return _internal_host();
}
inline ::bgs::protocol::ProcessId* GetPlayerVariablesRequest::release_host() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest.host)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::ProcessId* temp = host_;
  host_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ProcessId* GetPlayerVariablesRequest::_internal_mutable_host() {
  _has_bits_[0] |= 0x00000001u;
  if (host_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ProcessId>(GetArenaNoVirtual());
    host_ = p;
  }
  return host_;
}
inline ::bgs::protocol::ProcessId* GetPlayerVariablesRequest::mutable_host() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest.host)
  return _internal_mutable_host();
}
inline void GetPlayerVariablesRequest::set_allocated_host(::bgs::protocol::ProcessId* host) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_);
  }
  if (host) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GetPlayerVariablesRequest.host)
}

// -------------------------------------------------------------------

// GetPlayerVariablesResponse

// repeated .bgs.protocol.game_utilities.v1.PlayerVariables player_variables = 1;
inline int GetPlayerVariablesResponse::_internal_player_variables_size() const {
  return player_variables_.size();
}
inline int GetPlayerVariablesResponse::player_variables_size() const {
  return _internal_player_variables_size();
}
inline ::bgs::protocol::game_utilities::v1::PlayerVariables* GetPlayerVariablesResponse::mutable_player_variables(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse.player_variables)
  return player_variables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::game_utilities::v1::PlayerVariables >*
GetPlayerVariablesResponse::mutable_player_variables() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse.player_variables)
  return &player_variables_;
}
inline const ::bgs::protocol::game_utilities::v1::PlayerVariables& GetPlayerVariablesResponse::_internal_player_variables(int index) const {
  return player_variables_.Get(index);
}
inline const ::bgs::protocol::game_utilities::v1::PlayerVariables& GetPlayerVariablesResponse::player_variables(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse.player_variables)
  return _internal_player_variables(index);
}
inline ::bgs::protocol::game_utilities::v1::PlayerVariables* GetPlayerVariablesResponse::_internal_add_player_variables() {
  return player_variables_.Add();
}
inline ::bgs::protocol::game_utilities::v1::PlayerVariables* GetPlayerVariablesResponse::add_player_variables() {
  // @@protoc_insertion_point(field_add:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse.player_variables)
  return _internal_add_player_variables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::game_utilities::v1::PlayerVariables >&
GetPlayerVariablesResponse::player_variables() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.game_utilities.v1.GetPlayerVariablesResponse.player_variables)
  return player_variables_;
}

// -------------------------------------------------------------------

// GameAccountOnlineNotification

// required .bgs.protocol.EntityId game_account_id = 1;
inline bool GameAccountOnlineNotification::_internal_has_game_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || game_account_id_ != nullptr);
  return value;
}
inline bool GameAccountOnlineNotification::has_game_account_id() const {
  return _internal_has_game_account_id();
}
inline const ::bgs::protocol::EntityId& GameAccountOnlineNotification::_internal_game_account_id() const {
  const ::bgs::protocol::EntityId* p = game_account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& GameAccountOnlineNotification::game_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.game_account_id)
  return _internal_game_account_id();
}
inline ::bgs::protocol::EntityId* GameAccountOnlineNotification::release_game_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.game_account_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = game_account_id_;
  game_account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* GameAccountOnlineNotification::_internal_mutable_game_account_id() {
  _has_bits_[0] |= 0x00000002u;
  if (game_account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    game_account_id_ = p;
  }
  return game_account_id_;
}
inline ::bgs::protocol::EntityId* GameAccountOnlineNotification::mutable_game_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.game_account_id)
  return _internal_mutable_game_account_id();
}
inline void GameAccountOnlineNotification::set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(game_account_id_);
  }
  if (game_account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      game_account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, game_account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  game_account_id_ = game_account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.game_account_id)
}

// optional .bgs.protocol.ProcessId host = 2;
inline bool GameAccountOnlineNotification::_internal_has_host() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || host_ != nullptr);
  return value;
}
inline bool GameAccountOnlineNotification::has_host() const {
  return _internal_has_host();
}
inline const ::bgs::protocol::ProcessId& GameAccountOnlineNotification::_internal_host() const {
  const ::bgs::protocol::ProcessId* p = host_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ProcessId*>(
      &::bgs::protocol::_ProcessId_default_instance_);
}
inline const ::bgs::protocol::ProcessId& GameAccountOnlineNotification::host() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.host)
  return _internal_host();
}
inline ::bgs::protocol::ProcessId* GameAccountOnlineNotification::release_host() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.host)
  _has_bits_[0] &= ~0x00000004u;
  ::bgs::protocol::ProcessId* temp = host_;
  host_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ProcessId* GameAccountOnlineNotification::_internal_mutable_host() {
  _has_bits_[0] |= 0x00000004u;
  if (host_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ProcessId>(GetArenaNoVirtual());
    host_ = p;
  }
  return host_;
}
inline ::bgs::protocol::ProcessId* GameAccountOnlineNotification::mutable_host() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.host)
  return _internal_mutable_host();
}
inline void GameAccountOnlineNotification::set_allocated_host(::bgs::protocol::ProcessId* host) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_);
  }
  if (host) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.host)
}

// optional string session_id = 3;
inline bool GameAccountOnlineNotification::_internal_has_session_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GameAccountOnlineNotification::has_session_id() const {
  return _internal_has_session_id();
}
inline void GameAccountOnlineNotification::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GameAccountOnlineNotification::session_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.session_id)
  return _internal_session_id();
}
inline void GameAccountOnlineNotification::set_session_id(const std::string& value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.session_id)
}
inline std::string* GameAccountOnlineNotification::mutable_session_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.session_id)
  return _internal_mutable_session_id();
}
inline const std::string& GameAccountOnlineNotification::_internal_session_id() const {
  return session_id_.GetNoArena();
}
inline void GameAccountOnlineNotification::_internal_set_session_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  session_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GameAccountOnlineNotification::set_session_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  session_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.session_id)
}
inline void GameAccountOnlineNotification::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  session_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.session_id)
}
inline void GameAccountOnlineNotification::set_session_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  session_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.session_id)
}
inline std::string* GameAccountOnlineNotification::_internal_mutable_session_id() {
  _has_bits_[0] |= 0x00000001u;
  return session_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GameAccountOnlineNotification::release_session_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.session_id)
  if (!_internal_has_session_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return session_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GameAccountOnlineNotification::set_allocated_session_id(std::string* session_id) {
  if (session_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  session_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GameAccountOnlineNotification.session_id)
}

// -------------------------------------------------------------------

// GameAccountOfflineNotification

// required .bgs.protocol.EntityId game_account_id = 1;
inline bool GameAccountOfflineNotification::_internal_has_game_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || game_account_id_ != nullptr);
  return value;
}
inline bool GameAccountOfflineNotification::has_game_account_id() const {
  return _internal_has_game_account_id();
}
inline const ::bgs::protocol::EntityId& GameAccountOfflineNotification::_internal_game_account_id() const {
  const ::bgs::protocol::EntityId* p = game_account_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& GameAccountOfflineNotification::game_account_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.game_account_id)
  return _internal_game_account_id();
}
inline ::bgs::protocol::EntityId* GameAccountOfflineNotification::release_game_account_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.game_account_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = game_account_id_;
  game_account_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* GameAccountOfflineNotification::_internal_mutable_game_account_id() {
  _has_bits_[0] |= 0x00000002u;
  if (game_account_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    game_account_id_ = p;
  }
  return game_account_id_;
}
inline ::bgs::protocol::EntityId* GameAccountOfflineNotification::mutable_game_account_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.game_account_id)
  return _internal_mutable_game_account_id();
}
inline void GameAccountOfflineNotification::set_allocated_game_account_id(::bgs::protocol::EntityId* game_account_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(game_account_id_);
  }
  if (game_account_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      game_account_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, game_account_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  game_account_id_ = game_account_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.game_account_id)
}

// optional .bgs.protocol.ProcessId host = 2;
inline bool GameAccountOfflineNotification::_internal_has_host() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || host_ != nullptr);
  return value;
}
inline bool GameAccountOfflineNotification::has_host() const {
  return _internal_has_host();
}
inline const ::bgs::protocol::ProcessId& GameAccountOfflineNotification::_internal_host() const {
  const ::bgs::protocol::ProcessId* p = host_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ProcessId*>(
      &::bgs::protocol::_ProcessId_default_instance_);
}
inline const ::bgs::protocol::ProcessId& GameAccountOfflineNotification::host() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.host)
  return _internal_host();
}
inline ::bgs::protocol::ProcessId* GameAccountOfflineNotification::release_host() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.host)
  _has_bits_[0] &= ~0x00000004u;
  ::bgs::protocol::ProcessId* temp = host_;
  host_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ProcessId* GameAccountOfflineNotification::_internal_mutable_host() {
  _has_bits_[0] |= 0x00000004u;
  if (host_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ProcessId>(GetArenaNoVirtual());
    host_ = p;
  }
  return host_;
}
inline ::bgs::protocol::ProcessId* GameAccountOfflineNotification::mutable_host() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.host)
  return _internal_mutable_host();
}
inline void GameAccountOfflineNotification::set_allocated_host(::bgs::protocol::ProcessId* host) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_);
  }
  if (host) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.host)
}

// optional string session_id = 3;
inline bool GameAccountOfflineNotification::_internal_has_session_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GameAccountOfflineNotification::has_session_id() const {
  return _internal_has_session_id();
}
inline void GameAccountOfflineNotification::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GameAccountOfflineNotification::session_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.session_id)
  return _internal_session_id();
}
inline void GameAccountOfflineNotification::set_session_id(const std::string& value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.session_id)
}
inline std::string* GameAccountOfflineNotification::mutable_session_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.session_id)
  return _internal_mutable_session_id();
}
inline const std::string& GameAccountOfflineNotification::_internal_session_id() const {
  return session_id_.GetNoArena();
}
inline void GameAccountOfflineNotification::_internal_set_session_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  session_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GameAccountOfflineNotification::set_session_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  session_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.session_id)
}
inline void GameAccountOfflineNotification::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  session_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.session_id)
}
inline void GameAccountOfflineNotification::set_session_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  session_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.session_id)
}
inline std::string* GameAccountOfflineNotification::_internal_mutable_session_id() {
  _has_bits_[0] |= 0x00000001u;
  return session_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GameAccountOfflineNotification::release_session_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.session_id)
  if (!_internal_has_session_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return session_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GameAccountOfflineNotification::set_allocated_session_id(std::string* session_id) {
  if (session_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  session_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GameAccountOfflineNotification.session_id)
}

// -------------------------------------------------------------------

// GetAchievementsFileRequest

// optional .bgs.protocol.ProcessId host = 1;
inline bool GetAchievementsFileRequest::_internal_has_host() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || host_ != nullptr);
  return value;
}
inline bool GetAchievementsFileRequest::has_host() const {
  return _internal_has_host();
}
inline const ::bgs::protocol::ProcessId& GetAchievementsFileRequest::_internal_host() const {
  const ::bgs::protocol::ProcessId* p = host_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ProcessId*>(
      &::bgs::protocol::_ProcessId_default_instance_);
}
inline const ::bgs::protocol::ProcessId& GetAchievementsFileRequest::host() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest.host)
  return _internal_host();
}
inline ::bgs::protocol::ProcessId* GetAchievementsFileRequest::release_host() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest.host)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::ProcessId* temp = host_;
  host_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ProcessId* GetAchievementsFileRequest::_internal_mutable_host() {
  _has_bits_[0] |= 0x00000001u;
  if (host_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ProcessId>(GetArenaNoVirtual());
    host_ = p;
  }
  return host_;
}
inline ::bgs::protocol::ProcessId* GetAchievementsFileRequest::mutable_host() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest.host)
  return _internal_mutable_host();
}
inline void GetAchievementsFileRequest::set_allocated_host(::bgs::protocol::ProcessId* host) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_);
  }
  if (host) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GetAchievementsFileRequest.host)
}

// -------------------------------------------------------------------

// GetAchievementsFileResponse

// optional .bgs.protocol.ContentHandle content_handle = 1;
inline bool GetAchievementsFileResponse::_internal_has_content_handle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || content_handle_ != nullptr);
  return value;
}
inline bool GetAchievementsFileResponse::has_content_handle() const {
  return _internal_has_content_handle();
}
inline const ::bgs::protocol::ContentHandle& GetAchievementsFileResponse::_internal_content_handle() const {
  const ::bgs::protocol::ContentHandle* p = content_handle_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::ContentHandle*>(
      &::bgs::protocol::_ContentHandle_default_instance_);
}
inline const ::bgs::protocol::ContentHandle& GetAchievementsFileResponse::content_handle() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse.content_handle)
  return _internal_content_handle();
}
inline ::bgs::protocol::ContentHandle* GetAchievementsFileResponse::release_content_handle() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse.content_handle)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::ContentHandle* temp = content_handle_;
  content_handle_ = nullptr;
  return temp;
}
inline ::bgs::protocol::ContentHandle* GetAchievementsFileResponse::_internal_mutable_content_handle() {
  _has_bits_[0] |= 0x00000001u;
  if (content_handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::ContentHandle>(GetArenaNoVirtual());
    content_handle_ = p;
  }
  return content_handle_;
}
inline ::bgs::protocol::ContentHandle* GetAchievementsFileResponse::mutable_content_handle() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse.content_handle)
  return _internal_mutable_content_handle();
}
inline void GetAchievementsFileResponse::set_allocated_content_handle(::bgs::protocol::ContentHandle* content_handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(content_handle_);
  }
  if (content_handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      content_handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content_handle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  content_handle_ = content_handle;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GetAchievementsFileResponse.content_handle)
}

// -------------------------------------------------------------------

// GetAllValuesForAttributeRequest

// optional string attribute_key = 1;
inline bool GetAllValuesForAttributeRequest::_internal_has_attribute_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetAllValuesForAttributeRequest::has_attribute_key() const {
  return _internal_has_attribute_key();
}
inline void GetAllValuesForAttributeRequest::clear_attribute_key() {
  attribute_key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetAllValuesForAttributeRequest::attribute_key() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.attribute_key)
  return _internal_attribute_key();
}
inline void GetAllValuesForAttributeRequest::set_attribute_key(const std::string& value) {
  _internal_set_attribute_key(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.attribute_key)
}
inline std::string* GetAllValuesForAttributeRequest::mutable_attribute_key() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.attribute_key)
  return _internal_mutable_attribute_key();
}
inline const std::string& GetAllValuesForAttributeRequest::_internal_attribute_key() const {
  return attribute_key_.GetNoArena();
}
inline void GetAllValuesForAttributeRequest::_internal_set_attribute_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  attribute_key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GetAllValuesForAttributeRequest::set_attribute_key(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  attribute_key_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.attribute_key)
}
inline void GetAllValuesForAttributeRequest::set_attribute_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  attribute_key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.attribute_key)
}
inline void GetAllValuesForAttributeRequest::set_attribute_key(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  attribute_key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.attribute_key)
}
inline std::string* GetAllValuesForAttributeRequest::_internal_mutable_attribute_key() {
  _has_bits_[0] |= 0x00000001u;
  return attribute_key_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetAllValuesForAttributeRequest::release_attribute_key() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.attribute_key)
  if (!_internal_has_attribute_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return attribute_key_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetAllValuesForAttributeRequest::set_allocated_attribute_key(std::string* attribute_key) {
  if (attribute_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  attribute_key_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), attribute_key);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.attribute_key)
}

// optional .bgs.protocol.EntityId agent_id = 2;
inline bool GetAllValuesForAttributeRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool GetAllValuesForAttributeRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& GetAllValuesForAttributeRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& GetAllValuesForAttributeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* GetAllValuesForAttributeRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.agent_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* GetAllValuesForAttributeRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000002u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* GetAllValuesForAttributeRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void GetAllValuesForAttributeRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.agent_id)
}

// optional fixed32 program = 5;
inline bool GetAllValuesForAttributeRequest::_internal_has_program() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetAllValuesForAttributeRequest::has_program() const {
  return _internal_has_program();
}
inline void GetAllValuesForAttributeRequest::clear_program() {
  program_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetAllValuesForAttributeRequest::_internal_program() const {
  return program_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetAllValuesForAttributeRequest::program() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.program)
  return _internal_program();
}
inline void GetAllValuesForAttributeRequest::_internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  program_ = value;
}
inline void GetAllValuesForAttributeRequest::set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_program(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest.program)
}

// -------------------------------------------------------------------

// GetAllValuesForAttributeResponse

// repeated .bgs.protocol.Variant attribute_value = 1;
inline int GetAllValuesForAttributeResponse::_internal_attribute_value_size() const {
  return attribute_value_.size();
}
inline int GetAllValuesForAttributeResponse::attribute_value_size() const {
  return _internal_attribute_value_size();
}
inline ::bgs::protocol::Variant* GetAllValuesForAttributeResponse::mutable_attribute_value(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse.attribute_value)
  return attribute_value_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Variant >*
GetAllValuesForAttributeResponse::mutable_attribute_value() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse.attribute_value)
  return &attribute_value_;
}
inline const ::bgs::protocol::Variant& GetAllValuesForAttributeResponse::_internal_attribute_value(int index) const {
  return attribute_value_.Get(index);
}
inline const ::bgs::protocol::Variant& GetAllValuesForAttributeResponse::attribute_value(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse.attribute_value)
  return _internal_attribute_value(index);
}
inline ::bgs::protocol::Variant* GetAllValuesForAttributeResponse::_internal_add_attribute_value() {
  return attribute_value_.Add();
}
inline ::bgs::protocol::Variant* GetAllValuesForAttributeResponse::add_attribute_value() {
  // @@protoc_insertion_point(field_add:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse.attribute_value)
  return _internal_add_attribute_value();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Variant >&
GetAllValuesForAttributeResponse::attribute_value() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse.attribute_value)
  return attribute_value_;
}

// -------------------------------------------------------------------

// RegisterUtilitiesRequest

// repeated .bgs.protocol.Attribute attribute = 1;
inline int RegisterUtilitiesRequest::_internal_attribute_size() const {
  return attribute_.size();
}
inline int RegisterUtilitiesRequest::attribute_size() const {
  return _internal_attribute_size();
}
inline ::bgs::protocol::Attribute* RegisterUtilitiesRequest::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest.attribute)
  return attribute_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
RegisterUtilitiesRequest::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest.attribute)
  return &attribute_;
}
inline const ::bgs::protocol::Attribute& RegisterUtilitiesRequest::_internal_attribute(int index) const {
  return attribute_.Get(index);
}
inline const ::bgs::protocol::Attribute& RegisterUtilitiesRequest::attribute(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest.attribute)
  return _internal_attribute(index);
}
inline ::bgs::protocol::Attribute* RegisterUtilitiesRequest::_internal_add_attribute() {
  return attribute_.Add();
}
inline ::bgs::protocol::Attribute* RegisterUtilitiesRequest::add_attribute() {
  // @@protoc_insertion_point(field_add:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest.attribute)
  return _internal_add_attribute();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
RegisterUtilitiesRequest::attribute() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest.attribute)
  return attribute_;
}

// optional fixed32 program = 2;
inline bool RegisterUtilitiesRequest::_internal_has_program() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RegisterUtilitiesRequest::has_program() const {
  return _internal_has_program();
}
inline void RegisterUtilitiesRequest::clear_program() {
  program_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RegisterUtilitiesRequest::_internal_program() const {
  return program_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RegisterUtilitiesRequest::program() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest.program)
  return _internal_program();
}
inline void RegisterUtilitiesRequest::_internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  program_ = value;
}
inline void RegisterUtilitiesRequest::set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_program(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest.program)
}

// -------------------------------------------------------------------

// RegisterUtilitiesResponse

// optional string client_id = 1;
inline bool RegisterUtilitiesResponse::_internal_has_client_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RegisterUtilitiesResponse::has_client_id() const {
  return _internal_has_client_id();
}
inline void RegisterUtilitiesResponse::clear_client_id() {
  client_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RegisterUtilitiesResponse::client_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse.client_id)
  return _internal_client_id();
}
inline void RegisterUtilitiesResponse::set_client_id(const std::string& value) {
  _internal_set_client_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse.client_id)
}
inline std::string* RegisterUtilitiesResponse::mutable_client_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse.client_id)
  return _internal_mutable_client_id();
}
inline const std::string& RegisterUtilitiesResponse::_internal_client_id() const {
  return client_id_.GetNoArena();
}
inline void RegisterUtilitiesResponse::_internal_set_client_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  client_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void RegisterUtilitiesResponse::set_client_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  client_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse.client_id)
}
inline void RegisterUtilitiesResponse::set_client_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  client_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse.client_id)
}
inline void RegisterUtilitiesResponse::set_client_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  client_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse.client_id)
}
inline std::string* RegisterUtilitiesResponse::_internal_mutable_client_id() {
  _has_bits_[0] |= 0x00000001u;
  return client_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RegisterUtilitiesResponse::release_client_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse.client_id)
  if (!_internal_has_client_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return client_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterUtilitiesResponse::set_allocated_client_id(std::string* client_id) {
  if (client_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  client_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), client_id);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse.client_id)
}

// -------------------------------------------------------------------

// UnregisterUtilitiesRequest

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace game_utilities
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5fservice_2eproto
