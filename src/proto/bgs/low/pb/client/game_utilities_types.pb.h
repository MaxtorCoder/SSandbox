// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/game_utilities_types.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "bgs/low/pb/client/attribute_types.pb.h"
#include "bgs/low/pb/client/entity_types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto;
namespace bgs {
namespace protocol {
namespace game_utilities {
namespace v1 {
class ClientInfo;
class ClientInfoDefaultTypeInternal;
extern ClientInfoDefaultTypeInternal _ClientInfo_default_instance_;
class PlayerVariables;
class PlayerVariablesDefaultTypeInternal;
extern PlayerVariablesDefaultTypeInternal _PlayerVariables_default_instance_;
}  // namespace v1
}  // namespace game_utilities
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> ::bgs::protocol::game_utilities::v1::ClientInfo* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::ClientInfo>(Arena*);
template<> ::bgs::protocol::game_utilities::v1::PlayerVariables* Arena::CreateMaybeMessage<::bgs::protocol::game_utilities::v1::PlayerVariables>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bgs {
namespace protocol {
namespace game_utilities {
namespace v1 {

// ===================================================================

class PlayerVariables :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.PlayerVariables) */ {
 public:
  PlayerVariables();
  virtual ~PlayerVariables();

  PlayerVariables(const PlayerVariables& from);
  PlayerVariables(PlayerVariables&& from) noexcept
    : PlayerVariables() {
    *this = ::std::move(from);
  }

  inline PlayerVariables& operator=(const PlayerVariables& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerVariables& operator=(PlayerVariables&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlayerVariables& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerVariables* internal_default_instance() {
    return reinterpret_cast<const PlayerVariables*>(
               &_PlayerVariables_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PlayerVariables& a, PlayerVariables& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerVariables* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlayerVariables* New() const final {
    return CreateMaybeMessage<PlayerVariables>(nullptr);
  }

  PlayerVariables* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlayerVariables>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlayerVariables& from);
  void MergeFrom(const PlayerVariables& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerVariables* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.PlayerVariables";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributeFieldNumber = 3,
    kIdentityFieldNumber = 1,
    kRatingFieldNumber = 2,
  };
  // repeated .bgs.protocol.Attribute attribute = 3;
  int attribute_size() const;
  private:
  int _internal_attribute_size() const;
  public:
  void clear_attribute();
  ::bgs::protocol::Attribute* mutable_attribute(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
      mutable_attribute();
  private:
  const ::bgs::protocol::Attribute& _internal_attribute(int index) const;
  ::bgs::protocol::Attribute* _internal_add_attribute();
  public:
  const ::bgs::protocol::Attribute& attribute(int index) const;
  ::bgs::protocol::Attribute* add_attribute();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
      attribute() const;

  // required .bgs.protocol.Identity identity = 1;
  bool has_identity() const;
  private:
  bool _internal_has_identity() const;
  public:
  void clear_identity();
  const ::bgs::protocol::Identity& identity() const;
  ::bgs::protocol::Identity* release_identity();
  ::bgs::protocol::Identity* mutable_identity();
  void set_allocated_identity(::bgs::protocol::Identity* identity);
  private:
  const ::bgs::protocol::Identity& _internal_identity() const;
  ::bgs::protocol::Identity* _internal_mutable_identity();
  public:

  // optional double rating = 2;
  bool has_rating() const;
  private:
  bool _internal_has_rating() const;
  public:
  void clear_rating();
  double rating() const;
  void set_rating(double value);
  private:
  double _internal_rating() const;
  void _internal_set_rating(double value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.PlayerVariables)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute > attribute_;
  ::bgs::protocol::Identity* identity_;
  double rating_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ClientInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.game_utilities.v1.ClientInfo) */ {
 public:
  ClientInfo();
  virtual ~ClientInfo();

  ClientInfo(const ClientInfo& from);
  ClientInfo(ClientInfo&& from) noexcept
    : ClientInfo() {
    *this = ::std::move(from);
  }

  inline ClientInfo& operator=(const ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientInfo& operator=(ClientInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ClientInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientInfo* internal_default_instance() {
    return reinterpret_cast<const ClientInfo*>(
               &_ClientInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ClientInfo& a, ClientInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ClientInfo* New() const final {
    return CreateMaybeMessage<ClientInfo>(nullptr);
  }

  ClientInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ClientInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ClientInfo& from);
  void MergeFrom(const ClientInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.game_utilities.v1.ClientInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientAddressFieldNumber = 1,
    kPrivilegedNetworkFieldNumber = 2,
  };
  // optional string client_address = 1;
  bool has_client_address() const;
  private:
  bool _internal_has_client_address() const;
  public:
  void clear_client_address();
  const std::string& client_address() const;
  void set_client_address(const std::string& value);
  void set_client_address(std::string&& value);
  void set_client_address(const char* value);
  void set_client_address(const char* value, size_t size);
  std::string* mutable_client_address();
  std::string* release_client_address();
  void set_allocated_client_address(std::string* client_address);
  private:
  const std::string& _internal_client_address() const;
  void _internal_set_client_address(const std::string& value);
  std::string* _internal_mutable_client_address();
  public:

  // optional bool privileged_network = 2;
  bool has_privileged_network() const;
  private:
  bool _internal_has_privileged_network() const;
  public:
  void clear_privileged_network();
  bool privileged_network() const;
  void set_privileged_network(bool value);
  private:
  bool _internal_privileged_network() const;
  void _internal_set_privileged_network(bool value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.game_utilities.v1.ClientInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_address_;
  bool privileged_network_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerVariables

// required .bgs.protocol.Identity identity = 1;
inline bool PlayerVariables::_internal_has_identity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || identity_ != nullptr);
  return value;
}
inline bool PlayerVariables::has_identity() const {
  return _internal_has_identity();
}
inline const ::bgs::protocol::Identity& PlayerVariables::_internal_identity() const {
  const ::bgs::protocol::Identity* p = identity_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::Identity*>(
      &::bgs::protocol::_Identity_default_instance_);
}
inline const ::bgs::protocol::Identity& PlayerVariables::identity() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.PlayerVariables.identity)
  return _internal_identity();
}
inline ::bgs::protocol::Identity* PlayerVariables::release_identity() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.PlayerVariables.identity)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::Identity* temp = identity_;
  identity_ = nullptr;
  return temp;
}
inline ::bgs::protocol::Identity* PlayerVariables::_internal_mutable_identity() {
  _has_bits_[0] |= 0x00000001u;
  if (identity_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::Identity>(GetArenaNoVirtual());
    identity_ = p;
  }
  return identity_;
}
inline ::bgs::protocol::Identity* PlayerVariables::mutable_identity() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.PlayerVariables.identity)
  return _internal_mutable_identity();
}
inline void PlayerVariables::set_allocated_identity(::bgs::protocol::Identity* identity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(identity_);
  }
  if (identity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      identity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, identity, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  identity_ = identity;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.PlayerVariables.identity)
}

// optional double rating = 2;
inline bool PlayerVariables::_internal_has_rating() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PlayerVariables::has_rating() const {
  return _internal_has_rating();
}
inline void PlayerVariables::clear_rating() {
  rating_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double PlayerVariables::_internal_rating() const {
  return rating_;
}
inline double PlayerVariables::rating() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.PlayerVariables.rating)
  return _internal_rating();
}
inline void PlayerVariables::_internal_set_rating(double value) {
  _has_bits_[0] |= 0x00000002u;
  rating_ = value;
}
inline void PlayerVariables::set_rating(double value) {
  _internal_set_rating(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.PlayerVariables.rating)
}

// repeated .bgs.protocol.Attribute attribute = 3;
inline int PlayerVariables::_internal_attribute_size() const {
  return attribute_.size();
}
inline int PlayerVariables::attribute_size() const {
  return _internal_attribute_size();
}
inline ::bgs::protocol::Attribute* PlayerVariables::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.PlayerVariables.attribute)
  return attribute_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >*
PlayerVariables::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.game_utilities.v1.PlayerVariables.attribute)
  return &attribute_;
}
inline const ::bgs::protocol::Attribute& PlayerVariables::_internal_attribute(int index) const {
  return attribute_.Get(index);
}
inline const ::bgs::protocol::Attribute& PlayerVariables::attribute(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.PlayerVariables.attribute)
  return _internal_attribute(index);
}
inline ::bgs::protocol::Attribute* PlayerVariables::_internal_add_attribute() {
  return attribute_.Add();
}
inline ::bgs::protocol::Attribute* PlayerVariables::add_attribute() {
  // @@protoc_insertion_point(field_add:bgs.protocol.game_utilities.v1.PlayerVariables.attribute)
  return _internal_add_attribute();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::Attribute >&
PlayerVariables::attribute() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.game_utilities.v1.PlayerVariables.attribute)
  return attribute_;
}

// -------------------------------------------------------------------

// ClientInfo

// optional string client_address = 1;
inline bool ClientInfo::_internal_has_client_address() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ClientInfo::has_client_address() const {
  return _internal_has_client_address();
}
inline void ClientInfo::clear_client_address() {
  client_address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ClientInfo::client_address() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ClientInfo.client_address)
  return _internal_client_address();
}
inline void ClientInfo::set_client_address(const std::string& value) {
  _internal_set_client_address(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.ClientInfo.client_address)
}
inline std::string* ClientInfo::mutable_client_address() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.game_utilities.v1.ClientInfo.client_address)
  return _internal_mutable_client_address();
}
inline const std::string& ClientInfo::_internal_client_address() const {
  return client_address_.GetNoArena();
}
inline void ClientInfo::_internal_set_client_address(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  client_address_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ClientInfo::set_client_address(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  client_address_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bgs.protocol.game_utilities.v1.ClientInfo.client_address)
}
inline void ClientInfo::set_client_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  client_address_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bgs.protocol.game_utilities.v1.ClientInfo.client_address)
}
inline void ClientInfo::set_client_address(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  client_address_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.game_utilities.v1.ClientInfo.client_address)
}
inline std::string* ClientInfo::_internal_mutable_client_address() {
  _has_bits_[0] |= 0x00000001u;
  return client_address_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ClientInfo::release_client_address() {
  // @@protoc_insertion_point(field_release:bgs.protocol.game_utilities.v1.ClientInfo.client_address)
  if (!_internal_has_client_address()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return client_address_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ClientInfo::set_allocated_client_address(std::string* client_address) {
  if (client_address != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  client_address_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), client_address);
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.game_utilities.v1.ClientInfo.client_address)
}

// optional bool privileged_network = 2;
inline bool ClientInfo::_internal_has_privileged_network() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ClientInfo::has_privileged_network() const {
  return _internal_has_privileged_network();
}
inline void ClientInfo::clear_privileged_network() {
  privileged_network_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool ClientInfo::_internal_privileged_network() const {
  return privileged_network_;
}
inline bool ClientInfo::privileged_network() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.game_utilities.v1.ClientInfo.privileged_network)
  return _internal_privileged_network();
}
inline void ClientInfo::_internal_set_privileged_network(bool value) {
  _has_bits_[0] |= 0x00000002u;
  privileged_network_ = value;
}
inline void ClientInfo::set_privileged_network(bool value) {
  _internal_set_privileged_network(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.game_utilities.v1.ClientInfo.privileged_network)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace game_utilities
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fgame_5futilities_5ftypes_2eproto
