// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/global_extensions/field_options.proto

#include "bgs/low/pb/client/global_extensions/field_options.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BGSFieldOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityIdRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_FieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FloatFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FloatRange_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessageFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_RepeatedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignedIntRange_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StringFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UnsignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnsignedIntRange_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto;
namespace bgs {
namespace protocol {
class BGSFieldOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BGSFieldOptions> _instance;
} _BGSFieldOptions_default_instance_;
class FieldRestrictionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FieldRestriction> _instance;
  const ::bgs::protocol::SignedFieldRestriction* signed__;
  const ::bgs::protocol::UnsignedFieldRestriction* unsigned__;
  const ::bgs::protocol::FloatFieldRestriction* float__;
  const ::bgs::protocol::StringFieldRestriction* string_;
  const ::bgs::protocol::RepeatedFieldRestriction* repeated_;
  const ::bgs::protocol::MessageFieldRestriction* message_;
  const ::bgs::protocol::EntityIdRestriction* entity_id_;
} _FieldRestriction_default_instance_;
class RepeatedFieldRestrictionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RepeatedFieldRestriction> _instance;
  const ::bgs::protocol::SignedFieldRestriction* signed__;
  const ::bgs::protocol::UnsignedFieldRestriction* unsigned__;
  const ::bgs::protocol::FloatFieldRestriction* float__;
  const ::bgs::protocol::StringFieldRestriction* string_;
  const ::bgs::protocol::EntityIdRestriction* entity_id_;
} _RepeatedFieldRestriction_default_instance_;
class SignedFieldRestrictionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SignedFieldRestriction> _instance;
} _SignedFieldRestriction_default_instance_;
class UnsignedFieldRestrictionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnsignedFieldRestriction> _instance;
} _UnsignedFieldRestriction_default_instance_;
class FloatFieldRestrictionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FloatFieldRestriction> _instance;
} _FloatFieldRestriction_default_instance_;
class StringFieldRestrictionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StringFieldRestriction> _instance;
} _StringFieldRestriction_default_instance_;
class EntityIdRestrictionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityIdRestriction> _instance;
} _EntityIdRestriction_default_instance_;
class MessageFieldRestrictionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageFieldRestriction> _instance;
} _MessageFieldRestriction_default_instance_;
}  // namespace protocol
}  // namespace bgs
static void InitDefaultsscc_info_BGSFieldOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::_BGSFieldOptions_default_instance_;
    new (ptr) ::bgs::protocol::BGSFieldOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::BGSFieldOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BGSFieldOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BGSFieldOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto}, {}};

static void InitDefaultsscc_info_EntityIdRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::_EntityIdRestriction_default_instance_;
    new (ptr) ::bgs::protocol::EntityIdRestriction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::EntityIdRestriction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityIdRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EntityIdRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto}, {}};

static void InitDefaultsscc_info_FieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::_FieldRestriction_default_instance_;
    new (ptr) ::bgs::protocol::FieldRestriction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::FieldRestriction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_FieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 7, 0, InitDefaultsscc_info_FieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto}, {
      &scc_info_SignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
      &scc_info_UnsignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
      &scc_info_FloatFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
      &scc_info_StringFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
      &scc_info_RepeatedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
      &scc_info_MessageFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
      &scc_info_EntityIdRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,}};

static void InitDefaultsscc_info_FloatFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::_FloatFieldRestriction_default_instance_;
    new (ptr) ::bgs::protocol::FloatFieldRestriction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::FloatFieldRestriction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FloatFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FloatFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto}, {
      &scc_info_FloatRange_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto.base,}};

static void InitDefaultsscc_info_MessageFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::_MessageFieldRestriction_default_instance_;
    new (ptr) ::bgs::protocol::MessageFieldRestriction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::MessageFieldRestriction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessageFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MessageFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto}, {}};

static void InitDefaultsscc_info_RepeatedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::_RepeatedFieldRestriction_default_instance_;
    new (ptr) ::bgs::protocol::RepeatedFieldRestriction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::RepeatedFieldRestriction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_RepeatedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_RepeatedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto}, {
      &scc_info_UnsignedIntRange_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto.base,
      &scc_info_SignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
      &scc_info_UnsignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
      &scc_info_FloatFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
      &scc_info_StringFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
      &scc_info_EntityIdRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,}};

static void InitDefaultsscc_info_SignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::_SignedFieldRestriction_default_instance_;
    new (ptr) ::bgs::protocol::SignedFieldRestriction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::SignedFieldRestriction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto}, {
      &scc_info_SignedIntRange_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto.base,}};

static void InitDefaultsscc_info_StringFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::_StringFieldRestriction_default_instance_;
    new (ptr) ::bgs::protocol::StringFieldRestriction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::StringFieldRestriction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StringFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StringFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto}, {
      &scc_info_UnsignedIntRange_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto.base,}};

static void InitDefaultsscc_info_UnsignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::_UnsignedFieldRestriction_default_instance_;
    new (ptr) ::bgs::protocol::UnsignedFieldRestriction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::UnsignedFieldRestriction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UnsignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UnsignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto}, {
      &scc_info_UnsignedIntRange_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto[9];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::BGSFieldOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::BGSFieldOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::BGSFieldOptions, log_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::BGSFieldOptions, shard_key_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::BGSFieldOptions, fanout_key_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::FieldRestriction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::FieldRestriction, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::FieldRestriction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::bgs::protocol::FieldRestrictionDefaultTypeInternal, signed__),
  offsetof(::bgs::protocol::FieldRestrictionDefaultTypeInternal, unsigned__),
  offsetof(::bgs::protocol::FieldRestrictionDefaultTypeInternal, float__),
  offsetof(::bgs::protocol::FieldRestrictionDefaultTypeInternal, string_),
  offsetof(::bgs::protocol::FieldRestrictionDefaultTypeInternal, repeated_),
  offsetof(::bgs::protocol::FieldRestrictionDefaultTypeInternal, message_),
  offsetof(::bgs::protocol::FieldRestrictionDefaultTypeInternal, entity_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::FieldRestriction, type_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::RepeatedFieldRestriction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::RepeatedFieldRestriction, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::RepeatedFieldRestriction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::RepeatedFieldRestriction, size_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::RepeatedFieldRestriction, unique_),
  offsetof(::bgs::protocol::RepeatedFieldRestrictionDefaultTypeInternal, signed__),
  offsetof(::bgs::protocol::RepeatedFieldRestrictionDefaultTypeInternal, unsigned__),
  offsetof(::bgs::protocol::RepeatedFieldRestrictionDefaultTypeInternal, float__),
  offsetof(::bgs::protocol::RepeatedFieldRestrictionDefaultTypeInternal, string_),
  offsetof(::bgs::protocol::RepeatedFieldRestrictionDefaultTypeInternal, entity_id_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::RepeatedFieldRestriction, type_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::SignedFieldRestriction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::SignedFieldRestriction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::SignedFieldRestriction, limits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::SignedFieldRestriction, exclude_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::UnsignedFieldRestriction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::UnsignedFieldRestriction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::UnsignedFieldRestriction, limits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::UnsignedFieldRestriction, exclude_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::FloatFieldRestriction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::FloatFieldRestriction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::FloatFieldRestriction, limits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::FloatFieldRestriction, exclude_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::StringFieldRestriction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::StringFieldRestriction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::StringFieldRestriction, size_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::StringFieldRestriction, exclude_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::EntityIdRestriction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::EntityIdRestriction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::EntityIdRestriction, needed_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::EntityIdRestriction, kind_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::MessageFieldRestriction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::MessageFieldRestriction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::MessageFieldRestriction, needed_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::bgs::protocol::BGSFieldOptions)},
  { 11, 24, sizeof(::bgs::protocol::FieldRestriction)},
  { 31, 44, sizeof(::bgs::protocol::RepeatedFieldRestriction)},
  { 51, 58, sizeof(::bgs::protocol::SignedFieldRestriction)},
  { 60, 67, sizeof(::bgs::protocol::UnsignedFieldRestriction)},
  { 69, 76, sizeof(::bgs::protocol::FloatFieldRestriction)},
  { 78, 85, sizeof(::bgs::protocol::StringFieldRestriction)},
  { 87, 94, sizeof(::bgs::protocol::EntityIdRestriction)},
  { 96, 102, sizeof(::bgs::protocol::MessageFieldRestriction)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::_BGSFieldOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::_FieldRestriction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::_RepeatedFieldRestriction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::_SignedFieldRestriction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::_UnsignedFieldRestriction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::_FloatFieldRestriction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::_StringFieldRestriction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::_EntityIdRestriction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::_MessageFieldRestriction_default_instance_),
};

const char descriptor_table_protodef_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n7bgs/low/pb/client/global_extensions/fi"
  "eld_options.proto\022\014bgs.protocol\032 google/"
  "protobuf/descriptor.proto\032/bgs/low/pb/cl"
  "ient/global_extensions/range.proto\"f\n\017BG"
  "SFieldOptions\022,\n\003log\030\001 \001(\0162\027.bgs.protoco"
  "l.LogOption:\006HIDDEN\022\021\n\tshard_key\030\002 \001(\010\022\022"
  "\n\nfanout_key\030\003 \001(\010\"\252\003\n\020FieldRestriction\022"
  "6\n\006signed\030\001 \001(\0132$.bgs.protocol.SignedFie"
  "ldRestrictionH\000\022:\n\010unsigned\030\002 \001(\0132&.bgs."
  "protocol.UnsignedFieldRestrictionH\000\0224\n\005f"
  "loat\030\003 \001(\0132#.bgs.protocol.FloatFieldRest"
  "rictionH\000\0226\n\006string\030\004 \001(\0132$.bgs.protocol"
  ".StringFieldRestrictionH\000\022:\n\010repeated\030\005 "
  "\001(\0132&.bgs.protocol.RepeatedFieldRestrict"
  "ionH\000\0228\n\007message\030\006 \001(\0132%.bgs.protocol.Me"
  "ssageFieldRestrictionH\000\0226\n\tentity_id\030\007 \001"
  "(\0132!.bgs.protocol.EntityIdRestrictionH\000B"
  "\006\n\004type\"\372\002\n\030RepeatedFieldRestriction\022,\n\004"
  "size\030\001 \001(\0132\036.bgs.protocol.UnsignedIntRan"
  "ge\022\016\n\006unique\030\002 \001(\010\0226\n\006signed\030\003 \001(\0132$.bgs"
  ".protocol.SignedFieldRestrictionH\000\022:\n\010un"
  "signed\030\004 \001(\0132&.bgs.protocol.UnsignedFiel"
  "dRestrictionH\000\0224\n\005float\030\005 \001(\0132#.bgs.prot"
  "ocol.FloatFieldRestrictionH\000\0226\n\006string\030\006"
  " \001(\0132$.bgs.protocol.StringFieldRestricti"
  "onH\000\0226\n\tentity_id\030\007 \001(\0132!.bgs.protocol.E"
  "ntityIdRestrictionH\000B\006\n\004type\"W\n\026SignedFi"
  "eldRestriction\022,\n\006limits\030\001 \001(\0132\034.bgs.pro"
  "tocol.SignedIntRange\022\017\n\007exclude\030\002 \003(\022\"[\n"
  "\030UnsignedFieldRestriction\022.\n\006limits\030\001 \001("
  "\0132\036.bgs.protocol.UnsignedIntRange\022\017\n\007exc"
  "lude\030\002 \003(\004\"R\n\025FloatFieldRestriction\022(\n\006l"
  "imits\030\001 \001(\0132\030.bgs.protocol.FloatRange\022\017\n"
  "\007exclude\030\002 \003(\002\"W\n\026StringFieldRestriction"
  "\022,\n\004size\030\001 \001(\0132\036.bgs.protocol.UnsignedIn"
  "tRange\022\017\n\007exclude\030\002 \003(\t\"\307\001\n\023EntityIdRest"
  "riction\022\016\n\006needed\030\001 \001(\010\0229\n\004kind\030\002 \001(\0162&."
  "bgs.protocol.EntityIdRestriction.Kind:\003A"
  "NY\"e\n\004Kind\022\007\n\003ANY\020\000\022\013\n\007ACCOUNT\020\001\022\020\n\014GAME"
  "_ACCOUNT\020\002\022\033\n\027ACCOUNT_OR_GAME_ACCOUNT\020\003\022"
  "\013\n\007SERVICE\020\004\022\013\n\007CHANNEL\020\005\")\n\027MessageFiel"
  "dRestriction\022\016\n\006needed\030\001 \001(\010* \n\tLogOptio"
  "n\022\n\n\006HIDDEN\020\001\022\007\n\003HEX\020\002:U\n\rfield_options\022"
  "\035.google.protobuf.FieldOptions\030\220\277\005 \001(\0132\035"
  ".bgs.protocol.BGSFieldOptions:N\n\005valid\022\035"
  ".google.protobuf.FieldOptions\030\221\277\005 \001(\0132\036."
  "bgs.protocol.FieldRestrictionB\"\n\rbnet.pr"
  "otocolB\021FieldOptionsProto"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto_deps[2] = {
  &::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto,
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto_sccs[9] = {
  &scc_info_BGSFieldOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
  &scc_info_EntityIdRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
  &scc_info_FieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
  &scc_info_FloatFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
  &scc_info_MessageFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
  &scc_info_RepeatedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
  &scc_info_SignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
  &scc_info_StringFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
  &scc_info_UnsignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto_once;
static bool descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto = {
  &descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto_initialized, descriptor_table_protodef_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto, "bgs/low/pb/client/global_extensions/field_options.proto", 1905,
  &descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto_once, descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto_sccs, descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto_deps, 9, 2,
  schemas, file_default_instances, TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto::offsets,
  file_level_metadata_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto, 9, file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto, file_level_service_descriptors_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto)), true);
namespace bgs {
namespace protocol {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EntityIdRestriction_Kind_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
  return file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto[0];
}
bool EntityIdRestriction_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr EntityIdRestriction_Kind EntityIdRestriction::ANY;
constexpr EntityIdRestriction_Kind EntityIdRestriction::ACCOUNT;
constexpr EntityIdRestriction_Kind EntityIdRestriction::GAME_ACCOUNT;
constexpr EntityIdRestriction_Kind EntityIdRestriction::ACCOUNT_OR_GAME_ACCOUNT;
constexpr EntityIdRestriction_Kind EntityIdRestriction::SERVICE;
constexpr EntityIdRestriction_Kind EntityIdRestriction::CHANNEL;
constexpr EntityIdRestriction_Kind EntityIdRestriction::Kind_MIN;
constexpr EntityIdRestriction_Kind EntityIdRestriction::Kind_MAX;
constexpr int EntityIdRestriction::Kind_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LogOption_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
  return file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto[1];
}
bool LogOption_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void BGSFieldOptions::InitAsDefaultInstance() {
}
class BGSFieldOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<BGSFieldOptions>()._has_bits_);
  static void set_has_log(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_shard_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_fanout_key(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

BGSFieldOptions::BGSFieldOptions()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.BGSFieldOptions)
}
BGSFieldOptions::BGSFieldOptions(const BGSFieldOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shard_key_, &from.shard_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&log_) -
    reinterpret_cast<char*>(&shard_key_)) + sizeof(log_));
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.BGSFieldOptions)
}

void BGSFieldOptions::SharedCtor() {
  ::memset(&shard_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fanout_key_) -
      reinterpret_cast<char*>(&shard_key_)) + sizeof(fanout_key_));
  log_ = 1;
}

BGSFieldOptions::~BGSFieldOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.BGSFieldOptions)
  SharedDtor();
}

void BGSFieldOptions::SharedDtor() {
}

void BGSFieldOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BGSFieldOptions& BGSFieldOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BGSFieldOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  return *internal_default_instance();
}


void BGSFieldOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.BGSFieldOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&shard_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fanout_key_) -
      reinterpret_cast<char*>(&shard_key_)) + sizeof(fanout_key_));
  log_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* BGSFieldOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .bgs.protocol.LogOption log = 1 [default = HIDDEN];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::bgs::protocol::LogOption_IsValid(val))) {
            _internal_set_log(static_cast<::bgs::protocol::LogOption>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bool shard_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_shard_key(&has_bits);
          shard_key_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool fanout_key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_fanout_key(&has_bits);
          fanout_key_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BGSFieldOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.BGSFieldOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.LogOption log = 1 [default = HIDDEN];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_log(), target);
  }

  // optional bool shard_key = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_shard_key(), target);
  }

  // optional bool fanout_key = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_fanout_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.BGSFieldOptions)
  return target;
}

size_t BGSFieldOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.BGSFieldOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool shard_key = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool fanout_key = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional .bgs.protocol.LogOption log = 1 [default = HIDDEN];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_log());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BGSFieldOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.BGSFieldOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const BGSFieldOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BGSFieldOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.BGSFieldOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.BGSFieldOptions)
    MergeFrom(*source);
  }
}

void BGSFieldOptions::MergeFrom(const BGSFieldOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.BGSFieldOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      shard_key_ = from.shard_key_;
    }
    if (cached_has_bits & 0x00000002u) {
      fanout_key_ = from.fanout_key_;
    }
    if (cached_has_bits & 0x00000004u) {
      log_ = from.log_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BGSFieldOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.BGSFieldOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BGSFieldOptions::CopyFrom(const BGSFieldOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.BGSFieldOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BGSFieldOptions::IsInitialized() const {
  return true;
}

void BGSFieldOptions::InternalSwap(BGSFieldOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(shard_key_, other->shard_key_);
  swap(fanout_key_, other->fanout_key_);
  swap(log_, other->log_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BGSFieldOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FieldRestriction::InitAsDefaultInstance() {
  ::bgs::protocol::_FieldRestriction_default_instance_.signed__ = const_cast< ::bgs::protocol::SignedFieldRestriction*>(
      ::bgs::protocol::SignedFieldRestriction::internal_default_instance());
  ::bgs::protocol::_FieldRestriction_default_instance_.unsigned__ = const_cast< ::bgs::protocol::UnsignedFieldRestriction*>(
      ::bgs::protocol::UnsignedFieldRestriction::internal_default_instance());
  ::bgs::protocol::_FieldRestriction_default_instance_.float__ = const_cast< ::bgs::protocol::FloatFieldRestriction*>(
      ::bgs::protocol::FloatFieldRestriction::internal_default_instance());
  ::bgs::protocol::_FieldRestriction_default_instance_.string_ = const_cast< ::bgs::protocol::StringFieldRestriction*>(
      ::bgs::protocol::StringFieldRestriction::internal_default_instance());
  ::bgs::protocol::_FieldRestriction_default_instance_.repeated_ = const_cast< ::bgs::protocol::RepeatedFieldRestriction*>(
      ::bgs::protocol::RepeatedFieldRestriction::internal_default_instance());
  ::bgs::protocol::_FieldRestriction_default_instance_.message_ = const_cast< ::bgs::protocol::MessageFieldRestriction*>(
      ::bgs::protocol::MessageFieldRestriction::internal_default_instance());
  ::bgs::protocol::_FieldRestriction_default_instance_.entity_id_ = const_cast< ::bgs::protocol::EntityIdRestriction*>(
      ::bgs::protocol::EntityIdRestriction::internal_default_instance());
}
class FieldRestriction::_Internal {
 public:
  using HasBits = decltype(std::declval<FieldRestriction>()._has_bits_);
  static const ::bgs::protocol::SignedFieldRestriction& signed_(const FieldRestriction* msg);
  static const ::bgs::protocol::UnsignedFieldRestriction& unsigned_(const FieldRestriction* msg);
  static const ::bgs::protocol::FloatFieldRestriction& float_(const FieldRestriction* msg);
  static const ::bgs::protocol::StringFieldRestriction& string(const FieldRestriction* msg);
  static const ::bgs::protocol::RepeatedFieldRestriction& repeated(const FieldRestriction* msg);
  static const ::bgs::protocol::MessageFieldRestriction& message(const FieldRestriction* msg);
  static const ::bgs::protocol::EntityIdRestriction& entity_id(const FieldRestriction* msg);
};

const ::bgs::protocol::SignedFieldRestriction&
FieldRestriction::_Internal::signed_(const FieldRestriction* msg) {
  return *msg->type_.signed__;
}
const ::bgs::protocol::UnsignedFieldRestriction&
FieldRestriction::_Internal::unsigned_(const FieldRestriction* msg) {
  return *msg->type_.unsigned__;
}
const ::bgs::protocol::FloatFieldRestriction&
FieldRestriction::_Internal::float_(const FieldRestriction* msg) {
  return *msg->type_.float__;
}
const ::bgs::protocol::StringFieldRestriction&
FieldRestriction::_Internal::string(const FieldRestriction* msg) {
  return *msg->type_.string_;
}
const ::bgs::protocol::RepeatedFieldRestriction&
FieldRestriction::_Internal::repeated(const FieldRestriction* msg) {
  return *msg->type_.repeated_;
}
const ::bgs::protocol::MessageFieldRestriction&
FieldRestriction::_Internal::message(const FieldRestriction* msg) {
  return *msg->type_.message_;
}
const ::bgs::protocol::EntityIdRestriction&
FieldRestriction::_Internal::entity_id(const FieldRestriction* msg) {
  return *msg->type_.entity_id_;
}
void FieldRestriction::set_allocated_signed_(::bgs::protocol::SignedFieldRestriction* signed_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (signed_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      signed_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, signed_, submessage_arena);
    }
    set_has_signed_();
    type_.signed__ = signed_;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.FieldRestriction.signed)
}
void FieldRestriction::set_allocated_unsigned_(::bgs::protocol::UnsignedFieldRestriction* unsigned_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (unsigned_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      unsigned_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unsigned_, submessage_arena);
    }
    set_has_unsigned_();
    type_.unsigned__ = unsigned_;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.FieldRestriction.unsigned)
}
void FieldRestriction::set_allocated_float_(::bgs::protocol::FloatFieldRestriction* float_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (float_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      float_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, float_, submessage_arena);
    }
    set_has_float_();
    type_.float__ = float_;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.FieldRestriction.float)
}
void FieldRestriction::set_allocated_string(::bgs::protocol::StringFieldRestriction* string) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (string) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      string = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, string, submessage_arena);
    }
    set_has_string();
    type_.string_ = string;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.FieldRestriction.string)
}
void FieldRestriction::set_allocated_repeated(::bgs::protocol::RepeatedFieldRestriction* repeated) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (repeated) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      repeated = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, repeated, submessage_arena);
    }
    set_has_repeated();
    type_.repeated_ = repeated;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.FieldRestriction.repeated)
}
void FieldRestriction::set_allocated_message(::bgs::protocol::MessageFieldRestriction* message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    set_has_message();
    type_.message_ = message;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.FieldRestriction.message)
}
void FieldRestriction::set_allocated_entity_id(::bgs::protocol::EntityIdRestriction* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    set_has_entity_id();
    type_.entity_id_ = entity_id;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.FieldRestriction.entity_id)
}
FieldRestriction::FieldRestriction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.FieldRestriction)
}
FieldRestriction::FieldRestriction(const FieldRestriction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kSigned: {
      _internal_mutable_signed_()->::bgs::protocol::SignedFieldRestriction::MergeFrom(from._internal_signed_());
      break;
    }
    case kUnsigned: {
      _internal_mutable_unsigned_()->::bgs::protocol::UnsignedFieldRestriction::MergeFrom(from._internal_unsigned_());
      break;
    }
    case kFloat: {
      _internal_mutable_float_()->::bgs::protocol::FloatFieldRestriction::MergeFrom(from._internal_float_());
      break;
    }
    case kString: {
      _internal_mutable_string()->::bgs::protocol::StringFieldRestriction::MergeFrom(from._internal_string());
      break;
    }
    case kRepeated: {
      _internal_mutable_repeated()->::bgs::protocol::RepeatedFieldRestriction::MergeFrom(from._internal_repeated());
      break;
    }
    case kMessage: {
      _internal_mutable_message()->::bgs::protocol::MessageFieldRestriction::MergeFrom(from._internal_message());
      break;
    }
    case kEntityId: {
      _internal_mutable_entity_id()->::bgs::protocol::EntityIdRestriction::MergeFrom(from._internal_entity_id());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.FieldRestriction)
}

void FieldRestriction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  clear_has_type();
}

FieldRestriction::~FieldRestriction() {
  // @@protoc_insertion_point(destructor:bgs.protocol.FieldRestriction)
  SharedDtor();
}

void FieldRestriction::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void FieldRestriction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FieldRestriction& FieldRestriction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  return *internal_default_instance();
}


void FieldRestriction::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:bgs.protocol.FieldRestriction)
  switch (type_case()) {
    case kSigned: {
      delete type_.signed__;
      break;
    }
    case kUnsigned: {
      delete type_.unsigned__;
      break;
    }
    case kFloat: {
      delete type_.float__;
      break;
    }
    case kString: {
      delete type_.string_;
      break;
    }
    case kRepeated: {
      delete type_.repeated_;
      break;
    }
    case kMessage: {
      delete type_.message_;
      break;
    }
    case kEntityId: {
      delete type_.entity_id_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void FieldRestriction::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.FieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* FieldRestriction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .bgs.protocol.SignedFieldRestriction signed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_signed_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.UnsignedFieldRestriction unsigned = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_unsigned_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.FloatFieldRestriction float = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_float_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.StringFieldRestriction string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_string(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.RepeatedFieldRestriction repeated = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_repeated(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.MessageFieldRestriction message = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.EntityIdRestriction entity_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FieldRestriction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.FieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (type_case()) {
    case kSigned: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          1, _Internal::signed_(this), target, stream);
      break;
    }
    case kUnsigned: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          2, _Internal::unsigned_(this), target, stream);
      break;
    }
    case kFloat: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          3, _Internal::float_(this), target, stream);
      break;
    }
    case kString: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          4, _Internal::string(this), target, stream);
      break;
    }
    case kRepeated: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          5, _Internal::repeated(this), target, stream);
      break;
    }
    case kMessage: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          6, _Internal::message(this), target, stream);
      break;
    }
    case kEntityId: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          7, _Internal::entity_id(this), target, stream);
      break;
    }
    default: ;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.FieldRestriction)
  return target;
}

size_t FieldRestriction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.FieldRestriction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // optional .bgs.protocol.SignedFieldRestriction signed = 1;
    case kSigned: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.signed__);
      break;
    }
    // optional .bgs.protocol.UnsignedFieldRestriction unsigned = 2;
    case kUnsigned: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.unsigned__);
      break;
    }
    // optional .bgs.protocol.FloatFieldRestriction float = 3;
    case kFloat: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.float__);
      break;
    }
    // optional .bgs.protocol.StringFieldRestriction string = 4;
    case kString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.string_);
      break;
    }
    // optional .bgs.protocol.RepeatedFieldRestriction repeated = 5;
    case kRepeated: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.repeated_);
      break;
    }
    // optional .bgs.protocol.MessageFieldRestriction message = 6;
    case kMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.message_);
      break;
    }
    // optional .bgs.protocol.EntityIdRestriction entity_id = 7;
    case kEntityId: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.entity_id_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldRestriction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.FieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldRestriction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FieldRestriction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.FieldRestriction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.FieldRestriction)
    MergeFrom(*source);
  }
}

void FieldRestriction::MergeFrom(const FieldRestriction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.FieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kSigned: {
      _internal_mutable_signed_()->::bgs::protocol::SignedFieldRestriction::MergeFrom(from._internal_signed_());
      break;
    }
    case kUnsigned: {
      _internal_mutable_unsigned_()->::bgs::protocol::UnsignedFieldRestriction::MergeFrom(from._internal_unsigned_());
      break;
    }
    case kFloat: {
      _internal_mutable_float_()->::bgs::protocol::FloatFieldRestriction::MergeFrom(from._internal_float_());
      break;
    }
    case kString: {
      _internal_mutable_string()->::bgs::protocol::StringFieldRestriction::MergeFrom(from._internal_string());
      break;
    }
    case kRepeated: {
      _internal_mutable_repeated()->::bgs::protocol::RepeatedFieldRestriction::MergeFrom(from._internal_repeated());
      break;
    }
    case kMessage: {
      _internal_mutable_message()->::bgs::protocol::MessageFieldRestriction::MergeFrom(from._internal_message());
      break;
    }
    case kEntityId: {
      _internal_mutable_entity_id()->::bgs::protocol::EntityIdRestriction::MergeFrom(from._internal_entity_id());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void FieldRestriction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.FieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldRestriction::CopyFrom(const FieldRestriction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.FieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldRestriction::IsInitialized() const {
  return true;
}

void FieldRestriction::InternalSwap(FieldRestriction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata FieldRestriction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RepeatedFieldRestriction::InitAsDefaultInstance() {
  ::bgs::protocol::_RepeatedFieldRestriction_default_instance_._instance.get_mutable()->size_ = const_cast< ::bgs::protocol::UnsignedIntRange*>(
      ::bgs::protocol::UnsignedIntRange::internal_default_instance());
  ::bgs::protocol::_RepeatedFieldRestriction_default_instance_.signed__ = const_cast< ::bgs::protocol::SignedFieldRestriction*>(
      ::bgs::protocol::SignedFieldRestriction::internal_default_instance());
  ::bgs::protocol::_RepeatedFieldRestriction_default_instance_.unsigned__ = const_cast< ::bgs::protocol::UnsignedFieldRestriction*>(
      ::bgs::protocol::UnsignedFieldRestriction::internal_default_instance());
  ::bgs::protocol::_RepeatedFieldRestriction_default_instance_.float__ = const_cast< ::bgs::protocol::FloatFieldRestriction*>(
      ::bgs::protocol::FloatFieldRestriction::internal_default_instance());
  ::bgs::protocol::_RepeatedFieldRestriction_default_instance_.string_ = const_cast< ::bgs::protocol::StringFieldRestriction*>(
      ::bgs::protocol::StringFieldRestriction::internal_default_instance());
  ::bgs::protocol::_RepeatedFieldRestriction_default_instance_.entity_id_ = const_cast< ::bgs::protocol::EntityIdRestriction*>(
      ::bgs::protocol::EntityIdRestriction::internal_default_instance());
}
class RepeatedFieldRestriction::_Internal {
 public:
  using HasBits = decltype(std::declval<RepeatedFieldRestriction>()._has_bits_);
  static const ::bgs::protocol::UnsignedIntRange& size(const RepeatedFieldRestriction* msg);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unique(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::bgs::protocol::SignedFieldRestriction& signed_(const RepeatedFieldRestriction* msg);
  static const ::bgs::protocol::UnsignedFieldRestriction& unsigned_(const RepeatedFieldRestriction* msg);
  static const ::bgs::protocol::FloatFieldRestriction& float_(const RepeatedFieldRestriction* msg);
  static const ::bgs::protocol::StringFieldRestriction& string(const RepeatedFieldRestriction* msg);
  static const ::bgs::protocol::EntityIdRestriction& entity_id(const RepeatedFieldRestriction* msg);
};

const ::bgs::protocol::UnsignedIntRange&
RepeatedFieldRestriction::_Internal::size(const RepeatedFieldRestriction* msg) {
  return *msg->size_;
}
const ::bgs::protocol::SignedFieldRestriction&
RepeatedFieldRestriction::_Internal::signed_(const RepeatedFieldRestriction* msg) {
  return *msg->type_.signed__;
}
const ::bgs::protocol::UnsignedFieldRestriction&
RepeatedFieldRestriction::_Internal::unsigned_(const RepeatedFieldRestriction* msg) {
  return *msg->type_.unsigned__;
}
const ::bgs::protocol::FloatFieldRestriction&
RepeatedFieldRestriction::_Internal::float_(const RepeatedFieldRestriction* msg) {
  return *msg->type_.float__;
}
const ::bgs::protocol::StringFieldRestriction&
RepeatedFieldRestriction::_Internal::string(const RepeatedFieldRestriction* msg) {
  return *msg->type_.string_;
}
const ::bgs::protocol::EntityIdRestriction&
RepeatedFieldRestriction::_Internal::entity_id(const RepeatedFieldRestriction* msg) {
  return *msg->type_.entity_id_;
}
void RepeatedFieldRestriction::clear_size() {
  if (size_ != nullptr) size_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void RepeatedFieldRestriction::set_allocated_signed_(::bgs::protocol::SignedFieldRestriction* signed_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (signed_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      signed_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, signed_, submessage_arena);
    }
    set_has_signed_();
    type_.signed__ = signed_;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.RepeatedFieldRestriction.signed)
}
void RepeatedFieldRestriction::set_allocated_unsigned_(::bgs::protocol::UnsignedFieldRestriction* unsigned_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (unsigned_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      unsigned_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unsigned_, submessage_arena);
    }
    set_has_unsigned_();
    type_.unsigned__ = unsigned_;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.RepeatedFieldRestriction.unsigned)
}
void RepeatedFieldRestriction::set_allocated_float_(::bgs::protocol::FloatFieldRestriction* float_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (float_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      float_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, float_, submessage_arena);
    }
    set_has_float_();
    type_.float__ = float_;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.RepeatedFieldRestriction.float)
}
void RepeatedFieldRestriction::set_allocated_string(::bgs::protocol::StringFieldRestriction* string) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (string) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      string = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, string, submessage_arena);
    }
    set_has_string();
    type_.string_ = string;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.RepeatedFieldRestriction.string)
}
void RepeatedFieldRestriction::set_allocated_entity_id(::bgs::protocol::EntityIdRestriction* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    set_has_entity_id();
    type_.entity_id_ = entity_id;
  }
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.RepeatedFieldRestriction.entity_id)
}
RepeatedFieldRestriction::RepeatedFieldRestriction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.RepeatedFieldRestriction)
}
RepeatedFieldRestriction::RepeatedFieldRestriction(const RepeatedFieldRestriction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_size()) {
    size_ = new ::bgs::protocol::UnsignedIntRange(*from.size_);
  } else {
    size_ = nullptr;
  }
  unique_ = from.unique_;
  clear_has_type();
  switch (from.type_case()) {
    case kSigned: {
      _internal_mutable_signed_()->::bgs::protocol::SignedFieldRestriction::MergeFrom(from._internal_signed_());
      break;
    }
    case kUnsigned: {
      _internal_mutable_unsigned_()->::bgs::protocol::UnsignedFieldRestriction::MergeFrom(from._internal_unsigned_());
      break;
    }
    case kFloat: {
      _internal_mutable_float_()->::bgs::protocol::FloatFieldRestriction::MergeFrom(from._internal_float_());
      break;
    }
    case kString: {
      _internal_mutable_string()->::bgs::protocol::StringFieldRestriction::MergeFrom(from._internal_string());
      break;
    }
    case kEntityId: {
      _internal_mutable_entity_id()->::bgs::protocol::EntityIdRestriction::MergeFrom(from._internal_entity_id());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.RepeatedFieldRestriction)
}

void RepeatedFieldRestriction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RepeatedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unique_) -
      reinterpret_cast<char*>(&size_)) + sizeof(unique_));
  clear_has_type();
}

RepeatedFieldRestriction::~RepeatedFieldRestriction() {
  // @@protoc_insertion_point(destructor:bgs.protocol.RepeatedFieldRestriction)
  SharedDtor();
}

void RepeatedFieldRestriction::SharedDtor() {
  if (this != internal_default_instance()) delete size_;
  if (has_type()) {
    clear_type();
  }
}

void RepeatedFieldRestriction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepeatedFieldRestriction& RepeatedFieldRestriction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RepeatedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  return *internal_default_instance();
}


void RepeatedFieldRestriction::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:bgs.protocol.RepeatedFieldRestriction)
  switch (type_case()) {
    case kSigned: {
      delete type_.signed__;
      break;
    }
    case kUnsigned: {
      delete type_.unsigned__;
      break;
    }
    case kFloat: {
      delete type_.float__;
      break;
    }
    case kString: {
      delete type_.string_;
      break;
    }
    case kEntityId: {
      delete type_.entity_id_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void RepeatedFieldRestriction::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.RepeatedFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(size_ != nullptr);
    size_->Clear();
  }
  unique_ = false;
  clear_type();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* RepeatedFieldRestriction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .bgs.protocol.UnsignedIntRange size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_size(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool unique = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_unique(&has_bits);
          unique_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.SignedFieldRestriction signed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_signed_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.UnsignedFieldRestriction unsigned = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_unsigned_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.FloatFieldRestriction float = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_float_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.StringFieldRestriction string = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_string(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.EntityIdRestriction entity_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RepeatedFieldRestriction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.RepeatedFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.UnsignedIntRange size = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::size(this), target, stream);
  }

  // optional bool unique = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_unique(), target);
  }

  switch (type_case()) {
    case kSigned: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          3, _Internal::signed_(this), target, stream);
      break;
    }
    case kUnsigned: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          4, _Internal::unsigned_(this), target, stream);
      break;
    }
    case kFloat: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          5, _Internal::float_(this), target, stream);
      break;
    }
    case kString: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          6, _Internal::string(this), target, stream);
      break;
    }
    case kEntityId: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          7, _Internal::entity_id(this), target, stream);
      break;
    }
    default: ;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.RepeatedFieldRestriction)
  return target;
}

size_t RepeatedFieldRestriction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.RepeatedFieldRestriction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .bgs.protocol.UnsignedIntRange size = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *size_);
    }

    // optional bool unique = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  switch (type_case()) {
    // optional .bgs.protocol.SignedFieldRestriction signed = 3;
    case kSigned: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.signed__);
      break;
    }
    // optional .bgs.protocol.UnsignedFieldRestriction unsigned = 4;
    case kUnsigned: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.unsigned__);
      break;
    }
    // optional .bgs.protocol.FloatFieldRestriction float = 5;
    case kFloat: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.float__);
      break;
    }
    // optional .bgs.protocol.StringFieldRestriction string = 6;
    case kString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.string_);
      break;
    }
    // optional .bgs.protocol.EntityIdRestriction entity_id = 7;
    case kEntityId: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.entity_id_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepeatedFieldRestriction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.RepeatedFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  const RepeatedFieldRestriction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RepeatedFieldRestriction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.RepeatedFieldRestriction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.RepeatedFieldRestriction)
    MergeFrom(*source);
  }
}

void RepeatedFieldRestriction::MergeFrom(const RepeatedFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.RepeatedFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_size()->::bgs::protocol::UnsignedIntRange::MergeFrom(from._internal_size());
    }
    if (cached_has_bits & 0x00000002u) {
      unique_ = from.unique_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.type_case()) {
    case kSigned: {
      _internal_mutable_signed_()->::bgs::protocol::SignedFieldRestriction::MergeFrom(from._internal_signed_());
      break;
    }
    case kUnsigned: {
      _internal_mutable_unsigned_()->::bgs::protocol::UnsignedFieldRestriction::MergeFrom(from._internal_unsigned_());
      break;
    }
    case kFloat: {
      _internal_mutable_float_()->::bgs::protocol::FloatFieldRestriction::MergeFrom(from._internal_float_());
      break;
    }
    case kString: {
      _internal_mutable_string()->::bgs::protocol::StringFieldRestriction::MergeFrom(from._internal_string());
      break;
    }
    case kEntityId: {
      _internal_mutable_entity_id()->::bgs::protocol::EntityIdRestriction::MergeFrom(from._internal_entity_id());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void RepeatedFieldRestriction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.RepeatedFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatedFieldRestriction::CopyFrom(const RepeatedFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.RepeatedFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatedFieldRestriction::IsInitialized() const {
  return true;
}

void RepeatedFieldRestriction::InternalSwap(RepeatedFieldRestriction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(size_, other->size_);
  swap(unique_, other->unique_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepeatedFieldRestriction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SignedFieldRestriction::InitAsDefaultInstance() {
  ::bgs::protocol::_SignedFieldRestriction_default_instance_._instance.get_mutable()->limits_ = const_cast< ::bgs::protocol::SignedIntRange*>(
      ::bgs::protocol::SignedIntRange::internal_default_instance());
}
class SignedFieldRestriction::_Internal {
 public:
  using HasBits = decltype(std::declval<SignedFieldRestriction>()._has_bits_);
  static const ::bgs::protocol::SignedIntRange& limits(const SignedFieldRestriction* msg);
  static void set_has_limits(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::SignedIntRange&
SignedFieldRestriction::_Internal::limits(const SignedFieldRestriction* msg) {
  return *msg->limits_;
}
void SignedFieldRestriction::clear_limits() {
  if (limits_ != nullptr) limits_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
SignedFieldRestriction::SignedFieldRestriction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.SignedFieldRestriction)
}
SignedFieldRestriction::SignedFieldRestriction(const SignedFieldRestriction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      exclude_(from.exclude_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_limits()) {
    limits_ = new ::bgs::protocol::SignedIntRange(*from.limits_);
  } else {
    limits_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.SignedFieldRestriction)
}

void SignedFieldRestriction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  limits_ = nullptr;
}

SignedFieldRestriction::~SignedFieldRestriction() {
  // @@protoc_insertion_point(destructor:bgs.protocol.SignedFieldRestriction)
  SharedDtor();
}

void SignedFieldRestriction::SharedDtor() {
  if (this != internal_default_instance()) delete limits_;
}

void SignedFieldRestriction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignedFieldRestriction& SignedFieldRestriction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  return *internal_default_instance();
}


void SignedFieldRestriction::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.SignedFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exclude_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(limits_ != nullptr);
    limits_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* SignedFieldRestriction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .bgs.protocol.SignedIntRange limits = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_limits(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated sint64 exclude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_exclude(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt64Parser(_internal_mutable_exclude(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SignedFieldRestriction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.SignedFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.SignedIntRange limits = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::limits(this), target, stream);
  }

  // repeated sint64 exclude = 2;
  for (int i = 0, n = this->_internal_exclude_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt64ToArray(2, this->_internal_exclude(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.SignedFieldRestriction)
  return target;
}

size_t SignedFieldRestriction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.SignedFieldRestriction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated sint64 exclude = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt64Size(this->exclude_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_exclude_size());
    total_size += data_size;
  }

  // optional .bgs.protocol.SignedIntRange limits = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *limits_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignedFieldRestriction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.SignedFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  const SignedFieldRestriction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SignedFieldRestriction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.SignedFieldRestriction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.SignedFieldRestriction)
    MergeFrom(*source);
  }
}

void SignedFieldRestriction::MergeFrom(const SignedFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.SignedFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exclude_.MergeFrom(from.exclude_);
  if (from._internal_has_limits()) {
    _internal_mutable_limits()->::bgs::protocol::SignedIntRange::MergeFrom(from._internal_limits());
  }
}

void SignedFieldRestriction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.SignedFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignedFieldRestriction::CopyFrom(const SignedFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.SignedFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignedFieldRestriction::IsInitialized() const {
  return true;
}

void SignedFieldRestriction::InternalSwap(SignedFieldRestriction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  exclude_.InternalSwap(&other->exclude_);
  swap(limits_, other->limits_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SignedFieldRestriction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnsignedFieldRestriction::InitAsDefaultInstance() {
  ::bgs::protocol::_UnsignedFieldRestriction_default_instance_._instance.get_mutable()->limits_ = const_cast< ::bgs::protocol::UnsignedIntRange*>(
      ::bgs::protocol::UnsignedIntRange::internal_default_instance());
}
class UnsignedFieldRestriction::_Internal {
 public:
  using HasBits = decltype(std::declval<UnsignedFieldRestriction>()._has_bits_);
  static const ::bgs::protocol::UnsignedIntRange& limits(const UnsignedFieldRestriction* msg);
  static void set_has_limits(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::UnsignedIntRange&
UnsignedFieldRestriction::_Internal::limits(const UnsignedFieldRestriction* msg) {
  return *msg->limits_;
}
void UnsignedFieldRestriction::clear_limits() {
  if (limits_ != nullptr) limits_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
UnsignedFieldRestriction::UnsignedFieldRestriction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.UnsignedFieldRestriction)
}
UnsignedFieldRestriction::UnsignedFieldRestriction(const UnsignedFieldRestriction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      exclude_(from.exclude_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_limits()) {
    limits_ = new ::bgs::protocol::UnsignedIntRange(*from.limits_);
  } else {
    limits_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.UnsignedFieldRestriction)
}

void UnsignedFieldRestriction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnsignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  limits_ = nullptr;
}

UnsignedFieldRestriction::~UnsignedFieldRestriction() {
  // @@protoc_insertion_point(destructor:bgs.protocol.UnsignedFieldRestriction)
  SharedDtor();
}

void UnsignedFieldRestriction::SharedDtor() {
  if (this != internal_default_instance()) delete limits_;
}

void UnsignedFieldRestriction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnsignedFieldRestriction& UnsignedFieldRestriction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnsignedFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  return *internal_default_instance();
}


void UnsignedFieldRestriction::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.UnsignedFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exclude_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(limits_ != nullptr);
    limits_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UnsignedFieldRestriction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .bgs.protocol.UnsignedIntRange limits = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_limits(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 exclude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_exclude(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_exclude(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnsignedFieldRestriction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.UnsignedFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.UnsignedIntRange limits = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::limits(this), target, stream);
  }

  // repeated uint64 exclude = 2;
  for (int i = 0, n = this->_internal_exclude_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_exclude(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.UnsignedFieldRestriction)
  return target;
}

size_t UnsignedFieldRestriction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.UnsignedFieldRestriction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 exclude = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->exclude_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_exclude_size());
    total_size += data_size;
  }

  // optional .bgs.protocol.UnsignedIntRange limits = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *limits_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnsignedFieldRestriction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.UnsignedFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsignedFieldRestriction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnsignedFieldRestriction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.UnsignedFieldRestriction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.UnsignedFieldRestriction)
    MergeFrom(*source);
  }
}

void UnsignedFieldRestriction::MergeFrom(const UnsignedFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.UnsignedFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exclude_.MergeFrom(from.exclude_);
  if (from._internal_has_limits()) {
    _internal_mutable_limits()->::bgs::protocol::UnsignedIntRange::MergeFrom(from._internal_limits());
  }
}

void UnsignedFieldRestriction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.UnsignedFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsignedFieldRestriction::CopyFrom(const UnsignedFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.UnsignedFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsignedFieldRestriction::IsInitialized() const {
  return true;
}

void UnsignedFieldRestriction::InternalSwap(UnsignedFieldRestriction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  exclude_.InternalSwap(&other->exclude_);
  swap(limits_, other->limits_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnsignedFieldRestriction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FloatFieldRestriction::InitAsDefaultInstance() {
  ::bgs::protocol::_FloatFieldRestriction_default_instance_._instance.get_mutable()->limits_ = const_cast< ::bgs::protocol::FloatRange*>(
      ::bgs::protocol::FloatRange::internal_default_instance());
}
class FloatFieldRestriction::_Internal {
 public:
  using HasBits = decltype(std::declval<FloatFieldRestriction>()._has_bits_);
  static const ::bgs::protocol::FloatRange& limits(const FloatFieldRestriction* msg);
  static void set_has_limits(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::FloatRange&
FloatFieldRestriction::_Internal::limits(const FloatFieldRestriction* msg) {
  return *msg->limits_;
}
void FloatFieldRestriction::clear_limits() {
  if (limits_ != nullptr) limits_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
FloatFieldRestriction::FloatFieldRestriction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.FloatFieldRestriction)
}
FloatFieldRestriction::FloatFieldRestriction(const FloatFieldRestriction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      exclude_(from.exclude_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_limits()) {
    limits_ = new ::bgs::protocol::FloatRange(*from.limits_);
  } else {
    limits_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.FloatFieldRestriction)
}

void FloatFieldRestriction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FloatFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  limits_ = nullptr;
}

FloatFieldRestriction::~FloatFieldRestriction() {
  // @@protoc_insertion_point(destructor:bgs.protocol.FloatFieldRestriction)
  SharedDtor();
}

void FloatFieldRestriction::SharedDtor() {
  if (this != internal_default_instance()) delete limits_;
}

void FloatFieldRestriction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FloatFieldRestriction& FloatFieldRestriction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FloatFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  return *internal_default_instance();
}


void FloatFieldRestriction::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.FloatFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exclude_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(limits_ != nullptr);
    limits_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* FloatFieldRestriction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .bgs.protocol.FloatRange limits = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_limits(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated float exclude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_exclude(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
            ptr += sizeof(float);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<21>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_exclude(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FloatFieldRestriction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.FloatFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.FloatRange limits = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::limits(this), target, stream);
  }

  // repeated float exclude = 2;
  for (int i = 0, n = this->_internal_exclude_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_exclude(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.FloatFieldRestriction)
  return target;
}

size_t FloatFieldRestriction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.FloatFieldRestriction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float exclude = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_exclude_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_exclude_size());
    total_size += data_size;
  }

  // optional .bgs.protocol.FloatRange limits = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *limits_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatFieldRestriction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.FloatFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatFieldRestriction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FloatFieldRestriction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.FloatFieldRestriction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.FloatFieldRestriction)
    MergeFrom(*source);
  }
}

void FloatFieldRestriction::MergeFrom(const FloatFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.FloatFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exclude_.MergeFrom(from.exclude_);
  if (from._internal_has_limits()) {
    _internal_mutable_limits()->::bgs::protocol::FloatRange::MergeFrom(from._internal_limits());
  }
}

void FloatFieldRestriction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.FloatFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatFieldRestriction::CopyFrom(const FloatFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.FloatFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatFieldRestriction::IsInitialized() const {
  return true;
}

void FloatFieldRestriction::InternalSwap(FloatFieldRestriction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  exclude_.InternalSwap(&other->exclude_);
  swap(limits_, other->limits_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FloatFieldRestriction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StringFieldRestriction::InitAsDefaultInstance() {
  ::bgs::protocol::_StringFieldRestriction_default_instance_._instance.get_mutable()->size_ = const_cast< ::bgs::protocol::UnsignedIntRange*>(
      ::bgs::protocol::UnsignedIntRange::internal_default_instance());
}
class StringFieldRestriction::_Internal {
 public:
  using HasBits = decltype(std::declval<StringFieldRestriction>()._has_bits_);
  static const ::bgs::protocol::UnsignedIntRange& size(const StringFieldRestriction* msg);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::bgs::protocol::UnsignedIntRange&
StringFieldRestriction::_Internal::size(const StringFieldRestriction* msg) {
  return *msg->size_;
}
void StringFieldRestriction::clear_size() {
  if (size_ != nullptr) size_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
StringFieldRestriction::StringFieldRestriction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.StringFieldRestriction)
}
StringFieldRestriction::StringFieldRestriction(const StringFieldRestriction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      exclude_(from.exclude_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_size()) {
    size_ = new ::bgs::protocol::UnsignedIntRange(*from.size_);
  } else {
    size_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.StringFieldRestriction)
}

void StringFieldRestriction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StringFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  size_ = nullptr;
}

StringFieldRestriction::~StringFieldRestriction() {
  // @@protoc_insertion_point(destructor:bgs.protocol.StringFieldRestriction)
  SharedDtor();
}

void StringFieldRestriction::SharedDtor() {
  if (this != internal_default_instance()) delete size_;
}

void StringFieldRestriction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StringFieldRestriction& StringFieldRestriction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StringFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  return *internal_default_instance();
}


void StringFieldRestriction::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.StringFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exclude_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(size_ != nullptr);
    size_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* StringFieldRestriction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .bgs.protocol.UnsignedIntRange size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_size(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string exclude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_exclude();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bgs.protocol.StringFieldRestriction.exclude");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StringFieldRestriction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.StringFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .bgs.protocol.UnsignedIntRange size = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::size(this), target, stream);
  }

  // repeated string exclude = 2;
  for (int i = 0, n = this->_internal_exclude_size(); i < n; i++) {
    const auto& s = this->_internal_exclude(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "bgs.protocol.StringFieldRestriction.exclude");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.StringFieldRestriction)
  return target;
}

size_t StringFieldRestriction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.StringFieldRestriction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string exclude = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(exclude_.size());
  for (int i = 0, n = exclude_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      exclude_.Get(i));
  }

  // optional .bgs.protocol.UnsignedIntRange size = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *size_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringFieldRestriction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.StringFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  const StringFieldRestriction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StringFieldRestriction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.StringFieldRestriction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.StringFieldRestriction)
    MergeFrom(*source);
  }
}

void StringFieldRestriction::MergeFrom(const StringFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.StringFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exclude_.MergeFrom(from.exclude_);
  if (from._internal_has_size()) {
    _internal_mutable_size()->::bgs::protocol::UnsignedIntRange::MergeFrom(from._internal_size());
  }
}

void StringFieldRestriction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.StringFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringFieldRestriction::CopyFrom(const StringFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.StringFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringFieldRestriction::IsInitialized() const {
  return true;
}

void StringFieldRestriction::InternalSwap(StringFieldRestriction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  exclude_.InternalSwap(&other->exclude_);
  swap(size_, other->size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StringFieldRestriction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EntityIdRestriction::InitAsDefaultInstance() {
}
class EntityIdRestriction::_Internal {
 public:
  using HasBits = decltype(std::declval<EntityIdRestriction>()._has_bits_);
  static void set_has_needed(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_kind(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

EntityIdRestriction::EntityIdRestriction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.EntityIdRestriction)
}
EntityIdRestriction::EntityIdRestriction(const EntityIdRestriction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&needed_, &from.needed_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&needed_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.EntityIdRestriction)
}

void EntityIdRestriction::SharedCtor() {
  ::memset(&needed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&needed_)) + sizeof(kind_));
}

EntityIdRestriction::~EntityIdRestriction() {
  // @@protoc_insertion_point(destructor:bgs.protocol.EntityIdRestriction)
  SharedDtor();
}

void EntityIdRestriction::SharedDtor() {
}

void EntityIdRestriction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityIdRestriction& EntityIdRestriction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityIdRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  return *internal_default_instance();
}


void EntityIdRestriction::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.EntityIdRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&needed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&kind_) -
        reinterpret_cast<char*>(&needed_)) + sizeof(kind_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* EntityIdRestriction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool needed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_needed(&has_bits);
          needed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .bgs.protocol.EntityIdRestriction.Kind kind = 2 [default = ANY];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::bgs::protocol::EntityIdRestriction_Kind_IsValid(val))) {
            _internal_set_kind(static_cast<::bgs::protocol::EntityIdRestriction_Kind>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityIdRestriction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.EntityIdRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool needed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_needed(), target);
  }

  // optional .bgs.protocol.EntityIdRestriction.Kind kind = 2 [default = ANY];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_kind(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.EntityIdRestriction)
  return target;
}

size_t EntityIdRestriction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.EntityIdRestriction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool needed = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional .bgs.protocol.EntityIdRestriction.Kind kind = 2 [default = ANY];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_kind());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityIdRestriction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.EntityIdRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityIdRestriction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityIdRestriction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.EntityIdRestriction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.EntityIdRestriction)
    MergeFrom(*source);
  }
}

void EntityIdRestriction::MergeFrom(const EntityIdRestriction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.EntityIdRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      needed_ = from.needed_;
    }
    if (cached_has_bits & 0x00000002u) {
      kind_ = from.kind_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EntityIdRestriction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.EntityIdRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityIdRestriction::CopyFrom(const EntityIdRestriction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.EntityIdRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityIdRestriction::IsInitialized() const {
  return true;
}

void EntityIdRestriction::InternalSwap(EntityIdRestriction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(needed_, other->needed_);
  swap(kind_, other->kind_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityIdRestriction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageFieldRestriction::InitAsDefaultInstance() {
}
class MessageFieldRestriction::_Internal {
 public:
  using HasBits = decltype(std::declval<MessageFieldRestriction>()._has_bits_);
  static void set_has_needed(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MessageFieldRestriction::MessageFieldRestriction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.MessageFieldRestriction)
}
MessageFieldRestriction::MessageFieldRestriction(const MessageFieldRestriction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  needed_ = from.needed_;
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.MessageFieldRestriction)
}

void MessageFieldRestriction::SharedCtor() {
  needed_ = false;
}

MessageFieldRestriction::~MessageFieldRestriction() {
  // @@protoc_insertion_point(destructor:bgs.protocol.MessageFieldRestriction)
  SharedDtor();
}

void MessageFieldRestriction::SharedDtor() {
}

void MessageFieldRestriction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageFieldRestriction& MessageFieldRestriction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageFieldRestriction_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.base);
  return *internal_default_instance();
}


void MessageFieldRestriction::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.MessageFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  needed_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MessageFieldRestriction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool needed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_needed(&has_bits);
          needed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageFieldRestriction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.MessageFieldRestriction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool needed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_needed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.MessageFieldRestriction)
  return target;
}

size_t MessageFieldRestriction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.MessageFieldRestriction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool needed = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageFieldRestriction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.MessageFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageFieldRestriction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageFieldRestriction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.MessageFieldRestriction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.MessageFieldRestriction)
    MergeFrom(*source);
  }
}

void MessageFieldRestriction::MergeFrom(const MessageFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.MessageFieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_needed()) {
    _internal_set_needed(from._internal_needed());
  }
}

void MessageFieldRestriction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.MessageFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageFieldRestriction::CopyFrom(const MessageFieldRestriction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.MessageFieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageFieldRestriction::IsInitialized() const {
  return true;
}

void MessageFieldRestriction::InternalSwap(MessageFieldRestriction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(needed_, other->needed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageFieldRestriction::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::bgs::protocol::BGSFieldOptions >, 11, false >
  field_options(kFieldOptionsFieldNumber, *::bgs::protocol::BGSFieldOptions::internal_default_instance());
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::bgs::protocol::FieldRestriction >, 11, false >
  valid(kValidFieldNumber, *::bgs::protocol::FieldRestriction::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bgs::protocol::BGSFieldOptions* Arena::CreateMaybeMessage< ::bgs::protocol::BGSFieldOptions >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::BGSFieldOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::FieldRestriction* Arena::CreateMaybeMessage< ::bgs::protocol::FieldRestriction >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::FieldRestriction >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::RepeatedFieldRestriction* Arena::CreateMaybeMessage< ::bgs::protocol::RepeatedFieldRestriction >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::RepeatedFieldRestriction >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::SignedFieldRestriction* Arena::CreateMaybeMessage< ::bgs::protocol::SignedFieldRestriction >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::SignedFieldRestriction >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::UnsignedFieldRestriction* Arena::CreateMaybeMessage< ::bgs::protocol::UnsignedFieldRestriction >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::UnsignedFieldRestriction >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::FloatFieldRestriction* Arena::CreateMaybeMessage< ::bgs::protocol::FloatFieldRestriction >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::FloatFieldRestriction >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::StringFieldRestriction* Arena::CreateMaybeMessage< ::bgs::protocol::StringFieldRestriction >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::StringFieldRestriction >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::EntityIdRestriction* Arena::CreateMaybeMessage< ::bgs::protocol::EntityIdRestriction >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::EntityIdRestriction >(arena);
}
template<> PROTOBUF_NOINLINE ::bgs::protocol::MessageFieldRestriction* Arena::CreateMaybeMessage< ::bgs::protocol::MessageFieldRestriction >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::MessageFieldRestriction >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
