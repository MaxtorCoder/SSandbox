// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/global_extensions/field_options.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
#include "bgs/low/pb/client/global_extensions/range.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
namespace bgs {
namespace protocol {
class BGSFieldOptions;
class BGSFieldOptionsDefaultTypeInternal;
extern BGSFieldOptionsDefaultTypeInternal _BGSFieldOptions_default_instance_;
class EntityIdRestriction;
class EntityIdRestrictionDefaultTypeInternal;
extern EntityIdRestrictionDefaultTypeInternal _EntityIdRestriction_default_instance_;
class FieldRestriction;
class FieldRestrictionDefaultTypeInternal;
extern FieldRestrictionDefaultTypeInternal _FieldRestriction_default_instance_;
class FloatFieldRestriction;
class FloatFieldRestrictionDefaultTypeInternal;
extern FloatFieldRestrictionDefaultTypeInternal _FloatFieldRestriction_default_instance_;
class MessageFieldRestriction;
class MessageFieldRestrictionDefaultTypeInternal;
extern MessageFieldRestrictionDefaultTypeInternal _MessageFieldRestriction_default_instance_;
class RepeatedFieldRestriction;
class RepeatedFieldRestrictionDefaultTypeInternal;
extern RepeatedFieldRestrictionDefaultTypeInternal _RepeatedFieldRestriction_default_instance_;
class SignedFieldRestriction;
class SignedFieldRestrictionDefaultTypeInternal;
extern SignedFieldRestrictionDefaultTypeInternal _SignedFieldRestriction_default_instance_;
class StringFieldRestriction;
class StringFieldRestrictionDefaultTypeInternal;
extern StringFieldRestrictionDefaultTypeInternal _StringFieldRestriction_default_instance_;
class UnsignedFieldRestriction;
class UnsignedFieldRestrictionDefaultTypeInternal;
extern UnsignedFieldRestrictionDefaultTypeInternal _UnsignedFieldRestriction_default_instance_;
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> ::bgs::protocol::BGSFieldOptions* Arena::CreateMaybeMessage<::bgs::protocol::BGSFieldOptions>(Arena*);
template<> ::bgs::protocol::EntityIdRestriction* Arena::CreateMaybeMessage<::bgs::protocol::EntityIdRestriction>(Arena*);
template<> ::bgs::protocol::FieldRestriction* Arena::CreateMaybeMessage<::bgs::protocol::FieldRestriction>(Arena*);
template<> ::bgs::protocol::FloatFieldRestriction* Arena::CreateMaybeMessage<::bgs::protocol::FloatFieldRestriction>(Arena*);
template<> ::bgs::protocol::MessageFieldRestriction* Arena::CreateMaybeMessage<::bgs::protocol::MessageFieldRestriction>(Arena*);
template<> ::bgs::protocol::RepeatedFieldRestriction* Arena::CreateMaybeMessage<::bgs::protocol::RepeatedFieldRestriction>(Arena*);
template<> ::bgs::protocol::SignedFieldRestriction* Arena::CreateMaybeMessage<::bgs::protocol::SignedFieldRestriction>(Arena*);
template<> ::bgs::protocol::StringFieldRestriction* Arena::CreateMaybeMessage<::bgs::protocol::StringFieldRestriction>(Arena*);
template<> ::bgs::protocol::UnsignedFieldRestriction* Arena::CreateMaybeMessage<::bgs::protocol::UnsignedFieldRestriction>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bgs {
namespace protocol {

enum EntityIdRestriction_Kind : int {
  EntityIdRestriction_Kind_ANY = 0,
  EntityIdRestriction_Kind_ACCOUNT = 1,
  EntityIdRestriction_Kind_GAME_ACCOUNT = 2,
  EntityIdRestriction_Kind_ACCOUNT_OR_GAME_ACCOUNT = 3,
  EntityIdRestriction_Kind_SERVICE = 4,
  EntityIdRestriction_Kind_CHANNEL = 5
};
bool EntityIdRestriction_Kind_IsValid(int value);
constexpr EntityIdRestriction_Kind EntityIdRestriction_Kind_Kind_MIN = EntityIdRestriction_Kind_ANY;
constexpr EntityIdRestriction_Kind EntityIdRestriction_Kind_Kind_MAX = EntityIdRestriction_Kind_CHANNEL;
constexpr int EntityIdRestriction_Kind_Kind_ARRAYSIZE = EntityIdRestriction_Kind_Kind_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EntityIdRestriction_Kind_descriptor();
template<typename T>
inline const std::string& EntityIdRestriction_Kind_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EntityIdRestriction_Kind>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EntityIdRestriction_Kind_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EntityIdRestriction_Kind_descriptor(), enum_t_value);
}
inline bool EntityIdRestriction_Kind_Parse(
    const std::string& name, EntityIdRestriction_Kind* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EntityIdRestriction_Kind>(
    EntityIdRestriction_Kind_descriptor(), name, value);
}
enum LogOption : int {
  HIDDEN = 1,
  HEX = 2
};
bool LogOption_IsValid(int value);
constexpr LogOption LogOption_MIN = HIDDEN;
constexpr LogOption LogOption_MAX = HEX;
constexpr int LogOption_ARRAYSIZE = LogOption_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LogOption_descriptor();
template<typename T>
inline const std::string& LogOption_Name(T enum_t_value) {
  static_assert(::std::is_same<T, LogOption>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function LogOption_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    LogOption_descriptor(), enum_t_value);
}
inline bool LogOption_Parse(
    const std::string& name, LogOption* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<LogOption>(
    LogOption_descriptor(), name, value);
}
// ===================================================================

class BGSFieldOptions :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.BGSFieldOptions) */ {
 public:
  BGSFieldOptions();
  virtual ~BGSFieldOptions();

  BGSFieldOptions(const BGSFieldOptions& from);
  BGSFieldOptions(BGSFieldOptions&& from) noexcept
    : BGSFieldOptions() {
    *this = ::std::move(from);
  }

  inline BGSFieldOptions& operator=(const BGSFieldOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline BGSFieldOptions& operator=(BGSFieldOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BGSFieldOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BGSFieldOptions* internal_default_instance() {
    return reinterpret_cast<const BGSFieldOptions*>(
               &_BGSFieldOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BGSFieldOptions& a, BGSFieldOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(BGSFieldOptions* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BGSFieldOptions* New() const final {
    return CreateMaybeMessage<BGSFieldOptions>(nullptr);
  }

  BGSFieldOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BGSFieldOptions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BGSFieldOptions& from);
  void MergeFrom(const BGSFieldOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BGSFieldOptions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.BGSFieldOptions";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShardKeyFieldNumber = 2,
    kFanoutKeyFieldNumber = 3,
    kLogFieldNumber = 1,
  };
  // optional bool shard_key = 2;
  bool has_shard_key() const;
  private:
  bool _internal_has_shard_key() const;
  public:
  void clear_shard_key();
  bool shard_key() const;
  void set_shard_key(bool value);
  private:
  bool _internal_shard_key() const;
  void _internal_set_shard_key(bool value);
  public:

  // optional bool fanout_key = 3;
  bool has_fanout_key() const;
  private:
  bool _internal_has_fanout_key() const;
  public:
  void clear_fanout_key();
  bool fanout_key() const;
  void set_fanout_key(bool value);
  private:
  bool _internal_fanout_key() const;
  void _internal_set_fanout_key(bool value);
  public:

  // optional .bgs.protocol.LogOption log = 1 [default = HIDDEN];
  bool has_log() const;
  private:
  bool _internal_has_log() const;
  public:
  void clear_log();
  ::bgs::protocol::LogOption log() const;
  void set_log(::bgs::protocol::LogOption value);
  private:
  ::bgs::protocol::LogOption _internal_log() const;
  void _internal_set_log(::bgs::protocol::LogOption value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.BGSFieldOptions)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool shard_key_;
  bool fanout_key_;
  int log_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
};
// -------------------------------------------------------------------

class FieldRestriction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.FieldRestriction) */ {
 public:
  FieldRestriction();
  virtual ~FieldRestriction();

  FieldRestriction(const FieldRestriction& from);
  FieldRestriction(FieldRestriction&& from) noexcept
    : FieldRestriction() {
    *this = ::std::move(from);
  }

  inline FieldRestriction& operator=(const FieldRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline FieldRestriction& operator=(FieldRestriction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FieldRestriction& default_instance();

  enum TypeCase {
    kSigned = 1,
    kUnsigned = 2,
    kFloat = 3,
    kString = 4,
    kRepeated = 5,
    kMessage = 6,
    kEntityId = 7,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldRestriction* internal_default_instance() {
    return reinterpret_cast<const FieldRestriction*>(
               &_FieldRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FieldRestriction& a, FieldRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(FieldRestriction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FieldRestriction* New() const final {
    return CreateMaybeMessage<FieldRestriction>(nullptr);
  }

  FieldRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FieldRestriction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FieldRestriction& from);
  void MergeFrom(const FieldRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.FieldRestriction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignedFieldNumber = 1,
    kUnsignedFieldNumber = 2,
    kFloatFieldNumber = 3,
    kStringFieldNumber = 4,
    kRepeatedFieldNumber = 5,
    kMessageFieldNumber = 6,
    kEntityIdFieldNumber = 7,
  };
  // optional .bgs.protocol.SignedFieldRestriction signed = 1;
  bool has_signed_() const;
  private:
  bool _internal_has_signed_() const;
  public:
  void clear_signed_();
  const ::bgs::protocol::SignedFieldRestriction& signed_() const;
  ::bgs::protocol::SignedFieldRestriction* release_signed_();
  ::bgs::protocol::SignedFieldRestriction* mutable_signed_();
  void set_allocated_signed_(::bgs::protocol::SignedFieldRestriction* signed_);
  private:
  const ::bgs::protocol::SignedFieldRestriction& _internal_signed_() const;
  ::bgs::protocol::SignedFieldRestriction* _internal_mutable_signed_();
  public:

  // optional .bgs.protocol.UnsignedFieldRestriction unsigned = 2;
  bool has_unsigned_() const;
  private:
  bool _internal_has_unsigned_() const;
  public:
  void clear_unsigned_();
  const ::bgs::protocol::UnsignedFieldRestriction& unsigned_() const;
  ::bgs::protocol::UnsignedFieldRestriction* release_unsigned_();
  ::bgs::protocol::UnsignedFieldRestriction* mutable_unsigned_();
  void set_allocated_unsigned_(::bgs::protocol::UnsignedFieldRestriction* unsigned_);
  private:
  const ::bgs::protocol::UnsignedFieldRestriction& _internal_unsigned_() const;
  ::bgs::protocol::UnsignedFieldRestriction* _internal_mutable_unsigned_();
  public:

  // optional .bgs.protocol.FloatFieldRestriction float = 3;
  bool has_float_() const;
  private:
  bool _internal_has_float_() const;
  public:
  void clear_float_();
  const ::bgs::protocol::FloatFieldRestriction& float_() const;
  ::bgs::protocol::FloatFieldRestriction* release_float_();
  ::bgs::protocol::FloatFieldRestriction* mutable_float_();
  void set_allocated_float_(::bgs::protocol::FloatFieldRestriction* float_);
  private:
  const ::bgs::protocol::FloatFieldRestriction& _internal_float_() const;
  ::bgs::protocol::FloatFieldRestriction* _internal_mutable_float_();
  public:

  // optional .bgs.protocol.StringFieldRestriction string = 4;
  bool has_string() const;
  private:
  bool _internal_has_string() const;
  public:
  void clear_string();
  const ::bgs::protocol::StringFieldRestriction& string() const;
  ::bgs::protocol::StringFieldRestriction* release_string();
  ::bgs::protocol::StringFieldRestriction* mutable_string();
  void set_allocated_string(::bgs::protocol::StringFieldRestriction* string);
  private:
  const ::bgs::protocol::StringFieldRestriction& _internal_string() const;
  ::bgs::protocol::StringFieldRestriction* _internal_mutable_string();
  public:

  // optional .bgs.protocol.RepeatedFieldRestriction repeated = 5;
  bool has_repeated() const;
  private:
  bool _internal_has_repeated() const;
  public:
  void clear_repeated();
  const ::bgs::protocol::RepeatedFieldRestriction& repeated() const;
  ::bgs::protocol::RepeatedFieldRestriction* release_repeated();
  ::bgs::protocol::RepeatedFieldRestriction* mutable_repeated();
  void set_allocated_repeated(::bgs::protocol::RepeatedFieldRestriction* repeated);
  private:
  const ::bgs::protocol::RepeatedFieldRestriction& _internal_repeated() const;
  ::bgs::protocol::RepeatedFieldRestriction* _internal_mutable_repeated();
  public:

  // optional .bgs.protocol.MessageFieldRestriction message = 6;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const ::bgs::protocol::MessageFieldRestriction& message() const;
  ::bgs::protocol::MessageFieldRestriction* release_message();
  ::bgs::protocol::MessageFieldRestriction* mutable_message();
  void set_allocated_message(::bgs::protocol::MessageFieldRestriction* message);
  private:
  const ::bgs::protocol::MessageFieldRestriction& _internal_message() const;
  ::bgs::protocol::MessageFieldRestriction* _internal_mutable_message();
  public:

  // optional .bgs.protocol.EntityIdRestriction entity_id = 7;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityIdRestriction& entity_id() const;
  ::bgs::protocol::EntityIdRestriction* release_entity_id();
  ::bgs::protocol::EntityIdRestriction* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityIdRestriction* entity_id);
  private:
  const ::bgs::protocol::EntityIdRestriction& _internal_entity_id() const;
  ::bgs::protocol::EntityIdRestriction* _internal_mutable_entity_id();
  public:

  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:bgs.protocol.FieldRestriction)
 private:
  class _Internal;
  void set_has_signed_();
  void set_has_unsigned_();
  void set_has_float_();
  void set_has_string();
  void set_has_repeated();
  void set_has_message();
  void set_has_entity_id();

  inline bool has_type() const;
  inline void clear_has_type();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  union TypeUnion {
    TypeUnion() {}
    ::bgs::protocol::SignedFieldRestriction* signed__;
    ::bgs::protocol::UnsignedFieldRestriction* unsigned__;
    ::bgs::protocol::FloatFieldRestriction* float__;
    ::bgs::protocol::StringFieldRestriction* string_;
    ::bgs::protocol::RepeatedFieldRestriction* repeated_;
    ::bgs::protocol::MessageFieldRestriction* message_;
    ::bgs::protocol::EntityIdRestriction* entity_id_;
  } type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
};
// -------------------------------------------------------------------

class RepeatedFieldRestriction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.RepeatedFieldRestriction) */ {
 public:
  RepeatedFieldRestriction();
  virtual ~RepeatedFieldRestriction();

  RepeatedFieldRestriction(const RepeatedFieldRestriction& from);
  RepeatedFieldRestriction(RepeatedFieldRestriction&& from) noexcept
    : RepeatedFieldRestriction() {
    *this = ::std::move(from);
  }

  inline RepeatedFieldRestriction& operator=(const RepeatedFieldRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline RepeatedFieldRestriction& operator=(RepeatedFieldRestriction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RepeatedFieldRestriction& default_instance();

  enum TypeCase {
    kSigned = 3,
    kUnsigned = 4,
    kFloat = 5,
    kString = 6,
    kEntityId = 7,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RepeatedFieldRestriction* internal_default_instance() {
    return reinterpret_cast<const RepeatedFieldRestriction*>(
               &_RepeatedFieldRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RepeatedFieldRestriction& a, RepeatedFieldRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(RepeatedFieldRestriction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RepeatedFieldRestriction* New() const final {
    return CreateMaybeMessage<RepeatedFieldRestriction>(nullptr);
  }

  RepeatedFieldRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RepeatedFieldRestriction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RepeatedFieldRestriction& from);
  void MergeFrom(const RepeatedFieldRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RepeatedFieldRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.RepeatedFieldRestriction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSizeFieldNumber = 1,
    kUniqueFieldNumber = 2,
    kSignedFieldNumber = 3,
    kUnsignedFieldNumber = 4,
    kFloatFieldNumber = 5,
    kStringFieldNumber = 6,
    kEntityIdFieldNumber = 7,
  };
  // optional .bgs.protocol.UnsignedIntRange size = 1;
  bool has_size() const;
  private:
  bool _internal_has_size() const;
  public:
  void clear_size();
  const ::bgs::protocol::UnsignedIntRange& size() const;
  ::bgs::protocol::UnsignedIntRange* release_size();
  ::bgs::protocol::UnsignedIntRange* mutable_size();
  void set_allocated_size(::bgs::protocol::UnsignedIntRange* size);
  private:
  const ::bgs::protocol::UnsignedIntRange& _internal_size() const;
  ::bgs::protocol::UnsignedIntRange* _internal_mutable_size();
  public:

  // optional bool unique = 2;
  bool has_unique() const;
  private:
  bool _internal_has_unique() const;
  public:
  void clear_unique();
  bool unique() const;
  void set_unique(bool value);
  private:
  bool _internal_unique() const;
  void _internal_set_unique(bool value);
  public:

  // optional .bgs.protocol.SignedFieldRestriction signed = 3;
  bool has_signed_() const;
  private:
  bool _internal_has_signed_() const;
  public:
  void clear_signed_();
  const ::bgs::protocol::SignedFieldRestriction& signed_() const;
  ::bgs::protocol::SignedFieldRestriction* release_signed_();
  ::bgs::protocol::SignedFieldRestriction* mutable_signed_();
  void set_allocated_signed_(::bgs::protocol::SignedFieldRestriction* signed_);
  private:
  const ::bgs::protocol::SignedFieldRestriction& _internal_signed_() const;
  ::bgs::protocol::SignedFieldRestriction* _internal_mutable_signed_();
  public:

  // optional .bgs.protocol.UnsignedFieldRestriction unsigned = 4;
  bool has_unsigned_() const;
  private:
  bool _internal_has_unsigned_() const;
  public:
  void clear_unsigned_();
  const ::bgs::protocol::UnsignedFieldRestriction& unsigned_() const;
  ::bgs::protocol::UnsignedFieldRestriction* release_unsigned_();
  ::bgs::protocol::UnsignedFieldRestriction* mutable_unsigned_();
  void set_allocated_unsigned_(::bgs::protocol::UnsignedFieldRestriction* unsigned_);
  private:
  const ::bgs::protocol::UnsignedFieldRestriction& _internal_unsigned_() const;
  ::bgs::protocol::UnsignedFieldRestriction* _internal_mutable_unsigned_();
  public:

  // optional .bgs.protocol.FloatFieldRestriction float = 5;
  bool has_float_() const;
  private:
  bool _internal_has_float_() const;
  public:
  void clear_float_();
  const ::bgs::protocol::FloatFieldRestriction& float_() const;
  ::bgs::protocol::FloatFieldRestriction* release_float_();
  ::bgs::protocol::FloatFieldRestriction* mutable_float_();
  void set_allocated_float_(::bgs::protocol::FloatFieldRestriction* float_);
  private:
  const ::bgs::protocol::FloatFieldRestriction& _internal_float_() const;
  ::bgs::protocol::FloatFieldRestriction* _internal_mutable_float_();
  public:

  // optional .bgs.protocol.StringFieldRestriction string = 6;
  bool has_string() const;
  private:
  bool _internal_has_string() const;
  public:
  void clear_string();
  const ::bgs::protocol::StringFieldRestriction& string() const;
  ::bgs::protocol::StringFieldRestriction* release_string();
  ::bgs::protocol::StringFieldRestriction* mutable_string();
  void set_allocated_string(::bgs::protocol::StringFieldRestriction* string);
  private:
  const ::bgs::protocol::StringFieldRestriction& _internal_string() const;
  ::bgs::protocol::StringFieldRestriction* _internal_mutable_string();
  public:

  // optional .bgs.protocol.EntityIdRestriction entity_id = 7;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityIdRestriction& entity_id() const;
  ::bgs::protocol::EntityIdRestriction* release_entity_id();
  ::bgs::protocol::EntityIdRestriction* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityIdRestriction* entity_id);
  private:
  const ::bgs::protocol::EntityIdRestriction& _internal_entity_id() const;
  ::bgs::protocol::EntityIdRestriction* _internal_mutable_entity_id();
  public:

  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:bgs.protocol.RepeatedFieldRestriction)
 private:
  class _Internal;
  void set_has_signed_();
  void set_has_unsigned_();
  void set_has_float_();
  void set_has_string();
  void set_has_entity_id();

  inline bool has_type() const;
  inline void clear_has_type();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::UnsignedIntRange* size_;
  bool unique_;
  union TypeUnion {
    TypeUnion() {}
    ::bgs::protocol::SignedFieldRestriction* signed__;
    ::bgs::protocol::UnsignedFieldRestriction* unsigned__;
    ::bgs::protocol::FloatFieldRestriction* float__;
    ::bgs::protocol::StringFieldRestriction* string_;
    ::bgs::protocol::EntityIdRestriction* entity_id_;
  } type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
};
// -------------------------------------------------------------------

class SignedFieldRestriction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.SignedFieldRestriction) */ {
 public:
  SignedFieldRestriction();
  virtual ~SignedFieldRestriction();

  SignedFieldRestriction(const SignedFieldRestriction& from);
  SignedFieldRestriction(SignedFieldRestriction&& from) noexcept
    : SignedFieldRestriction() {
    *this = ::std::move(from);
  }

  inline SignedFieldRestriction& operator=(const SignedFieldRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignedFieldRestriction& operator=(SignedFieldRestriction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SignedFieldRestriction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignedFieldRestriction* internal_default_instance() {
    return reinterpret_cast<const SignedFieldRestriction*>(
               &_SignedFieldRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SignedFieldRestriction& a, SignedFieldRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(SignedFieldRestriction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SignedFieldRestriction* New() const final {
    return CreateMaybeMessage<SignedFieldRestriction>(nullptr);
  }

  SignedFieldRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SignedFieldRestriction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SignedFieldRestriction& from);
  void MergeFrom(const SignedFieldRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignedFieldRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.SignedFieldRestriction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExcludeFieldNumber = 2,
    kLimitsFieldNumber = 1,
  };
  // repeated sint64 exclude = 2;
  int exclude_size() const;
  private:
  int _internal_exclude_size() const;
  public:
  void clear_exclude();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_exclude(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_exclude() const;
  void _internal_add_exclude(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_exclude();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 exclude(int index) const;
  void set_exclude(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_exclude(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      exclude() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_exclude();

  // optional .bgs.protocol.SignedIntRange limits = 1;
  bool has_limits() const;
  private:
  bool _internal_has_limits() const;
  public:
  void clear_limits();
  const ::bgs::protocol::SignedIntRange& limits() const;
  ::bgs::protocol::SignedIntRange* release_limits();
  ::bgs::protocol::SignedIntRange* mutable_limits();
  void set_allocated_limits(::bgs::protocol::SignedIntRange* limits);
  private:
  const ::bgs::protocol::SignedIntRange& _internal_limits() const;
  ::bgs::protocol::SignedIntRange* _internal_mutable_limits();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.SignedFieldRestriction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > exclude_;
  ::bgs::protocol::SignedIntRange* limits_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
};
// -------------------------------------------------------------------

class UnsignedFieldRestriction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.UnsignedFieldRestriction) */ {
 public:
  UnsignedFieldRestriction();
  virtual ~UnsignedFieldRestriction();

  UnsignedFieldRestriction(const UnsignedFieldRestriction& from);
  UnsignedFieldRestriction(UnsignedFieldRestriction&& from) noexcept
    : UnsignedFieldRestriction() {
    *this = ::std::move(from);
  }

  inline UnsignedFieldRestriction& operator=(const UnsignedFieldRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsignedFieldRestriction& operator=(UnsignedFieldRestriction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsignedFieldRestriction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsignedFieldRestriction* internal_default_instance() {
    return reinterpret_cast<const UnsignedFieldRestriction*>(
               &_UnsignedFieldRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(UnsignedFieldRestriction& a, UnsignedFieldRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsignedFieldRestriction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsignedFieldRestriction* New() const final {
    return CreateMaybeMessage<UnsignedFieldRestriction>(nullptr);
  }

  UnsignedFieldRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsignedFieldRestriction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsignedFieldRestriction& from);
  void MergeFrom(const UnsignedFieldRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsignedFieldRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.UnsignedFieldRestriction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExcludeFieldNumber = 2,
    kLimitsFieldNumber = 1,
  };
  // repeated uint64 exclude = 2;
  int exclude_size() const;
  private:
  int _internal_exclude_size() const;
  public:
  void clear_exclude();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_exclude(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_exclude() const;
  void _internal_add_exclude(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_exclude();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 exclude(int index) const;
  void set_exclude(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_exclude(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      exclude() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_exclude();

  // optional .bgs.protocol.UnsignedIntRange limits = 1;
  bool has_limits() const;
  private:
  bool _internal_has_limits() const;
  public:
  void clear_limits();
  const ::bgs::protocol::UnsignedIntRange& limits() const;
  ::bgs::protocol::UnsignedIntRange* release_limits();
  ::bgs::protocol::UnsignedIntRange* mutable_limits();
  void set_allocated_limits(::bgs::protocol::UnsignedIntRange* limits);
  private:
  const ::bgs::protocol::UnsignedIntRange& _internal_limits() const;
  ::bgs::protocol::UnsignedIntRange* _internal_mutable_limits();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.UnsignedFieldRestriction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > exclude_;
  ::bgs::protocol::UnsignedIntRange* limits_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
};
// -------------------------------------------------------------------

class FloatFieldRestriction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.FloatFieldRestriction) */ {
 public:
  FloatFieldRestriction();
  virtual ~FloatFieldRestriction();

  FloatFieldRestriction(const FloatFieldRestriction& from);
  FloatFieldRestriction(FloatFieldRestriction&& from) noexcept
    : FloatFieldRestriction() {
    *this = ::std::move(from);
  }

  inline FloatFieldRestriction& operator=(const FloatFieldRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatFieldRestriction& operator=(FloatFieldRestriction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FloatFieldRestriction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatFieldRestriction* internal_default_instance() {
    return reinterpret_cast<const FloatFieldRestriction*>(
               &_FloatFieldRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(FloatFieldRestriction& a, FloatFieldRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatFieldRestriction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FloatFieldRestriction* New() const final {
    return CreateMaybeMessage<FloatFieldRestriction>(nullptr);
  }

  FloatFieldRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FloatFieldRestriction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FloatFieldRestriction& from);
  void MergeFrom(const FloatFieldRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatFieldRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.FloatFieldRestriction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExcludeFieldNumber = 2,
    kLimitsFieldNumber = 1,
  };
  // repeated float exclude = 2;
  int exclude_size() const;
  private:
  int _internal_exclude_size() const;
  public:
  void clear_exclude();
  private:
  float _internal_exclude(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_exclude() const;
  void _internal_add_exclude(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_exclude();
  public:
  float exclude(int index) const;
  void set_exclude(int index, float value);
  void add_exclude(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      exclude() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_exclude();

  // optional .bgs.protocol.FloatRange limits = 1;
  bool has_limits() const;
  private:
  bool _internal_has_limits() const;
  public:
  void clear_limits();
  const ::bgs::protocol::FloatRange& limits() const;
  ::bgs::protocol::FloatRange* release_limits();
  ::bgs::protocol::FloatRange* mutable_limits();
  void set_allocated_limits(::bgs::protocol::FloatRange* limits);
  private:
  const ::bgs::protocol::FloatRange& _internal_limits() const;
  ::bgs::protocol::FloatRange* _internal_mutable_limits();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.FloatFieldRestriction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > exclude_;
  ::bgs::protocol::FloatRange* limits_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
};
// -------------------------------------------------------------------

class StringFieldRestriction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.StringFieldRestriction) */ {
 public:
  StringFieldRestriction();
  virtual ~StringFieldRestriction();

  StringFieldRestriction(const StringFieldRestriction& from);
  StringFieldRestriction(StringFieldRestriction&& from) noexcept
    : StringFieldRestriction() {
    *this = ::std::move(from);
  }

  inline StringFieldRestriction& operator=(const StringFieldRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringFieldRestriction& operator=(StringFieldRestriction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StringFieldRestriction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringFieldRestriction* internal_default_instance() {
    return reinterpret_cast<const StringFieldRestriction*>(
               &_StringFieldRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(StringFieldRestriction& a, StringFieldRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(StringFieldRestriction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StringFieldRestriction* New() const final {
    return CreateMaybeMessage<StringFieldRestriction>(nullptr);
  }

  StringFieldRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StringFieldRestriction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StringFieldRestriction& from);
  void MergeFrom(const StringFieldRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringFieldRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.StringFieldRestriction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExcludeFieldNumber = 2,
    kSizeFieldNumber = 1,
  };
  // repeated string exclude = 2;
  int exclude_size() const;
  private:
  int _internal_exclude_size() const;
  public:
  void clear_exclude();
  const std::string& exclude(int index) const;
  std::string* mutable_exclude(int index);
  void set_exclude(int index, const std::string& value);
  void set_exclude(int index, std::string&& value);
  void set_exclude(int index, const char* value);
  void set_exclude(int index, const char* value, size_t size);
  std::string* add_exclude();
  void add_exclude(const std::string& value);
  void add_exclude(std::string&& value);
  void add_exclude(const char* value);
  void add_exclude(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& exclude() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_exclude();
  private:
  const std::string& _internal_exclude(int index) const;
  std::string* _internal_add_exclude();
  public:

  // optional .bgs.protocol.UnsignedIntRange size = 1;
  bool has_size() const;
  private:
  bool _internal_has_size() const;
  public:
  void clear_size();
  const ::bgs::protocol::UnsignedIntRange& size() const;
  ::bgs::protocol::UnsignedIntRange* release_size();
  ::bgs::protocol::UnsignedIntRange* mutable_size();
  void set_allocated_size(::bgs::protocol::UnsignedIntRange* size);
  private:
  const ::bgs::protocol::UnsignedIntRange& _internal_size() const;
  ::bgs::protocol::UnsignedIntRange* _internal_mutable_size();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.StringFieldRestriction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> exclude_;
  ::bgs::protocol::UnsignedIntRange* size_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
};
// -------------------------------------------------------------------

class EntityIdRestriction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.EntityIdRestriction) */ {
 public:
  EntityIdRestriction();
  virtual ~EntityIdRestriction();

  EntityIdRestriction(const EntityIdRestriction& from);
  EntityIdRestriction(EntityIdRestriction&& from) noexcept
    : EntityIdRestriction() {
    *this = ::std::move(from);
  }

  inline EntityIdRestriction& operator=(const EntityIdRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityIdRestriction& operator=(EntityIdRestriction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EntityIdRestriction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EntityIdRestriction* internal_default_instance() {
    return reinterpret_cast<const EntityIdRestriction*>(
               &_EntityIdRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(EntityIdRestriction& a, EntityIdRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(EntityIdRestriction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EntityIdRestriction* New() const final {
    return CreateMaybeMessage<EntityIdRestriction>(nullptr);
  }

  EntityIdRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EntityIdRestriction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EntityIdRestriction& from);
  void MergeFrom(const EntityIdRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EntityIdRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.EntityIdRestriction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef EntityIdRestriction_Kind Kind;
  static constexpr Kind ANY =
    EntityIdRestriction_Kind_ANY;
  static constexpr Kind ACCOUNT =
    EntityIdRestriction_Kind_ACCOUNT;
  static constexpr Kind GAME_ACCOUNT =
    EntityIdRestriction_Kind_GAME_ACCOUNT;
  static constexpr Kind ACCOUNT_OR_GAME_ACCOUNT =
    EntityIdRestriction_Kind_ACCOUNT_OR_GAME_ACCOUNT;
  static constexpr Kind SERVICE =
    EntityIdRestriction_Kind_SERVICE;
  static constexpr Kind CHANNEL =
    EntityIdRestriction_Kind_CHANNEL;
  static inline bool Kind_IsValid(int value) {
    return EntityIdRestriction_Kind_IsValid(value);
  }
  static constexpr Kind Kind_MIN =
    EntityIdRestriction_Kind_Kind_MIN;
  static constexpr Kind Kind_MAX =
    EntityIdRestriction_Kind_Kind_MAX;
  static constexpr int Kind_ARRAYSIZE =
    EntityIdRestriction_Kind_Kind_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Kind_descriptor() {
    return EntityIdRestriction_Kind_descriptor();
  }
  template<typename T>
  static inline const std::string& Kind_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Kind>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Kind_Name.");
    return EntityIdRestriction_Kind_Name(enum_t_value);
  }
  static inline bool Kind_Parse(const std::string& name,
      Kind* value) {
    return EntityIdRestriction_Kind_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNeededFieldNumber = 1,
    kKindFieldNumber = 2,
  };
  // optional bool needed = 1;
  bool has_needed() const;
  private:
  bool _internal_has_needed() const;
  public:
  void clear_needed();
  bool needed() const;
  void set_needed(bool value);
  private:
  bool _internal_needed() const;
  void _internal_set_needed(bool value);
  public:

  // optional .bgs.protocol.EntityIdRestriction.Kind kind = 2 [default = ANY];
  bool has_kind() const;
  private:
  bool _internal_has_kind() const;
  public:
  void clear_kind();
  ::bgs::protocol::EntityIdRestriction_Kind kind() const;
  void set_kind(::bgs::protocol::EntityIdRestriction_Kind value);
  private:
  ::bgs::protocol::EntityIdRestriction_Kind _internal_kind() const;
  void _internal_set_kind(::bgs::protocol::EntityIdRestriction_Kind value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.EntityIdRestriction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool needed_;
  int kind_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
};
// -------------------------------------------------------------------

class MessageFieldRestriction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.MessageFieldRestriction) */ {
 public:
  MessageFieldRestriction();
  virtual ~MessageFieldRestriction();

  MessageFieldRestriction(const MessageFieldRestriction& from);
  MessageFieldRestriction(MessageFieldRestriction&& from) noexcept
    : MessageFieldRestriction() {
    *this = ::std::move(from);
  }

  inline MessageFieldRestriction& operator=(const MessageFieldRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageFieldRestriction& operator=(MessageFieldRestriction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MessageFieldRestriction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageFieldRestriction* internal_default_instance() {
    return reinterpret_cast<const MessageFieldRestriction*>(
               &_MessageFieldRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MessageFieldRestriction& a, MessageFieldRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageFieldRestriction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MessageFieldRestriction* New() const final {
    return CreateMaybeMessage<MessageFieldRestriction>(nullptr);
  }

  MessageFieldRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MessageFieldRestriction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MessageFieldRestriction& from);
  void MergeFrom(const MessageFieldRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageFieldRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.MessageFieldRestriction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNeededFieldNumber = 1,
  };
  // optional bool needed = 1;
  bool has_needed() const;
  private:
  bool _internal_has_needed() const;
  public:
  void clear_needed();
  bool needed() const;
  void set_needed(bool value);
  private:
  bool _internal_needed() const;
  void _internal_set_needed(bool value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.MessageFieldRestriction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool needed_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto;
};
// ===================================================================

static const int kFieldOptionsFieldNumber = 90000;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::bgs::protocol::BGSFieldOptions >, 11, false >
  field_options;
static const int kValidFieldNumber = 90001;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::bgs::protocol::FieldRestriction >, 11, false >
  valid;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BGSFieldOptions

// optional .bgs.protocol.LogOption log = 1 [default = HIDDEN];
inline bool BGSFieldOptions::_internal_has_log() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool BGSFieldOptions::has_log() const {
  return _internal_has_log();
}
inline void BGSFieldOptions::clear_log() {
  log_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::bgs::protocol::LogOption BGSFieldOptions::_internal_log() const {
  return static_cast< ::bgs::protocol::LogOption >(log_);
}
inline ::bgs::protocol::LogOption BGSFieldOptions::log() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSFieldOptions.log)
  return _internal_log();
}
inline void BGSFieldOptions::_internal_set_log(::bgs::protocol::LogOption value) {
  assert(::bgs::protocol::LogOption_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  log_ = value;
}
inline void BGSFieldOptions::set_log(::bgs::protocol::LogOption value) {
  _internal_set_log(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSFieldOptions.log)
}

// optional bool shard_key = 2;
inline bool BGSFieldOptions::_internal_has_shard_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool BGSFieldOptions::has_shard_key() const {
  return _internal_has_shard_key();
}
inline void BGSFieldOptions::clear_shard_key() {
  shard_key_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool BGSFieldOptions::_internal_shard_key() const {
  return shard_key_;
}
inline bool BGSFieldOptions::shard_key() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSFieldOptions.shard_key)
  return _internal_shard_key();
}
inline void BGSFieldOptions::_internal_set_shard_key(bool value) {
  _has_bits_[0] |= 0x00000001u;
  shard_key_ = value;
}
inline void BGSFieldOptions::set_shard_key(bool value) {
  _internal_set_shard_key(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSFieldOptions.shard_key)
}

// optional bool fanout_key = 3;
inline bool BGSFieldOptions::_internal_has_fanout_key() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool BGSFieldOptions::has_fanout_key() const {
  return _internal_has_fanout_key();
}
inline void BGSFieldOptions::clear_fanout_key() {
  fanout_key_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool BGSFieldOptions::_internal_fanout_key() const {
  return fanout_key_;
}
inline bool BGSFieldOptions::fanout_key() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.BGSFieldOptions.fanout_key)
  return _internal_fanout_key();
}
inline void BGSFieldOptions::_internal_set_fanout_key(bool value) {
  _has_bits_[0] |= 0x00000002u;
  fanout_key_ = value;
}
inline void BGSFieldOptions::set_fanout_key(bool value) {
  _internal_set_fanout_key(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.BGSFieldOptions.fanout_key)
}

// -------------------------------------------------------------------

// FieldRestriction

// optional .bgs.protocol.SignedFieldRestriction signed = 1;
inline bool FieldRestriction::_internal_has_signed_() const {
  return type_case() == kSigned;
}
inline bool FieldRestriction::has_signed_() const {
  return _internal_has_signed_();
}
inline void FieldRestriction::set_has_signed_() {
  _oneof_case_[0] = kSigned;
}
inline void FieldRestriction::clear_signed_() {
  if (_internal_has_signed_()) {
    delete type_.signed__;
    clear_has_type();
  }
}
inline ::bgs::protocol::SignedFieldRestriction* FieldRestriction::release_signed_() {
  // @@protoc_insertion_point(field_release:bgs.protocol.FieldRestriction.signed)
  if (_internal_has_signed_()) {
    clear_has_type();
      ::bgs::protocol::SignedFieldRestriction* temp = type_.signed__;
    type_.signed__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::SignedFieldRestriction& FieldRestriction::_internal_signed_() const {
  return _internal_has_signed_()
      ? *type_.signed__
      : *reinterpret_cast< ::bgs::protocol::SignedFieldRestriction*>(&::bgs::protocol::_SignedFieldRestriction_default_instance_);
}
inline const ::bgs::protocol::SignedFieldRestriction& FieldRestriction::signed_() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FieldRestriction.signed)
  return _internal_signed_();
}
inline ::bgs::protocol::SignedFieldRestriction* FieldRestriction::_internal_mutable_signed_() {
  if (!_internal_has_signed_()) {
    clear_type();
    set_has_signed_();
    type_.signed__ = CreateMaybeMessage< ::bgs::protocol::SignedFieldRestriction >(
        GetArenaNoVirtual());
  }
  return type_.signed__;
}
inline ::bgs::protocol::SignedFieldRestriction* FieldRestriction::mutable_signed_() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.FieldRestriction.signed)
  return _internal_mutable_signed_();
}

// optional .bgs.protocol.UnsignedFieldRestriction unsigned = 2;
inline bool FieldRestriction::_internal_has_unsigned_() const {
  return type_case() == kUnsigned;
}
inline bool FieldRestriction::has_unsigned_() const {
  return _internal_has_unsigned_();
}
inline void FieldRestriction::set_has_unsigned_() {
  _oneof_case_[0] = kUnsigned;
}
inline void FieldRestriction::clear_unsigned_() {
  if (_internal_has_unsigned_()) {
    delete type_.unsigned__;
    clear_has_type();
  }
}
inline ::bgs::protocol::UnsignedFieldRestriction* FieldRestriction::release_unsigned_() {
  // @@protoc_insertion_point(field_release:bgs.protocol.FieldRestriction.unsigned)
  if (_internal_has_unsigned_()) {
    clear_has_type();
      ::bgs::protocol::UnsignedFieldRestriction* temp = type_.unsigned__;
    type_.unsigned__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::UnsignedFieldRestriction& FieldRestriction::_internal_unsigned_() const {
  return _internal_has_unsigned_()
      ? *type_.unsigned__
      : *reinterpret_cast< ::bgs::protocol::UnsignedFieldRestriction*>(&::bgs::protocol::_UnsignedFieldRestriction_default_instance_);
}
inline const ::bgs::protocol::UnsignedFieldRestriction& FieldRestriction::unsigned_() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FieldRestriction.unsigned)
  return _internal_unsigned_();
}
inline ::bgs::protocol::UnsignedFieldRestriction* FieldRestriction::_internal_mutable_unsigned_() {
  if (!_internal_has_unsigned_()) {
    clear_type();
    set_has_unsigned_();
    type_.unsigned__ = CreateMaybeMessage< ::bgs::protocol::UnsignedFieldRestriction >(
        GetArenaNoVirtual());
  }
  return type_.unsigned__;
}
inline ::bgs::protocol::UnsignedFieldRestriction* FieldRestriction::mutable_unsigned_() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.FieldRestriction.unsigned)
  return _internal_mutable_unsigned_();
}

// optional .bgs.protocol.FloatFieldRestriction float = 3;
inline bool FieldRestriction::_internal_has_float_() const {
  return type_case() == kFloat;
}
inline bool FieldRestriction::has_float_() const {
  return _internal_has_float_();
}
inline void FieldRestriction::set_has_float_() {
  _oneof_case_[0] = kFloat;
}
inline void FieldRestriction::clear_float_() {
  if (_internal_has_float_()) {
    delete type_.float__;
    clear_has_type();
  }
}
inline ::bgs::protocol::FloatFieldRestriction* FieldRestriction::release_float_() {
  // @@protoc_insertion_point(field_release:bgs.protocol.FieldRestriction.float)
  if (_internal_has_float_()) {
    clear_has_type();
      ::bgs::protocol::FloatFieldRestriction* temp = type_.float__;
    type_.float__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::FloatFieldRestriction& FieldRestriction::_internal_float_() const {
  return _internal_has_float_()
      ? *type_.float__
      : *reinterpret_cast< ::bgs::protocol::FloatFieldRestriction*>(&::bgs::protocol::_FloatFieldRestriction_default_instance_);
}
inline const ::bgs::protocol::FloatFieldRestriction& FieldRestriction::float_() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FieldRestriction.float)
  return _internal_float_();
}
inline ::bgs::protocol::FloatFieldRestriction* FieldRestriction::_internal_mutable_float_() {
  if (!_internal_has_float_()) {
    clear_type();
    set_has_float_();
    type_.float__ = CreateMaybeMessage< ::bgs::protocol::FloatFieldRestriction >(
        GetArenaNoVirtual());
  }
  return type_.float__;
}
inline ::bgs::protocol::FloatFieldRestriction* FieldRestriction::mutable_float_() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.FieldRestriction.float)
  return _internal_mutable_float_();
}

// optional .bgs.protocol.StringFieldRestriction string = 4;
inline bool FieldRestriction::_internal_has_string() const {
  return type_case() == kString;
}
inline bool FieldRestriction::has_string() const {
  return _internal_has_string();
}
inline void FieldRestriction::set_has_string() {
  _oneof_case_[0] = kString;
}
inline void FieldRestriction::clear_string() {
  if (_internal_has_string()) {
    delete type_.string_;
    clear_has_type();
  }
}
inline ::bgs::protocol::StringFieldRestriction* FieldRestriction::release_string() {
  // @@protoc_insertion_point(field_release:bgs.protocol.FieldRestriction.string)
  if (_internal_has_string()) {
    clear_has_type();
      ::bgs::protocol::StringFieldRestriction* temp = type_.string_;
    type_.string_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::StringFieldRestriction& FieldRestriction::_internal_string() const {
  return _internal_has_string()
      ? *type_.string_
      : *reinterpret_cast< ::bgs::protocol::StringFieldRestriction*>(&::bgs::protocol::_StringFieldRestriction_default_instance_);
}
inline const ::bgs::protocol::StringFieldRestriction& FieldRestriction::string() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FieldRestriction.string)
  return _internal_string();
}
inline ::bgs::protocol::StringFieldRestriction* FieldRestriction::_internal_mutable_string() {
  if (!_internal_has_string()) {
    clear_type();
    set_has_string();
    type_.string_ = CreateMaybeMessage< ::bgs::protocol::StringFieldRestriction >(
        GetArenaNoVirtual());
  }
  return type_.string_;
}
inline ::bgs::protocol::StringFieldRestriction* FieldRestriction::mutable_string() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.FieldRestriction.string)
  return _internal_mutable_string();
}

// optional .bgs.protocol.RepeatedFieldRestriction repeated = 5;
inline bool FieldRestriction::_internal_has_repeated() const {
  return type_case() == kRepeated;
}
inline bool FieldRestriction::has_repeated() const {
  return _internal_has_repeated();
}
inline void FieldRestriction::set_has_repeated() {
  _oneof_case_[0] = kRepeated;
}
inline void FieldRestriction::clear_repeated() {
  if (_internal_has_repeated()) {
    delete type_.repeated_;
    clear_has_type();
  }
}
inline ::bgs::protocol::RepeatedFieldRestriction* FieldRestriction::release_repeated() {
  // @@protoc_insertion_point(field_release:bgs.protocol.FieldRestriction.repeated)
  if (_internal_has_repeated()) {
    clear_has_type();
      ::bgs::protocol::RepeatedFieldRestriction* temp = type_.repeated_;
    type_.repeated_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::RepeatedFieldRestriction& FieldRestriction::_internal_repeated() const {
  return _internal_has_repeated()
      ? *type_.repeated_
      : *reinterpret_cast< ::bgs::protocol::RepeatedFieldRestriction*>(&::bgs::protocol::_RepeatedFieldRestriction_default_instance_);
}
inline const ::bgs::protocol::RepeatedFieldRestriction& FieldRestriction::repeated() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FieldRestriction.repeated)
  return _internal_repeated();
}
inline ::bgs::protocol::RepeatedFieldRestriction* FieldRestriction::_internal_mutable_repeated() {
  if (!_internal_has_repeated()) {
    clear_type();
    set_has_repeated();
    type_.repeated_ = CreateMaybeMessage< ::bgs::protocol::RepeatedFieldRestriction >(
        GetArenaNoVirtual());
  }
  return type_.repeated_;
}
inline ::bgs::protocol::RepeatedFieldRestriction* FieldRestriction::mutable_repeated() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.FieldRestriction.repeated)
  return _internal_mutable_repeated();
}

// optional .bgs.protocol.MessageFieldRestriction message = 6;
inline bool FieldRestriction::_internal_has_message() const {
  return type_case() == kMessage;
}
inline bool FieldRestriction::has_message() const {
  return _internal_has_message();
}
inline void FieldRestriction::set_has_message() {
  _oneof_case_[0] = kMessage;
}
inline void FieldRestriction::clear_message() {
  if (_internal_has_message()) {
    delete type_.message_;
    clear_has_type();
  }
}
inline ::bgs::protocol::MessageFieldRestriction* FieldRestriction::release_message() {
  // @@protoc_insertion_point(field_release:bgs.protocol.FieldRestriction.message)
  if (_internal_has_message()) {
    clear_has_type();
      ::bgs::protocol::MessageFieldRestriction* temp = type_.message_;
    type_.message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::MessageFieldRestriction& FieldRestriction::_internal_message() const {
  return _internal_has_message()
      ? *type_.message_
      : *reinterpret_cast< ::bgs::protocol::MessageFieldRestriction*>(&::bgs::protocol::_MessageFieldRestriction_default_instance_);
}
inline const ::bgs::protocol::MessageFieldRestriction& FieldRestriction::message() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FieldRestriction.message)
  return _internal_message();
}
inline ::bgs::protocol::MessageFieldRestriction* FieldRestriction::_internal_mutable_message() {
  if (!_internal_has_message()) {
    clear_type();
    set_has_message();
    type_.message_ = CreateMaybeMessage< ::bgs::protocol::MessageFieldRestriction >(
        GetArenaNoVirtual());
  }
  return type_.message_;
}
inline ::bgs::protocol::MessageFieldRestriction* FieldRestriction::mutable_message() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.FieldRestriction.message)
  return _internal_mutable_message();
}

// optional .bgs.protocol.EntityIdRestriction entity_id = 7;
inline bool FieldRestriction::_internal_has_entity_id() const {
  return type_case() == kEntityId;
}
inline bool FieldRestriction::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void FieldRestriction::set_has_entity_id() {
  _oneof_case_[0] = kEntityId;
}
inline void FieldRestriction::clear_entity_id() {
  if (_internal_has_entity_id()) {
    delete type_.entity_id_;
    clear_has_type();
  }
}
inline ::bgs::protocol::EntityIdRestriction* FieldRestriction::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.FieldRestriction.entity_id)
  if (_internal_has_entity_id()) {
    clear_has_type();
      ::bgs::protocol::EntityIdRestriction* temp = type_.entity_id_;
    type_.entity_id_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::EntityIdRestriction& FieldRestriction::_internal_entity_id() const {
  return _internal_has_entity_id()
      ? *type_.entity_id_
      : *reinterpret_cast< ::bgs::protocol::EntityIdRestriction*>(&::bgs::protocol::_EntityIdRestriction_default_instance_);
}
inline const ::bgs::protocol::EntityIdRestriction& FieldRestriction::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FieldRestriction.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityIdRestriction* FieldRestriction::_internal_mutable_entity_id() {
  if (!_internal_has_entity_id()) {
    clear_type();
    set_has_entity_id();
    type_.entity_id_ = CreateMaybeMessage< ::bgs::protocol::EntityIdRestriction >(
        GetArenaNoVirtual());
  }
  return type_.entity_id_;
}
inline ::bgs::protocol::EntityIdRestriction* FieldRestriction::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.FieldRestriction.entity_id)
  return _internal_mutable_entity_id();
}

inline bool FieldRestriction::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void FieldRestriction::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline FieldRestriction::TypeCase FieldRestriction::type_case() const {
  return FieldRestriction::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RepeatedFieldRestriction

// optional .bgs.protocol.UnsignedIntRange size = 1;
inline bool RepeatedFieldRestriction::_internal_has_size() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || size_ != nullptr);
  return value;
}
inline bool RepeatedFieldRestriction::has_size() const {
  return _internal_has_size();
}
inline const ::bgs::protocol::UnsignedIntRange& RepeatedFieldRestriction::_internal_size() const {
  const ::bgs::protocol::UnsignedIntRange* p = size_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::UnsignedIntRange*>(
      &::bgs::protocol::_UnsignedIntRange_default_instance_);
}
inline const ::bgs::protocol::UnsignedIntRange& RepeatedFieldRestriction::size() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.RepeatedFieldRestriction.size)
  return _internal_size();
}
inline ::bgs::protocol::UnsignedIntRange* RepeatedFieldRestriction::release_size() {
  // @@protoc_insertion_point(field_release:bgs.protocol.RepeatedFieldRestriction.size)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::UnsignedIntRange* temp = size_;
  size_ = nullptr;
  return temp;
}
inline ::bgs::protocol::UnsignedIntRange* RepeatedFieldRestriction::_internal_mutable_size() {
  _has_bits_[0] |= 0x00000001u;
  if (size_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::UnsignedIntRange>(GetArenaNoVirtual());
    size_ = p;
  }
  return size_;
}
inline ::bgs::protocol::UnsignedIntRange* RepeatedFieldRestriction::mutable_size() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.RepeatedFieldRestriction.size)
  return _internal_mutable_size();
}
inline void RepeatedFieldRestriction::set_allocated_size(::bgs::protocol::UnsignedIntRange* size) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(size_);
  }
  if (size) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      size = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, size, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  size_ = size;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.RepeatedFieldRestriction.size)
}

// optional bool unique = 2;
inline bool RepeatedFieldRestriction::_internal_has_unique() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RepeatedFieldRestriction::has_unique() const {
  return _internal_has_unique();
}
inline void RepeatedFieldRestriction::clear_unique() {
  unique_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool RepeatedFieldRestriction::_internal_unique() const {
  return unique_;
}
inline bool RepeatedFieldRestriction::unique() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.RepeatedFieldRestriction.unique)
  return _internal_unique();
}
inline void RepeatedFieldRestriction::_internal_set_unique(bool value) {
  _has_bits_[0] |= 0x00000002u;
  unique_ = value;
}
inline void RepeatedFieldRestriction::set_unique(bool value) {
  _internal_set_unique(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.RepeatedFieldRestriction.unique)
}

// optional .bgs.protocol.SignedFieldRestriction signed = 3;
inline bool RepeatedFieldRestriction::_internal_has_signed_() const {
  return type_case() == kSigned;
}
inline bool RepeatedFieldRestriction::has_signed_() const {
  return _internal_has_signed_();
}
inline void RepeatedFieldRestriction::set_has_signed_() {
  _oneof_case_[0] = kSigned;
}
inline void RepeatedFieldRestriction::clear_signed_() {
  if (_internal_has_signed_()) {
    delete type_.signed__;
    clear_has_type();
  }
}
inline ::bgs::protocol::SignedFieldRestriction* RepeatedFieldRestriction::release_signed_() {
  // @@protoc_insertion_point(field_release:bgs.protocol.RepeatedFieldRestriction.signed)
  if (_internal_has_signed_()) {
    clear_has_type();
      ::bgs::protocol::SignedFieldRestriction* temp = type_.signed__;
    type_.signed__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::SignedFieldRestriction& RepeatedFieldRestriction::_internal_signed_() const {
  return _internal_has_signed_()
      ? *type_.signed__
      : *reinterpret_cast< ::bgs::protocol::SignedFieldRestriction*>(&::bgs::protocol::_SignedFieldRestriction_default_instance_);
}
inline const ::bgs::protocol::SignedFieldRestriction& RepeatedFieldRestriction::signed_() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.RepeatedFieldRestriction.signed)
  return _internal_signed_();
}
inline ::bgs::protocol::SignedFieldRestriction* RepeatedFieldRestriction::_internal_mutable_signed_() {
  if (!_internal_has_signed_()) {
    clear_type();
    set_has_signed_();
    type_.signed__ = CreateMaybeMessage< ::bgs::protocol::SignedFieldRestriction >(
        GetArenaNoVirtual());
  }
  return type_.signed__;
}
inline ::bgs::protocol::SignedFieldRestriction* RepeatedFieldRestriction::mutable_signed_() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.RepeatedFieldRestriction.signed)
  return _internal_mutable_signed_();
}

// optional .bgs.protocol.UnsignedFieldRestriction unsigned = 4;
inline bool RepeatedFieldRestriction::_internal_has_unsigned_() const {
  return type_case() == kUnsigned;
}
inline bool RepeatedFieldRestriction::has_unsigned_() const {
  return _internal_has_unsigned_();
}
inline void RepeatedFieldRestriction::set_has_unsigned_() {
  _oneof_case_[0] = kUnsigned;
}
inline void RepeatedFieldRestriction::clear_unsigned_() {
  if (_internal_has_unsigned_()) {
    delete type_.unsigned__;
    clear_has_type();
  }
}
inline ::bgs::protocol::UnsignedFieldRestriction* RepeatedFieldRestriction::release_unsigned_() {
  // @@protoc_insertion_point(field_release:bgs.protocol.RepeatedFieldRestriction.unsigned)
  if (_internal_has_unsigned_()) {
    clear_has_type();
      ::bgs::protocol::UnsignedFieldRestriction* temp = type_.unsigned__;
    type_.unsigned__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::UnsignedFieldRestriction& RepeatedFieldRestriction::_internal_unsigned_() const {
  return _internal_has_unsigned_()
      ? *type_.unsigned__
      : *reinterpret_cast< ::bgs::protocol::UnsignedFieldRestriction*>(&::bgs::protocol::_UnsignedFieldRestriction_default_instance_);
}
inline const ::bgs::protocol::UnsignedFieldRestriction& RepeatedFieldRestriction::unsigned_() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.RepeatedFieldRestriction.unsigned)
  return _internal_unsigned_();
}
inline ::bgs::protocol::UnsignedFieldRestriction* RepeatedFieldRestriction::_internal_mutable_unsigned_() {
  if (!_internal_has_unsigned_()) {
    clear_type();
    set_has_unsigned_();
    type_.unsigned__ = CreateMaybeMessage< ::bgs::protocol::UnsignedFieldRestriction >(
        GetArenaNoVirtual());
  }
  return type_.unsigned__;
}
inline ::bgs::protocol::UnsignedFieldRestriction* RepeatedFieldRestriction::mutable_unsigned_() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.RepeatedFieldRestriction.unsigned)
  return _internal_mutable_unsigned_();
}

// optional .bgs.protocol.FloatFieldRestriction float = 5;
inline bool RepeatedFieldRestriction::_internal_has_float_() const {
  return type_case() == kFloat;
}
inline bool RepeatedFieldRestriction::has_float_() const {
  return _internal_has_float_();
}
inline void RepeatedFieldRestriction::set_has_float_() {
  _oneof_case_[0] = kFloat;
}
inline void RepeatedFieldRestriction::clear_float_() {
  if (_internal_has_float_()) {
    delete type_.float__;
    clear_has_type();
  }
}
inline ::bgs::protocol::FloatFieldRestriction* RepeatedFieldRestriction::release_float_() {
  // @@protoc_insertion_point(field_release:bgs.protocol.RepeatedFieldRestriction.float)
  if (_internal_has_float_()) {
    clear_has_type();
      ::bgs::protocol::FloatFieldRestriction* temp = type_.float__;
    type_.float__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::FloatFieldRestriction& RepeatedFieldRestriction::_internal_float_() const {
  return _internal_has_float_()
      ? *type_.float__
      : *reinterpret_cast< ::bgs::protocol::FloatFieldRestriction*>(&::bgs::protocol::_FloatFieldRestriction_default_instance_);
}
inline const ::bgs::protocol::FloatFieldRestriction& RepeatedFieldRestriction::float_() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.RepeatedFieldRestriction.float)
  return _internal_float_();
}
inline ::bgs::protocol::FloatFieldRestriction* RepeatedFieldRestriction::_internal_mutable_float_() {
  if (!_internal_has_float_()) {
    clear_type();
    set_has_float_();
    type_.float__ = CreateMaybeMessage< ::bgs::protocol::FloatFieldRestriction >(
        GetArenaNoVirtual());
  }
  return type_.float__;
}
inline ::bgs::protocol::FloatFieldRestriction* RepeatedFieldRestriction::mutable_float_() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.RepeatedFieldRestriction.float)
  return _internal_mutable_float_();
}

// optional .bgs.protocol.StringFieldRestriction string = 6;
inline bool RepeatedFieldRestriction::_internal_has_string() const {
  return type_case() == kString;
}
inline bool RepeatedFieldRestriction::has_string() const {
  return _internal_has_string();
}
inline void RepeatedFieldRestriction::set_has_string() {
  _oneof_case_[0] = kString;
}
inline void RepeatedFieldRestriction::clear_string() {
  if (_internal_has_string()) {
    delete type_.string_;
    clear_has_type();
  }
}
inline ::bgs::protocol::StringFieldRestriction* RepeatedFieldRestriction::release_string() {
  // @@protoc_insertion_point(field_release:bgs.protocol.RepeatedFieldRestriction.string)
  if (_internal_has_string()) {
    clear_has_type();
      ::bgs::protocol::StringFieldRestriction* temp = type_.string_;
    type_.string_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::StringFieldRestriction& RepeatedFieldRestriction::_internal_string() const {
  return _internal_has_string()
      ? *type_.string_
      : *reinterpret_cast< ::bgs::protocol::StringFieldRestriction*>(&::bgs::protocol::_StringFieldRestriction_default_instance_);
}
inline const ::bgs::protocol::StringFieldRestriction& RepeatedFieldRestriction::string() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.RepeatedFieldRestriction.string)
  return _internal_string();
}
inline ::bgs::protocol::StringFieldRestriction* RepeatedFieldRestriction::_internal_mutable_string() {
  if (!_internal_has_string()) {
    clear_type();
    set_has_string();
    type_.string_ = CreateMaybeMessage< ::bgs::protocol::StringFieldRestriction >(
        GetArenaNoVirtual());
  }
  return type_.string_;
}
inline ::bgs::protocol::StringFieldRestriction* RepeatedFieldRestriction::mutable_string() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.RepeatedFieldRestriction.string)
  return _internal_mutable_string();
}

// optional .bgs.protocol.EntityIdRestriction entity_id = 7;
inline bool RepeatedFieldRestriction::_internal_has_entity_id() const {
  return type_case() == kEntityId;
}
inline bool RepeatedFieldRestriction::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void RepeatedFieldRestriction::set_has_entity_id() {
  _oneof_case_[0] = kEntityId;
}
inline void RepeatedFieldRestriction::clear_entity_id() {
  if (_internal_has_entity_id()) {
    delete type_.entity_id_;
    clear_has_type();
  }
}
inline ::bgs::protocol::EntityIdRestriction* RepeatedFieldRestriction::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.RepeatedFieldRestriction.entity_id)
  if (_internal_has_entity_id()) {
    clear_has_type();
      ::bgs::protocol::EntityIdRestriction* temp = type_.entity_id_;
    type_.entity_id_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bgs::protocol::EntityIdRestriction& RepeatedFieldRestriction::_internal_entity_id() const {
  return _internal_has_entity_id()
      ? *type_.entity_id_
      : *reinterpret_cast< ::bgs::protocol::EntityIdRestriction*>(&::bgs::protocol::_EntityIdRestriction_default_instance_);
}
inline const ::bgs::protocol::EntityIdRestriction& RepeatedFieldRestriction::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.RepeatedFieldRestriction.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityIdRestriction* RepeatedFieldRestriction::_internal_mutable_entity_id() {
  if (!_internal_has_entity_id()) {
    clear_type();
    set_has_entity_id();
    type_.entity_id_ = CreateMaybeMessage< ::bgs::protocol::EntityIdRestriction >(
        GetArenaNoVirtual());
  }
  return type_.entity_id_;
}
inline ::bgs::protocol::EntityIdRestriction* RepeatedFieldRestriction::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.RepeatedFieldRestriction.entity_id)
  return _internal_mutable_entity_id();
}

inline bool RepeatedFieldRestriction::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void RepeatedFieldRestriction::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline RepeatedFieldRestriction::TypeCase RepeatedFieldRestriction::type_case() const {
  return RepeatedFieldRestriction::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SignedFieldRestriction

// optional .bgs.protocol.SignedIntRange limits = 1;
inline bool SignedFieldRestriction::_internal_has_limits() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || limits_ != nullptr);
  return value;
}
inline bool SignedFieldRestriction::has_limits() const {
  return _internal_has_limits();
}
inline const ::bgs::protocol::SignedIntRange& SignedFieldRestriction::_internal_limits() const {
  const ::bgs::protocol::SignedIntRange* p = limits_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::SignedIntRange*>(
      &::bgs::protocol::_SignedIntRange_default_instance_);
}
inline const ::bgs::protocol::SignedIntRange& SignedFieldRestriction::limits() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.SignedFieldRestriction.limits)
  return _internal_limits();
}
inline ::bgs::protocol::SignedIntRange* SignedFieldRestriction::release_limits() {
  // @@protoc_insertion_point(field_release:bgs.protocol.SignedFieldRestriction.limits)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::SignedIntRange* temp = limits_;
  limits_ = nullptr;
  return temp;
}
inline ::bgs::protocol::SignedIntRange* SignedFieldRestriction::_internal_mutable_limits() {
  _has_bits_[0] |= 0x00000001u;
  if (limits_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::SignedIntRange>(GetArenaNoVirtual());
    limits_ = p;
  }
  return limits_;
}
inline ::bgs::protocol::SignedIntRange* SignedFieldRestriction::mutable_limits() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.SignedFieldRestriction.limits)
  return _internal_mutable_limits();
}
inline void SignedFieldRestriction::set_allocated_limits(::bgs::protocol::SignedIntRange* limits) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(limits_);
  }
  if (limits) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      limits = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, limits, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  limits_ = limits;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.SignedFieldRestriction.limits)
}

// repeated sint64 exclude = 2;
inline int SignedFieldRestriction::_internal_exclude_size() const {
  return exclude_.size();
}
inline int SignedFieldRestriction::exclude_size() const {
  return _internal_exclude_size();
}
inline void SignedFieldRestriction::clear_exclude() {
  exclude_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SignedFieldRestriction::_internal_exclude(int index) const {
  return exclude_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SignedFieldRestriction::exclude(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.SignedFieldRestriction.exclude)
  return _internal_exclude(index);
}
inline void SignedFieldRestriction::set_exclude(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  exclude_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.SignedFieldRestriction.exclude)
}
inline void SignedFieldRestriction::_internal_add_exclude(::PROTOBUF_NAMESPACE_ID::int64 value) {
  exclude_.Add(value);
}
inline void SignedFieldRestriction::add_exclude(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_exclude(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.SignedFieldRestriction.exclude)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
SignedFieldRestriction::_internal_exclude() const {
  return exclude_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
SignedFieldRestriction::exclude() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.SignedFieldRestriction.exclude)
  return _internal_exclude();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
SignedFieldRestriction::_internal_mutable_exclude() {
  return &exclude_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
SignedFieldRestriction::mutable_exclude() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.SignedFieldRestriction.exclude)
  return _internal_mutable_exclude();
}

// -------------------------------------------------------------------

// UnsignedFieldRestriction

// optional .bgs.protocol.UnsignedIntRange limits = 1;
inline bool UnsignedFieldRestriction::_internal_has_limits() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || limits_ != nullptr);
  return value;
}
inline bool UnsignedFieldRestriction::has_limits() const {
  return _internal_has_limits();
}
inline const ::bgs::protocol::UnsignedIntRange& UnsignedFieldRestriction::_internal_limits() const {
  const ::bgs::protocol::UnsignedIntRange* p = limits_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::UnsignedIntRange*>(
      &::bgs::protocol::_UnsignedIntRange_default_instance_);
}
inline const ::bgs::protocol::UnsignedIntRange& UnsignedFieldRestriction::limits() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.UnsignedFieldRestriction.limits)
  return _internal_limits();
}
inline ::bgs::protocol::UnsignedIntRange* UnsignedFieldRestriction::release_limits() {
  // @@protoc_insertion_point(field_release:bgs.protocol.UnsignedFieldRestriction.limits)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::UnsignedIntRange* temp = limits_;
  limits_ = nullptr;
  return temp;
}
inline ::bgs::protocol::UnsignedIntRange* UnsignedFieldRestriction::_internal_mutable_limits() {
  _has_bits_[0] |= 0x00000001u;
  if (limits_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::UnsignedIntRange>(GetArenaNoVirtual());
    limits_ = p;
  }
  return limits_;
}
inline ::bgs::protocol::UnsignedIntRange* UnsignedFieldRestriction::mutable_limits() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.UnsignedFieldRestriction.limits)
  return _internal_mutable_limits();
}
inline void UnsignedFieldRestriction::set_allocated_limits(::bgs::protocol::UnsignedIntRange* limits) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(limits_);
  }
  if (limits) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      limits = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, limits, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  limits_ = limits;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.UnsignedFieldRestriction.limits)
}

// repeated uint64 exclude = 2;
inline int UnsignedFieldRestriction::_internal_exclude_size() const {
  return exclude_.size();
}
inline int UnsignedFieldRestriction::exclude_size() const {
  return _internal_exclude_size();
}
inline void UnsignedFieldRestriction::clear_exclude() {
  exclude_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsignedFieldRestriction::_internal_exclude(int index) const {
  return exclude_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsignedFieldRestriction::exclude(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.UnsignedFieldRestriction.exclude)
  return _internal_exclude(index);
}
inline void UnsignedFieldRestriction::set_exclude(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  exclude_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.UnsignedFieldRestriction.exclude)
}
inline void UnsignedFieldRestriction::_internal_add_exclude(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  exclude_.Add(value);
}
inline void UnsignedFieldRestriction::add_exclude(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_exclude(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.UnsignedFieldRestriction.exclude)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
UnsignedFieldRestriction::_internal_exclude() const {
  return exclude_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
UnsignedFieldRestriction::exclude() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.UnsignedFieldRestriction.exclude)
  return _internal_exclude();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
UnsignedFieldRestriction::_internal_mutable_exclude() {
  return &exclude_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
UnsignedFieldRestriction::mutable_exclude() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.UnsignedFieldRestriction.exclude)
  return _internal_mutable_exclude();
}

// -------------------------------------------------------------------

// FloatFieldRestriction

// optional .bgs.protocol.FloatRange limits = 1;
inline bool FloatFieldRestriction::_internal_has_limits() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || limits_ != nullptr);
  return value;
}
inline bool FloatFieldRestriction::has_limits() const {
  return _internal_has_limits();
}
inline const ::bgs::protocol::FloatRange& FloatFieldRestriction::_internal_limits() const {
  const ::bgs::protocol::FloatRange* p = limits_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::FloatRange*>(
      &::bgs::protocol::_FloatRange_default_instance_);
}
inline const ::bgs::protocol::FloatRange& FloatFieldRestriction::limits() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FloatFieldRestriction.limits)
  return _internal_limits();
}
inline ::bgs::protocol::FloatRange* FloatFieldRestriction::release_limits() {
  // @@protoc_insertion_point(field_release:bgs.protocol.FloatFieldRestriction.limits)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::FloatRange* temp = limits_;
  limits_ = nullptr;
  return temp;
}
inline ::bgs::protocol::FloatRange* FloatFieldRestriction::_internal_mutable_limits() {
  _has_bits_[0] |= 0x00000001u;
  if (limits_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::FloatRange>(GetArenaNoVirtual());
    limits_ = p;
  }
  return limits_;
}
inline ::bgs::protocol::FloatRange* FloatFieldRestriction::mutable_limits() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.FloatFieldRestriction.limits)
  return _internal_mutable_limits();
}
inline void FloatFieldRestriction::set_allocated_limits(::bgs::protocol::FloatRange* limits) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(limits_);
  }
  if (limits) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      limits = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, limits, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  limits_ = limits;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.FloatFieldRestriction.limits)
}

// repeated float exclude = 2;
inline int FloatFieldRestriction::_internal_exclude_size() const {
  return exclude_.size();
}
inline int FloatFieldRestriction::exclude_size() const {
  return _internal_exclude_size();
}
inline void FloatFieldRestriction::clear_exclude() {
  exclude_.Clear();
}
inline float FloatFieldRestriction::_internal_exclude(int index) const {
  return exclude_.Get(index);
}
inline float FloatFieldRestriction::exclude(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FloatFieldRestriction.exclude)
  return _internal_exclude(index);
}
inline void FloatFieldRestriction::set_exclude(int index, float value) {
  exclude_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.FloatFieldRestriction.exclude)
}
inline void FloatFieldRestriction::_internal_add_exclude(float value) {
  exclude_.Add(value);
}
inline void FloatFieldRestriction::add_exclude(float value) {
  _internal_add_exclude(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.FloatFieldRestriction.exclude)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
FloatFieldRestriction::_internal_exclude() const {
  return exclude_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
FloatFieldRestriction::exclude() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.FloatFieldRestriction.exclude)
  return _internal_exclude();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
FloatFieldRestriction::_internal_mutable_exclude() {
  return &exclude_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
FloatFieldRestriction::mutable_exclude() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.FloatFieldRestriction.exclude)
  return _internal_mutable_exclude();
}

// -------------------------------------------------------------------

// StringFieldRestriction

// optional .bgs.protocol.UnsignedIntRange size = 1;
inline bool StringFieldRestriction::_internal_has_size() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || size_ != nullptr);
  return value;
}
inline bool StringFieldRestriction::has_size() const {
  return _internal_has_size();
}
inline const ::bgs::protocol::UnsignedIntRange& StringFieldRestriction::_internal_size() const {
  const ::bgs::protocol::UnsignedIntRange* p = size_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::UnsignedIntRange*>(
      &::bgs::protocol::_UnsignedIntRange_default_instance_);
}
inline const ::bgs::protocol::UnsignedIntRange& StringFieldRestriction::size() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.StringFieldRestriction.size)
  return _internal_size();
}
inline ::bgs::protocol::UnsignedIntRange* StringFieldRestriction::release_size() {
  // @@protoc_insertion_point(field_release:bgs.protocol.StringFieldRestriction.size)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::UnsignedIntRange* temp = size_;
  size_ = nullptr;
  return temp;
}
inline ::bgs::protocol::UnsignedIntRange* StringFieldRestriction::_internal_mutable_size() {
  _has_bits_[0] |= 0x00000001u;
  if (size_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::UnsignedIntRange>(GetArenaNoVirtual());
    size_ = p;
  }
  return size_;
}
inline ::bgs::protocol::UnsignedIntRange* StringFieldRestriction::mutable_size() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.StringFieldRestriction.size)
  return _internal_mutable_size();
}
inline void StringFieldRestriction::set_allocated_size(::bgs::protocol::UnsignedIntRange* size) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(size_);
  }
  if (size) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      size = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, size, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  size_ = size;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.StringFieldRestriction.size)
}

// repeated string exclude = 2;
inline int StringFieldRestriction::_internal_exclude_size() const {
  return exclude_.size();
}
inline int StringFieldRestriction::exclude_size() const {
  return _internal_exclude_size();
}
inline void StringFieldRestriction::clear_exclude() {
  exclude_.Clear();
}
inline std::string* StringFieldRestriction::add_exclude() {
  // @@protoc_insertion_point(field_add_mutable:bgs.protocol.StringFieldRestriction.exclude)
  return _internal_add_exclude();
}
inline const std::string& StringFieldRestriction::_internal_exclude(int index) const {
  return exclude_.Get(index);
}
inline const std::string& StringFieldRestriction::exclude(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.StringFieldRestriction.exclude)
  return _internal_exclude(index);
}
inline std::string* StringFieldRestriction::mutable_exclude(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.StringFieldRestriction.exclude)
  return exclude_.Mutable(index);
}
inline void StringFieldRestriction::set_exclude(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:bgs.protocol.StringFieldRestriction.exclude)
  exclude_.Mutable(index)->assign(value);
}
inline void StringFieldRestriction::set_exclude(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:bgs.protocol.StringFieldRestriction.exclude)
  exclude_.Mutable(index)->assign(std::move(value));
}
inline void StringFieldRestriction::set_exclude(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  exclude_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bgs.protocol.StringFieldRestriction.exclude)
}
inline void StringFieldRestriction::set_exclude(int index, const char* value, size_t size) {
  exclude_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bgs.protocol.StringFieldRestriction.exclude)
}
inline std::string* StringFieldRestriction::_internal_add_exclude() {
  return exclude_.Add();
}
inline void StringFieldRestriction::add_exclude(const std::string& value) {
  exclude_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.StringFieldRestriction.exclude)
}
inline void StringFieldRestriction::add_exclude(std::string&& value) {
  exclude_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:bgs.protocol.StringFieldRestriction.exclude)
}
inline void StringFieldRestriction::add_exclude(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  exclude_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bgs.protocol.StringFieldRestriction.exclude)
}
inline void StringFieldRestriction::add_exclude(const char* value, size_t size) {
  exclude_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bgs.protocol.StringFieldRestriction.exclude)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
StringFieldRestriction::exclude() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.StringFieldRestriction.exclude)
  return exclude_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
StringFieldRestriction::mutable_exclude() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.StringFieldRestriction.exclude)
  return &exclude_;
}

// -------------------------------------------------------------------

// EntityIdRestriction

// optional bool needed = 1;
inline bool EntityIdRestriction::_internal_has_needed() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool EntityIdRestriction::has_needed() const {
  return _internal_has_needed();
}
inline void EntityIdRestriction::clear_needed() {
  needed_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool EntityIdRestriction::_internal_needed() const {
  return needed_;
}
inline bool EntityIdRestriction::needed() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.EntityIdRestriction.needed)
  return _internal_needed();
}
inline void EntityIdRestriction::_internal_set_needed(bool value) {
  _has_bits_[0] |= 0x00000001u;
  needed_ = value;
}
inline void EntityIdRestriction::set_needed(bool value) {
  _internal_set_needed(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.EntityIdRestriction.needed)
}

// optional .bgs.protocol.EntityIdRestriction.Kind kind = 2 [default = ANY];
inline bool EntityIdRestriction::_internal_has_kind() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool EntityIdRestriction::has_kind() const {
  return _internal_has_kind();
}
inline void EntityIdRestriction::clear_kind() {
  kind_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::bgs::protocol::EntityIdRestriction_Kind EntityIdRestriction::_internal_kind() const {
  return static_cast< ::bgs::protocol::EntityIdRestriction_Kind >(kind_);
}
inline ::bgs::protocol::EntityIdRestriction_Kind EntityIdRestriction::kind() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.EntityIdRestriction.kind)
  return _internal_kind();
}
inline void EntityIdRestriction::_internal_set_kind(::bgs::protocol::EntityIdRestriction_Kind value) {
  assert(::bgs::protocol::EntityIdRestriction_Kind_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  kind_ = value;
}
inline void EntityIdRestriction::set_kind(::bgs::protocol::EntityIdRestriction_Kind value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.EntityIdRestriction.kind)
}

// -------------------------------------------------------------------

// MessageFieldRestriction

// optional bool needed = 1;
inline bool MessageFieldRestriction::_internal_has_needed() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MessageFieldRestriction::has_needed() const {
  return _internal_has_needed();
}
inline void MessageFieldRestriction::clear_needed() {
  needed_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MessageFieldRestriction::_internal_needed() const {
  return needed_;
}
inline bool MessageFieldRestriction::needed() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.MessageFieldRestriction.needed)
  return _internal_needed();
}
inline void MessageFieldRestriction::_internal_set_needed(bool value) {
  _has_bits_[0] |= 0x00000001u;
  needed_ = value;
}
inline void MessageFieldRestriction::set_needed(bool value) {
  _internal_set_needed(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.MessageFieldRestriction.needed)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace bgs

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::bgs::protocol::EntityIdRestriction_Kind> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bgs::protocol::EntityIdRestriction_Kind>() {
  return ::bgs::protocol::EntityIdRestriction_Kind_descriptor();
}
template <> struct is_proto_enum< ::bgs::protocol::LogOption> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bgs::protocol::LogOption>() {
  return ::bgs::protocol::LogOption_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2ffield_5foptions_2eproto
