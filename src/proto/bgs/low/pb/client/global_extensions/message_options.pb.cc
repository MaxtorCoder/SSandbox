// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/global_extensions/message_options.proto

#include "bgs/low/pb/client/global_extensions/message_options.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BGSMessageOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto;
namespace bgs {
namespace protocol {
class BGSMessageOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BGSMessageOptions> _instance;
} _BGSMessageOptions_default_instance_;
}  // namespace protocol
}  // namespace bgs
static void InitDefaultsscc_info_BGSMessageOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bgs::protocol::_BGSMessageOptions_default_instance_;
    new (ptr) ::bgs::protocol::BGSMessageOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bgs::protocol::BGSMessageOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BGSMessageOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BGSMessageOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::BGSMessageOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::BGSMessageOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::BGSMessageOptions, custom_select_shard_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::BGSMessageOptions, custom_validator_),
  PROTOBUF_FIELD_OFFSET(::bgs::protocol::BGSMessageOptions, client_id_fanout_),
  0,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::bgs::protocol::BGSMessageOptions)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bgs::protocol::_BGSMessageOptions_default_instance_),
};

const char descriptor_table_protodef_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n9bgs/low/pb/client/global_extensions/me"
  "ssage_options.proto\022\014bgs.protocol\032 googl"
  "e/protobuf/descriptor.proto\"d\n\021BGSMessag"
  "eOptions\022\033\n\023custom_select_shard\030\001 \001(\010\022\030\n"
  "\020custom_validator\030\002 \001(\010\022\030\n\020client_id_fan"
  "out\030\003 \001(\010:[\n\017message_options\022\037.google.pr"
  "otobuf.MessageOptions\030\220\277\005 \001(\0132\037.bgs.prot"
  "ocol.BGSMessageOptionsB$\n\rbnet.protocolB"
  "\023MessageOptionsProto"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto_sccs[1] = {
  &scc_info_BGSMessageOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto_once;
static bool descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto = {
  &descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto_initialized, descriptor_table_protodef_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto, "bgs/low/pb/client/global_extensions/message_options.proto", 340,
  &descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto_once, descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto_sccs, descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto::offsets,
  file_level_metadata_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto, 1, file_level_enum_descriptors_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto, file_level_service_descriptors_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto)), true);
namespace bgs {
namespace protocol {

// ===================================================================

void BGSMessageOptions::InitAsDefaultInstance() {
}
class BGSMessageOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<BGSMessageOptions>()._has_bits_);
  static void set_has_custom_select_shard(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_custom_validator(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_client_id_fanout(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

BGSMessageOptions::BGSMessageOptions()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bgs.protocol.BGSMessageOptions)
}
BGSMessageOptions::BGSMessageOptions(const BGSMessageOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&custom_select_shard_, &from.custom_select_shard_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_id_fanout_) -
    reinterpret_cast<char*>(&custom_select_shard_)) + sizeof(client_id_fanout_));
  // @@protoc_insertion_point(copy_constructor:bgs.protocol.BGSMessageOptions)
}

void BGSMessageOptions::SharedCtor() {
  ::memset(&custom_select_shard_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_id_fanout_) -
      reinterpret_cast<char*>(&custom_select_shard_)) + sizeof(client_id_fanout_));
}

BGSMessageOptions::~BGSMessageOptions() {
  // @@protoc_insertion_point(destructor:bgs.protocol.BGSMessageOptions)
  SharedDtor();
}

void BGSMessageOptions::SharedDtor() {
}

void BGSMessageOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BGSMessageOptions& BGSMessageOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BGSMessageOptions_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2fmessage_5foptions_2eproto.base);
  return *internal_default_instance();
}


void BGSMessageOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:bgs.protocol.BGSMessageOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&custom_select_shard_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_id_fanout_) -
      reinterpret_cast<char*>(&custom_select_shard_)) + sizeof(client_id_fanout_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* BGSMessageOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool custom_select_shard = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_custom_select_shard(&has_bits);
          custom_select_shard_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool custom_validator = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_custom_validator(&has_bits);
          custom_validator_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool client_id_fanout = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_client_id_fanout(&has_bits);
          client_id_fanout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BGSMessageOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bgs.protocol.BGSMessageOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool custom_select_shard = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_custom_select_shard(), target);
  }

  // optional bool custom_validator = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_custom_validator(), target);
  }

  // optional bool client_id_fanout = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_client_id_fanout(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bgs.protocol.BGSMessageOptions)
  return target;
}

size_t BGSMessageOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bgs.protocol.BGSMessageOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool custom_select_shard = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool custom_validator = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool client_id_fanout = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BGSMessageOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bgs.protocol.BGSMessageOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const BGSMessageOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BGSMessageOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bgs.protocol.BGSMessageOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bgs.protocol.BGSMessageOptions)
    MergeFrom(*source);
  }
}

void BGSMessageOptions::MergeFrom(const BGSMessageOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bgs.protocol.BGSMessageOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      custom_select_shard_ = from.custom_select_shard_;
    }
    if (cached_has_bits & 0x00000002u) {
      custom_validator_ = from.custom_validator_;
    }
    if (cached_has_bits & 0x00000004u) {
      client_id_fanout_ = from.client_id_fanout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BGSMessageOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bgs.protocol.BGSMessageOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BGSMessageOptions::CopyFrom(const BGSMessageOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bgs.protocol.BGSMessageOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BGSMessageOptions::IsInitialized() const {
  return true;
}

void BGSMessageOptions::InternalSwap(BGSMessageOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(custom_select_shard_, other->custom_select_shard_);
  swap(custom_validator_, other->custom_validator_);
  swap(client_id_fanout_, other->client_id_fanout_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BGSMessageOptions::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::bgs::protocol::BGSMessageOptions >, 11, false >
  message_options(kMessageOptionsFieldNumber, *::bgs::protocol::BGSMessageOptions::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bgs::protocol::BGSMessageOptions* Arena::CreateMaybeMessage< ::bgs::protocol::BGSMessageOptions >(Arena* arena) {
  return Arena::CreateInternal< ::bgs::protocol::BGSMessageOptions >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
