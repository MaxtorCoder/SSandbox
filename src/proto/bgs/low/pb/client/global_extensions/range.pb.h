// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/global_extensions/range.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto;
namespace bgs {
namespace protocol {
class FloatRange;
class FloatRangeDefaultTypeInternal;
extern FloatRangeDefaultTypeInternal _FloatRange_default_instance_;
class SignedIntRange;
class SignedIntRangeDefaultTypeInternal;
extern SignedIntRangeDefaultTypeInternal _SignedIntRange_default_instance_;
class UnsignedIntRange;
class UnsignedIntRangeDefaultTypeInternal;
extern UnsignedIntRangeDefaultTypeInternal _UnsignedIntRange_default_instance_;
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> ::bgs::protocol::FloatRange* Arena::CreateMaybeMessage<::bgs::protocol::FloatRange>(Arena*);
template<> ::bgs::protocol::SignedIntRange* Arena::CreateMaybeMessage<::bgs::protocol::SignedIntRange>(Arena*);
template<> ::bgs::protocol::UnsignedIntRange* Arena::CreateMaybeMessage<::bgs::protocol::UnsignedIntRange>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bgs {
namespace protocol {

// ===================================================================

class UnsignedIntRange :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.UnsignedIntRange) */ {
 public:
  UnsignedIntRange();
  virtual ~UnsignedIntRange();

  UnsignedIntRange(const UnsignedIntRange& from);
  UnsignedIntRange(UnsignedIntRange&& from) noexcept
    : UnsignedIntRange() {
    *this = ::std::move(from);
  }

  inline UnsignedIntRange& operator=(const UnsignedIntRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsignedIntRange& operator=(UnsignedIntRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsignedIntRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsignedIntRange* internal_default_instance() {
    return reinterpret_cast<const UnsignedIntRange*>(
               &_UnsignedIntRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UnsignedIntRange& a, UnsignedIntRange& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsignedIntRange* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsignedIntRange* New() const final {
    return CreateMaybeMessage<UnsignedIntRange>(nullptr);
  }

  UnsignedIntRange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsignedIntRange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsignedIntRange& from);
  void MergeFrom(const UnsignedIntRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsignedIntRange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.UnsignedIntRange";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // optional uint64 min = 1;
  bool has_min() const;
  private:
  bool _internal_has_min() const;
  public:
  void clear_min();
  ::PROTOBUF_NAMESPACE_ID::uint64 min() const;
  void set_min(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_min() const;
  void _internal_set_min(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 max = 2;
  bool has_max() const;
  private:
  bool _internal_has_max() const;
  public:
  void clear_max();
  ::PROTOBUF_NAMESPACE_ID::uint64 max() const;
  void set_max(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_max() const;
  void _internal_set_max(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.UnsignedIntRange)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 min_;
  ::PROTOBUF_NAMESPACE_ID::uint64 max_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto;
};
// -------------------------------------------------------------------

class SignedIntRange :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.SignedIntRange) */ {
 public:
  SignedIntRange();
  virtual ~SignedIntRange();

  SignedIntRange(const SignedIntRange& from);
  SignedIntRange(SignedIntRange&& from) noexcept
    : SignedIntRange() {
    *this = ::std::move(from);
  }

  inline SignedIntRange& operator=(const SignedIntRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignedIntRange& operator=(SignedIntRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SignedIntRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignedIntRange* internal_default_instance() {
    return reinterpret_cast<const SignedIntRange*>(
               &_SignedIntRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SignedIntRange& a, SignedIntRange& b) {
    a.Swap(&b);
  }
  inline void Swap(SignedIntRange* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SignedIntRange* New() const final {
    return CreateMaybeMessage<SignedIntRange>(nullptr);
  }

  SignedIntRange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SignedIntRange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SignedIntRange& from);
  void MergeFrom(const SignedIntRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignedIntRange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.SignedIntRange";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // optional int64 min = 1;
  bool has_min() const;
  private:
  bool _internal_has_min() const;
  public:
  void clear_min();
  ::PROTOBUF_NAMESPACE_ID::int64 min() const;
  void set_min(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_min() const;
  void _internal_set_min(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 max = 2;
  bool has_max() const;
  private:
  bool _internal_has_max() const;
  public:
  void clear_max();
  ::PROTOBUF_NAMESPACE_ID::int64 max() const;
  void set_max(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_max() const;
  void _internal_set_max(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.SignedIntRange)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 min_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto;
};
// -------------------------------------------------------------------

class FloatRange :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.FloatRange) */ {
 public:
  FloatRange();
  virtual ~FloatRange();

  FloatRange(const FloatRange& from);
  FloatRange(FloatRange&& from) noexcept
    : FloatRange() {
    *this = ::std::move(from);
  }

  inline FloatRange& operator=(const FloatRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatRange& operator=(FloatRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FloatRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatRange* internal_default_instance() {
    return reinterpret_cast<const FloatRange*>(
               &_FloatRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FloatRange& a, FloatRange& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatRange* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FloatRange* New() const final {
    return CreateMaybeMessage<FloatRange>(nullptr);
  }

  FloatRange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FloatRange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FloatRange& from);
  void MergeFrom(const FloatRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatRange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.FloatRange";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // optional float min = 1;
  bool has_min() const;
  private:
  bool _internal_has_min() const;
  public:
  void clear_min();
  float min() const;
  void set_min(float value);
  private:
  float _internal_min() const;
  void _internal_set_min(float value);
  public:

  // optional float max = 2;
  bool has_max() const;
  private:
  bool _internal_has_max() const;
  public:
  void clear_max();
  float max() const;
  void set_max(float value);
  private:
  float _internal_max() const;
  void _internal_set_max(float value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.FloatRange)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float min_;
  float max_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UnsignedIntRange

// optional uint64 min = 1;
inline bool UnsignedIntRange::_internal_has_min() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UnsignedIntRange::has_min() const {
  return _internal_has_min();
}
inline void UnsignedIntRange::clear_min() {
  min_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsignedIntRange::_internal_min() const {
  return min_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsignedIntRange::min() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.UnsignedIntRange.min)
  return _internal_min();
}
inline void UnsignedIntRange::_internal_set_min(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  min_ = value;
}
inline void UnsignedIntRange::set_min(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.UnsignedIntRange.min)
}

// optional uint64 max = 2;
inline bool UnsignedIntRange::_internal_has_max() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UnsignedIntRange::has_max() const {
  return _internal_has_max();
}
inline void UnsignedIntRange::clear_max() {
  max_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsignedIntRange::_internal_max() const {
  return max_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsignedIntRange::max() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.UnsignedIntRange.max)
  return _internal_max();
}
inline void UnsignedIntRange::_internal_set_max(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  max_ = value;
}
inline void UnsignedIntRange::set_max(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.UnsignedIntRange.max)
}

// -------------------------------------------------------------------

// SignedIntRange

// optional int64 min = 1;
inline bool SignedIntRange::_internal_has_min() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SignedIntRange::has_min() const {
  return _internal_has_min();
}
inline void SignedIntRange::clear_min() {
  min_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SignedIntRange::_internal_min() const {
  return min_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SignedIntRange::min() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.SignedIntRange.min)
  return _internal_min();
}
inline void SignedIntRange::_internal_set_min(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  min_ = value;
}
inline void SignedIntRange::set_min(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.SignedIntRange.min)
}

// optional int64 max = 2;
inline bool SignedIntRange::_internal_has_max() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SignedIntRange::has_max() const {
  return _internal_has_max();
}
inline void SignedIntRange::clear_max() {
  max_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SignedIntRange::_internal_max() const {
  return max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SignedIntRange::max() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.SignedIntRange.max)
  return _internal_max();
}
inline void SignedIntRange::_internal_set_max(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  max_ = value;
}
inline void SignedIntRange::set_max(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.SignedIntRange.max)
}

// -------------------------------------------------------------------

// FloatRange

// optional float min = 1;
inline bool FloatRange::_internal_has_min() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool FloatRange::has_min() const {
  return _internal_has_min();
}
inline void FloatRange::clear_min() {
  min_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float FloatRange::_internal_min() const {
  return min_;
}
inline float FloatRange::min() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FloatRange.min)
  return _internal_min();
}
inline void FloatRange::_internal_set_min(float value) {
  _has_bits_[0] |= 0x00000001u;
  min_ = value;
}
inline void FloatRange::set_min(float value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.FloatRange.min)
}

// optional float max = 2;
inline bool FloatRange::_internal_has_max() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool FloatRange::has_max() const {
  return _internal_has_max();
}
inline void FloatRange::clear_max() {
  max_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float FloatRange::_internal_max() const {
  return max_;
}
inline float FloatRange::max() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.FloatRange.max)
  return _internal_max();
}
inline void FloatRange::_internal_set_max(float value) {
  _has_bits_[0] |= 0x00000002u;
  max_ = value;
}
inline void FloatRange::set_max(float value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.FloatRange.max)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fglobal_5fextensions_2frange_2eproto
