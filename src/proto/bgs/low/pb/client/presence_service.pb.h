// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/presence_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "bgs/low/pb/client/entity_types.pb.h"
#include "bgs/low/pb/client/presence_types.pb.h"
#include "bgs/low/pb/client/rpc_types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
namespace bgs {
namespace protocol {
namespace presence {
namespace v1 {
class BatchSubscribeRequest;
class BatchSubscribeRequestDefaultTypeInternal;
extern BatchSubscribeRequestDefaultTypeInternal _BatchSubscribeRequest_default_instance_;
class BatchSubscribeResponse;
class BatchSubscribeResponseDefaultTypeInternal;
extern BatchSubscribeResponseDefaultTypeInternal _BatchSubscribeResponse_default_instance_;
class BatchUnsubscribeRequest;
class BatchUnsubscribeRequestDefaultTypeInternal;
extern BatchUnsubscribeRequestDefaultTypeInternal _BatchUnsubscribeRequest_default_instance_;
class OwnershipRequest;
class OwnershipRequestDefaultTypeInternal;
extern OwnershipRequestDefaultTypeInternal _OwnershipRequest_default_instance_;
class QueryRequest;
class QueryRequestDefaultTypeInternal;
extern QueryRequestDefaultTypeInternal _QueryRequest_default_instance_;
class QueryResponse;
class QueryResponseDefaultTypeInternal;
extern QueryResponseDefaultTypeInternal _QueryResponse_default_instance_;
class SubscribeNotificationRequest;
class SubscribeNotificationRequestDefaultTypeInternal;
extern SubscribeNotificationRequestDefaultTypeInternal _SubscribeNotificationRequest_default_instance_;
class SubscribeRequest;
class SubscribeRequestDefaultTypeInternal;
extern SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;
class SubscribeResult;
class SubscribeResultDefaultTypeInternal;
extern SubscribeResultDefaultTypeInternal _SubscribeResult_default_instance_;
class UnsubscribeRequest;
class UnsubscribeRequestDefaultTypeInternal;
extern UnsubscribeRequestDefaultTypeInternal _UnsubscribeRequest_default_instance_;
class UpdateRequest;
class UpdateRequestDefaultTypeInternal;
extern UpdateRequestDefaultTypeInternal _UpdateRequest_default_instance_;
}  // namespace v1
}  // namespace presence
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> ::bgs::protocol::presence::v1::BatchSubscribeRequest* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::BatchSubscribeRequest>(Arena*);
template<> ::bgs::protocol::presence::v1::BatchSubscribeResponse* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::BatchSubscribeResponse>(Arena*);
template<> ::bgs::protocol::presence::v1::BatchUnsubscribeRequest* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::BatchUnsubscribeRequest>(Arena*);
template<> ::bgs::protocol::presence::v1::OwnershipRequest* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::OwnershipRequest>(Arena*);
template<> ::bgs::protocol::presence::v1::QueryRequest* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::QueryRequest>(Arena*);
template<> ::bgs::protocol::presence::v1::QueryResponse* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::QueryResponse>(Arena*);
template<> ::bgs::protocol::presence::v1::SubscribeNotificationRequest* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::SubscribeNotificationRequest>(Arena*);
template<> ::bgs::protocol::presence::v1::SubscribeRequest* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::SubscribeRequest>(Arena*);
template<> ::bgs::protocol::presence::v1::SubscribeResult* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::SubscribeResult>(Arena*);
template<> ::bgs::protocol::presence::v1::UnsubscribeRequest* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::UnsubscribeRequest>(Arena*);
template<> ::bgs::protocol::presence::v1::UpdateRequest* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::UpdateRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bgs {
namespace protocol {
namespace presence {
namespace v1 {

// ===================================================================

class SubscribeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.SubscribeRequest) */ {
 public:
  SubscribeRequest();
  virtual ~SubscribeRequest();

  SubscribeRequest(const SubscribeRequest& from);
  SubscribeRequest(SubscribeRequest&& from) noexcept
    : SubscribeRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeRequest& operator=(SubscribeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SubscribeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeRequest*>(
               &_SubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SubscribeRequest& a, SubscribeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SubscribeRequest* New() const final {
    return CreateMaybeMessage<SubscribeRequest>(nullptr);
  }

  SubscribeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SubscribeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SubscribeRequest& from);
  void MergeFrom(const SubscribeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.SubscribeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProgramFieldNumber = 4,
    kKeyFieldNumber = 6,
    kAgentIdFieldNumber = 1,
    kEntityIdFieldNumber = 2,
    kObjectIdFieldNumber = 3,
  };
  // repeated fixed32 program = 4 [(.bgs.protocol.valid) = {
  int program_size() const;
  private:
  int _internal_program_size() const;
  public:
  void clear_program();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_program() const;
  void _internal_add_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_program();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 program(int index) const;
  void set_program(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      program() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_program();

  // repeated .bgs.protocol.presence.v1.FieldKey key = 6 [(.bgs.protocol.valid) = {
  int key_size() const;
  private:
  int _internal_key_size() const;
  public:
  void clear_key();
  ::bgs::protocol::presence::v1::FieldKey* mutable_key(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >*
      mutable_key();
  private:
  const ::bgs::protocol::presence::v1::FieldKey& _internal_key(int index) const;
  ::bgs::protocol::presence::v1::FieldKey* _internal_add_key();
  public:
  const ::bgs::protocol::presence::v1::FieldKey& key(int index) const;
  ::bgs::protocol::presence::v1::FieldKey* add_key();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >&
      key() const;

  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // required .bgs.protocol.EntityId entity_id = 2;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityId& entity_id() const;
  ::bgs::protocol::EntityId* release_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityId* entity_id);
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_entity_id();
  public:

  // required uint64 object_id = 3;
  bool has_object_id() const;
  private:
  bool _internal_has_object_id() const;
  public:
  void clear_object_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id() const;
  void set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_object_id() const;
  void _internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.SubscribeRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > program_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey > key_;
  ::bgs::protocol::EntityId* agent_id_;
  ::bgs::protocol::EntityId* entity_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SubscribeNotificationRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.SubscribeNotificationRequest) */ {
 public:
  SubscribeNotificationRequest();
  virtual ~SubscribeNotificationRequest();

  SubscribeNotificationRequest(const SubscribeNotificationRequest& from);
  SubscribeNotificationRequest(SubscribeNotificationRequest&& from) noexcept
    : SubscribeNotificationRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeNotificationRequest& operator=(const SubscribeNotificationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeNotificationRequest& operator=(SubscribeNotificationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SubscribeNotificationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeNotificationRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeNotificationRequest*>(
               &_SubscribeNotificationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SubscribeNotificationRequest& a, SubscribeNotificationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeNotificationRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SubscribeNotificationRequest* New() const final {
    return CreateMaybeMessage<SubscribeNotificationRequest>(nullptr);
  }

  SubscribeNotificationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SubscribeNotificationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SubscribeNotificationRequest& from);
  void MergeFrom(const SubscribeNotificationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeNotificationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.SubscribeNotificationRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
  };
  // required .bgs.protocol.EntityId entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityId& entity_id() const;
  ::bgs::protocol::EntityId* release_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityId* entity_id);
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_entity_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.SubscribeNotificationRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* entity_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// -------------------------------------------------------------------

class UnsubscribeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.UnsubscribeRequest) */ {
 public:
  UnsubscribeRequest();
  virtual ~UnsubscribeRequest();

  UnsubscribeRequest(const UnsubscribeRequest& from);
  UnsubscribeRequest(UnsubscribeRequest&& from) noexcept
    : UnsubscribeRequest() {
    *this = ::std::move(from);
  }

  inline UnsubscribeRequest& operator=(const UnsubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsubscribeRequest& operator=(UnsubscribeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsubscribeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const UnsubscribeRequest*>(
               &_UnsubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UnsubscribeRequest& a, UnsubscribeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsubscribeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsubscribeRequest* New() const final {
    return CreateMaybeMessage<UnsubscribeRequest>(nullptr);
  }

  UnsubscribeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsubscribeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsubscribeRequest& from);
  void MergeFrom(const UnsubscribeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsubscribeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.UnsubscribeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentIdFieldNumber = 1,
    kEntityIdFieldNumber = 2,
    kObjectIdFieldNumber = 3,
  };
  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // required .bgs.protocol.EntityId entity_id = 2;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityId& entity_id() const;
  ::bgs::protocol::EntityId* release_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityId* entity_id);
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_entity_id();
  public:

  // optional uint64 object_id = 3;
  bool has_object_id() const;
  private:
  bool _internal_has_object_id() const;
  public:
  void clear_object_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id() const;
  void set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_object_id() const;
  void _internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.UnsubscribeRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* agent_id_;
  ::bgs::protocol::EntityId* entity_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// -------------------------------------------------------------------

class UpdateRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.UpdateRequest) */ {
 public:
  UpdateRequest();
  virtual ~UpdateRequest();

  UpdateRequest(const UpdateRequest& from);
  UpdateRequest(UpdateRequest&& from) noexcept
    : UpdateRequest() {
    *this = ::std::move(from);
  }

  inline UpdateRequest& operator=(const UpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRequest& operator=(UpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateRequest*>(
               &_UpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UpdateRequest& a, UpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateRequest* New() const final {
    return CreateMaybeMessage<UpdateRequest>(nullptr);
  }

  UpdateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateRequest& from);
  void MergeFrom(const UpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.UpdateRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldOperationFieldNumber = 2,
    kEntityIdFieldNumber = 1,
    kAgentIdFieldNumber = 4,
    kNoCreateFieldNumber = 3,
  };
  // repeated .bgs.protocol.presence.v1.FieldOperation field_operation = 2;
  int field_operation_size() const;
  private:
  int _internal_field_operation_size() const;
  public:
  void clear_field_operation();
  ::bgs::protocol::presence::v1::FieldOperation* mutable_field_operation(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >*
      mutable_field_operation();
  private:
  const ::bgs::protocol::presence::v1::FieldOperation& _internal_field_operation(int index) const;
  ::bgs::protocol::presence::v1::FieldOperation* _internal_add_field_operation();
  public:
  const ::bgs::protocol::presence::v1::FieldOperation& field_operation(int index) const;
  ::bgs::protocol::presence::v1::FieldOperation* add_field_operation();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >&
      field_operation() const;

  // required .bgs.protocol.EntityId entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityId& entity_id() const;
  ::bgs::protocol::EntityId* release_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityId* entity_id);
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_entity_id();
  public:

  // optional .bgs.protocol.EntityId agent_id = 4;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // optional bool no_create = 3;
  bool has_no_create() const;
  private:
  bool _internal_has_no_create() const;
  public:
  void clear_no_create();
  bool no_create() const;
  void set_no_create(bool value);
  private:
  bool _internal_no_create() const;
  void _internal_set_no_create(bool value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.UpdateRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation > field_operation_;
  ::bgs::protocol::EntityId* entity_id_;
  ::bgs::protocol::EntityId* agent_id_;
  bool no_create_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// -------------------------------------------------------------------

class QueryRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.QueryRequest) */ {
 public:
  QueryRequest();
  virtual ~QueryRequest();

  QueryRequest(const QueryRequest& from);
  QueryRequest(QueryRequest&& from) noexcept
    : QueryRequest() {
    *this = ::std::move(from);
  }

  inline QueryRequest& operator=(const QueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequest& operator=(QueryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryRequest* internal_default_instance() {
    return reinterpret_cast<const QueryRequest*>(
               &_QueryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QueryRequest& a, QueryRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryRequest* New() const final {
    return CreateMaybeMessage<QueryRequest>(nullptr);
  }

  QueryRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryRequest& from);
  void MergeFrom(const QueryRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.QueryRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 2,
    kEntityIdFieldNumber = 1,
    kAgentIdFieldNumber = 3,
  };
  // repeated .bgs.protocol.presence.v1.FieldKey key = 2;
  int key_size() const;
  private:
  int _internal_key_size() const;
  public:
  void clear_key();
  ::bgs::protocol::presence::v1::FieldKey* mutable_key(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >*
      mutable_key();
  private:
  const ::bgs::protocol::presence::v1::FieldKey& _internal_key(int index) const;
  ::bgs::protocol::presence::v1::FieldKey* _internal_add_key();
  public:
  const ::bgs::protocol::presence::v1::FieldKey& key(int index) const;
  ::bgs::protocol::presence::v1::FieldKey* add_key();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >&
      key() const;

  // required .bgs.protocol.EntityId entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityId& entity_id() const;
  ::bgs::protocol::EntityId* release_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityId* entity_id);
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_entity_id();
  public:

  // optional .bgs.protocol.EntityId agent_id = 3;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.QueryRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey > key_;
  ::bgs::protocol::EntityId* entity_id_;
  ::bgs::protocol::EntityId* agent_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// -------------------------------------------------------------------

class QueryResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.QueryResponse) */ {
 public:
  QueryResponse();
  virtual ~QueryResponse();

  QueryResponse(const QueryResponse& from);
  QueryResponse(QueryResponse&& from) noexcept
    : QueryResponse() {
    *this = ::std::move(from);
  }

  inline QueryResponse& operator=(const QueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryResponse& operator=(QueryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryResponse* internal_default_instance() {
    return reinterpret_cast<const QueryResponse*>(
               &_QueryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(QueryResponse& a, QueryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryResponse* New() const final {
    return CreateMaybeMessage<QueryResponse>(nullptr);
  }

  QueryResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryResponse& from);
  void MergeFrom(const QueryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.QueryResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 2,
  };
  // repeated .bgs.protocol.presence.v1.Field field = 2;
  int field_size() const;
  private:
  int _internal_field_size() const;
  public:
  void clear_field();
  ::bgs::protocol::presence::v1::Field* mutable_field(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::Field >*
      mutable_field();
  private:
  const ::bgs::protocol::presence::v1::Field& _internal_field(int index) const;
  ::bgs::protocol::presence::v1::Field* _internal_add_field();
  public:
  const ::bgs::protocol::presence::v1::Field& field(int index) const;
  ::bgs::protocol::presence::v1::Field* add_field();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::Field >&
      field() const;

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.QueryResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::Field > field_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// -------------------------------------------------------------------

class OwnershipRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.OwnershipRequest) */ {
 public:
  OwnershipRequest();
  virtual ~OwnershipRequest();

  OwnershipRequest(const OwnershipRequest& from);
  OwnershipRequest(OwnershipRequest&& from) noexcept
    : OwnershipRequest() {
    *this = ::std::move(from);
  }

  inline OwnershipRequest& operator=(const OwnershipRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline OwnershipRequest& operator=(OwnershipRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OwnershipRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OwnershipRequest* internal_default_instance() {
    return reinterpret_cast<const OwnershipRequest*>(
               &_OwnershipRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(OwnershipRequest& a, OwnershipRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(OwnershipRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OwnershipRequest* New() const final {
    return CreateMaybeMessage<OwnershipRequest>(nullptr);
  }

  OwnershipRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OwnershipRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OwnershipRequest& from);
  void MergeFrom(const OwnershipRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OwnershipRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.OwnershipRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
    kReleaseOwnershipFieldNumber = 2,
  };
  // required .bgs.protocol.EntityId entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityId& entity_id() const;
  ::bgs::protocol::EntityId* release_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityId* entity_id);
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_entity_id();
  public:

  // optional bool release_ownership = 2;
  bool has_release_ownership() const;
  private:
  bool _internal_has_release_ownership() const;
  public:
  void clear_release_ownership();
  bool release_ownership() const;
  void set_release_ownership(bool value);
  private:
  bool _internal_release_ownership() const;
  void _internal_set_release_ownership(bool value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.OwnershipRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* entity_id_;
  bool release_ownership_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// -------------------------------------------------------------------

class BatchSubscribeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.BatchSubscribeRequest) */ {
 public:
  BatchSubscribeRequest();
  virtual ~BatchSubscribeRequest();

  BatchSubscribeRequest(const BatchSubscribeRequest& from);
  BatchSubscribeRequest(BatchSubscribeRequest&& from) noexcept
    : BatchSubscribeRequest() {
    *this = ::std::move(from);
  }

  inline BatchSubscribeRequest& operator=(const BatchSubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchSubscribeRequest& operator=(BatchSubscribeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BatchSubscribeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchSubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const BatchSubscribeRequest*>(
               &_BatchSubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(BatchSubscribeRequest& a, BatchSubscribeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BatchSubscribeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BatchSubscribeRequest* New() const final {
    return CreateMaybeMessage<BatchSubscribeRequest>(nullptr);
  }

  BatchSubscribeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BatchSubscribeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BatchSubscribeRequest& from);
  void MergeFrom(const BatchSubscribeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchSubscribeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.BatchSubscribeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 2,
    kProgramFieldNumber = 3,
    kKeyFieldNumber = 4,
    kAgentIdFieldNumber = 1,
    kObjectIdFieldNumber = 5,
  };
  // repeated .bgs.protocol.EntityId entity_id = 2 [(.bgs.protocol.valid) = {
  int entity_id_size() const;
  private:
  int _internal_entity_id_size() const;
  public:
  void clear_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >*
      mutable_entity_id();
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id(int index) const;
  ::bgs::protocol::EntityId* _internal_add_entity_id();
  public:
  const ::bgs::protocol::EntityId& entity_id(int index) const;
  ::bgs::protocol::EntityId* add_entity_id();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >&
      entity_id() const;

  // repeated fixed32 program = 3 [(.bgs.protocol.valid) = {
  int program_size() const;
  private:
  int _internal_program_size() const;
  public:
  void clear_program();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_program() const;
  void _internal_add_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_program();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 program(int index) const;
  void set_program(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      program() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_program();

  // repeated .bgs.protocol.presence.v1.FieldKey key = 4 [(.bgs.protocol.valid) = {
  int key_size() const;
  private:
  int _internal_key_size() const;
  public:
  void clear_key();
  ::bgs::protocol::presence::v1::FieldKey* mutable_key(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >*
      mutable_key();
  private:
  const ::bgs::protocol::presence::v1::FieldKey& _internal_key(int index) const;
  ::bgs::protocol::presence::v1::FieldKey* _internal_add_key();
  public:
  const ::bgs::protocol::presence::v1::FieldKey& key(int index) const;
  ::bgs::protocol::presence::v1::FieldKey* add_key();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >&
      key() const;

  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // optional uint64 object_id = 5;
  bool has_object_id() const;
  private:
  bool _internal_has_object_id() const;
  public:
  void clear_object_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id() const;
  void set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_object_id() const;
  void _internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.BatchSubscribeRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId > entity_id_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > program_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey > key_;
  ::bgs::protocol::EntityId* agent_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SubscribeResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.SubscribeResult) */ {
 public:
  SubscribeResult();
  virtual ~SubscribeResult();

  SubscribeResult(const SubscribeResult& from);
  SubscribeResult(SubscribeResult&& from) noexcept
    : SubscribeResult() {
    *this = ::std::move(from);
  }

  inline SubscribeResult& operator=(const SubscribeResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeResult& operator=(SubscribeResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SubscribeResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeResult* internal_default_instance() {
    return reinterpret_cast<const SubscribeResult*>(
               &_SubscribeResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SubscribeResult& a, SubscribeResult& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SubscribeResult* New() const final {
    return CreateMaybeMessage<SubscribeResult>(nullptr);
  }

  SubscribeResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SubscribeResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SubscribeResult& from);
  void MergeFrom(const SubscribeResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.SubscribeResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // optional .bgs.protocol.EntityId entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityId& entity_id() const;
  ::bgs::protocol::EntityId* release_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityId* entity_id);
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_entity_id();
  public:

  // optional uint32 result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.SubscribeResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::EntityId* entity_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// -------------------------------------------------------------------

class BatchSubscribeResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.BatchSubscribeResponse) */ {
 public:
  BatchSubscribeResponse();
  virtual ~BatchSubscribeResponse();

  BatchSubscribeResponse(const BatchSubscribeResponse& from);
  BatchSubscribeResponse(BatchSubscribeResponse&& from) noexcept
    : BatchSubscribeResponse() {
    *this = ::std::move(from);
  }

  inline BatchSubscribeResponse& operator=(const BatchSubscribeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchSubscribeResponse& operator=(BatchSubscribeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BatchSubscribeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchSubscribeResponse* internal_default_instance() {
    return reinterpret_cast<const BatchSubscribeResponse*>(
               &_BatchSubscribeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(BatchSubscribeResponse& a, BatchSubscribeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(BatchSubscribeResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BatchSubscribeResponse* New() const final {
    return CreateMaybeMessage<BatchSubscribeResponse>(nullptr);
  }

  BatchSubscribeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BatchSubscribeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BatchSubscribeResponse& from);
  void MergeFrom(const BatchSubscribeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchSubscribeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.BatchSubscribeResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscribeFailedFieldNumber = 1,
  };
  // repeated .bgs.protocol.presence.v1.SubscribeResult subscribe_failed = 1;
  int subscribe_failed_size() const;
  private:
  int _internal_subscribe_failed_size() const;
  public:
  void clear_subscribe_failed();
  ::bgs::protocol::presence::v1::SubscribeResult* mutable_subscribe_failed(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::SubscribeResult >*
      mutable_subscribe_failed();
  private:
  const ::bgs::protocol::presence::v1::SubscribeResult& _internal_subscribe_failed(int index) const;
  ::bgs::protocol::presence::v1::SubscribeResult* _internal_add_subscribe_failed();
  public:
  const ::bgs::protocol::presence::v1::SubscribeResult& subscribe_failed(int index) const;
  ::bgs::protocol::presence::v1::SubscribeResult* add_subscribe_failed();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::SubscribeResult >&
      subscribe_failed() const;

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.BatchSubscribeResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::SubscribeResult > subscribe_failed_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// -------------------------------------------------------------------

class BatchUnsubscribeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.BatchUnsubscribeRequest) */ {
 public:
  BatchUnsubscribeRequest();
  virtual ~BatchUnsubscribeRequest();

  BatchUnsubscribeRequest(const BatchUnsubscribeRequest& from);
  BatchUnsubscribeRequest(BatchUnsubscribeRequest&& from) noexcept
    : BatchUnsubscribeRequest() {
    *this = ::std::move(from);
  }

  inline BatchUnsubscribeRequest& operator=(const BatchUnsubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchUnsubscribeRequest& operator=(BatchUnsubscribeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BatchUnsubscribeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchUnsubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const BatchUnsubscribeRequest*>(
               &_BatchUnsubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(BatchUnsubscribeRequest& a, BatchUnsubscribeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BatchUnsubscribeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BatchUnsubscribeRequest* New() const final {
    return CreateMaybeMessage<BatchUnsubscribeRequest>(nullptr);
  }

  BatchUnsubscribeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BatchUnsubscribeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BatchUnsubscribeRequest& from);
  void MergeFrom(const BatchUnsubscribeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchUnsubscribeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.BatchUnsubscribeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 2,
    kAgentIdFieldNumber = 1,
    kObjectIdFieldNumber = 3,
  };
  // repeated .bgs.protocol.EntityId entity_id = 2 [(.bgs.protocol.valid) = {
  int entity_id_size() const;
  private:
  int _internal_entity_id_size() const;
  public:
  void clear_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >*
      mutable_entity_id();
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id(int index) const;
  ::bgs::protocol::EntityId* _internal_add_entity_id();
  public:
  const ::bgs::protocol::EntityId& entity_id(int index) const;
  ::bgs::protocol::EntityId* add_entity_id();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >&
      entity_id() const;

  // optional .bgs.protocol.EntityId agent_id = 1;
  bool has_agent_id() const;
  private:
  bool _internal_has_agent_id() const;
  public:
  void clear_agent_id();
  const ::bgs::protocol::EntityId& agent_id() const;
  ::bgs::protocol::EntityId* release_agent_id();
  ::bgs::protocol::EntityId* mutable_agent_id();
  void set_allocated_agent_id(::bgs::protocol::EntityId* agent_id);
  private:
  const ::bgs::protocol::EntityId& _internal_agent_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_agent_id();
  public:

  // optional uint64 object_id = 3;
  bool has_object_id() const;
  private:
  bool _internal_has_object_id() const;
  public:
  void clear_object_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id() const;
  void set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_object_id() const;
  void _internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.BatchUnsubscribeRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId > entity_id_;
  ::bgs::protocol::EntityId* agent_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 object_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SubscribeRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool SubscribeRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool SubscribeRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& SubscribeRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& SubscribeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.SubscribeRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* SubscribeRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.SubscribeRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* SubscribeRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* SubscribeRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.SubscribeRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void SubscribeRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.SubscribeRequest.agent_id)
}

// required .bgs.protocol.EntityId entity_id = 2;
inline bool SubscribeRequest::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || entity_id_ != nullptr);
  return value;
}
inline bool SubscribeRequest::has_entity_id() const {
  return _internal_has_entity_id();
}
inline const ::bgs::protocol::EntityId& SubscribeRequest::_internal_entity_id() const {
  const ::bgs::protocol::EntityId* p = entity_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& SubscribeRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.SubscribeRequest.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityId* SubscribeRequest::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.SubscribeRequest.entity_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = entity_id_;
  entity_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* SubscribeRequest::_internal_mutable_entity_id() {
  _has_bits_[0] |= 0x00000002u;
  if (entity_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    entity_id_ = p;
  }
  return entity_id_;
}
inline ::bgs::protocol::EntityId* SubscribeRequest::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.SubscribeRequest.entity_id)
  return _internal_mutable_entity_id();
}
inline void SubscribeRequest::set_allocated_entity_id(::bgs::protocol::EntityId* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_id_);
  }
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  entity_id_ = entity_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.SubscribeRequest.entity_id)
}

// required uint64 object_id = 3;
inline bool SubscribeRequest::_internal_has_object_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SubscribeRequest::has_object_id() const {
  return _internal_has_object_id();
}
inline void SubscribeRequest::clear_object_id() {
  object_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SubscribeRequest::_internal_object_id() const {
  return object_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SubscribeRequest::object_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.SubscribeRequest.object_id)
  return _internal_object_id();
}
inline void SubscribeRequest::_internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  object_id_ = value;
}
inline void SubscribeRequest::set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.SubscribeRequest.object_id)
}

// repeated fixed32 program = 4 [(.bgs.protocol.valid) = {
inline int SubscribeRequest::_internal_program_size() const {
  return program_.size();
}
inline int SubscribeRequest::program_size() const {
  return _internal_program_size();
}
inline void SubscribeRequest::clear_program() {
  program_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SubscribeRequest::_internal_program(int index) const {
  return program_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SubscribeRequest::program(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.SubscribeRequest.program)
  return _internal_program(index);
}
inline void SubscribeRequest::set_program(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  program_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.SubscribeRequest.program)
}
inline void SubscribeRequest::_internal_add_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  program_.Add(value);
}
inline void SubscribeRequest::add_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_program(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.SubscribeRequest.program)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
SubscribeRequest::_internal_program() const {
  return program_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
SubscribeRequest::program() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.SubscribeRequest.program)
  return _internal_program();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
SubscribeRequest::_internal_mutable_program() {
  return &program_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
SubscribeRequest::mutable_program() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.SubscribeRequest.program)
  return _internal_mutable_program();
}

// repeated .bgs.protocol.presence.v1.FieldKey key = 6 [(.bgs.protocol.valid) = {
inline int SubscribeRequest::_internal_key_size() const {
  return key_.size();
}
inline int SubscribeRequest::key_size() const {
  return _internal_key_size();
}
inline ::bgs::protocol::presence::v1::FieldKey* SubscribeRequest::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.SubscribeRequest.key)
  return key_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >*
SubscribeRequest::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.SubscribeRequest.key)
  return &key_;
}
inline const ::bgs::protocol::presence::v1::FieldKey& SubscribeRequest::_internal_key(int index) const {
  return key_.Get(index);
}
inline const ::bgs::protocol::presence::v1::FieldKey& SubscribeRequest::key(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.SubscribeRequest.key)
  return _internal_key(index);
}
inline ::bgs::protocol::presence::v1::FieldKey* SubscribeRequest::_internal_add_key() {
  return key_.Add();
}
inline ::bgs::protocol::presence::v1::FieldKey* SubscribeRequest::add_key() {
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.SubscribeRequest.key)
  return _internal_add_key();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >&
SubscribeRequest::key() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.SubscribeRequest.key)
  return key_;
}

// -------------------------------------------------------------------

// SubscribeNotificationRequest

// required .bgs.protocol.EntityId entity_id = 1;
inline bool SubscribeNotificationRequest::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || entity_id_ != nullptr);
  return value;
}
inline bool SubscribeNotificationRequest::has_entity_id() const {
  return _internal_has_entity_id();
}
inline const ::bgs::protocol::EntityId& SubscribeNotificationRequest::_internal_entity_id() const {
  const ::bgs::protocol::EntityId* p = entity_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& SubscribeNotificationRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.SubscribeNotificationRequest.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityId* SubscribeNotificationRequest::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.SubscribeNotificationRequest.entity_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = entity_id_;
  entity_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* SubscribeNotificationRequest::_internal_mutable_entity_id() {
  _has_bits_[0] |= 0x00000001u;
  if (entity_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    entity_id_ = p;
  }
  return entity_id_;
}
inline ::bgs::protocol::EntityId* SubscribeNotificationRequest::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.SubscribeNotificationRequest.entity_id)
  return _internal_mutable_entity_id();
}
inline void SubscribeNotificationRequest::set_allocated_entity_id(::bgs::protocol::EntityId* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_id_);
  }
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_id_ = entity_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.SubscribeNotificationRequest.entity_id)
}

// -------------------------------------------------------------------

// UnsubscribeRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool UnsubscribeRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool UnsubscribeRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& UnsubscribeRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& UnsubscribeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.UnsubscribeRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* UnsubscribeRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.UnsubscribeRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* UnsubscribeRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* UnsubscribeRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.UnsubscribeRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void UnsubscribeRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.UnsubscribeRequest.agent_id)
}

// required .bgs.protocol.EntityId entity_id = 2;
inline bool UnsubscribeRequest::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || entity_id_ != nullptr);
  return value;
}
inline bool UnsubscribeRequest::has_entity_id() const {
  return _internal_has_entity_id();
}
inline const ::bgs::protocol::EntityId& UnsubscribeRequest::_internal_entity_id() const {
  const ::bgs::protocol::EntityId* p = entity_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& UnsubscribeRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.UnsubscribeRequest.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityId* UnsubscribeRequest::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.UnsubscribeRequest.entity_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = entity_id_;
  entity_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* UnsubscribeRequest::_internal_mutable_entity_id() {
  _has_bits_[0] |= 0x00000002u;
  if (entity_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    entity_id_ = p;
  }
  return entity_id_;
}
inline ::bgs::protocol::EntityId* UnsubscribeRequest::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.UnsubscribeRequest.entity_id)
  return _internal_mutable_entity_id();
}
inline void UnsubscribeRequest::set_allocated_entity_id(::bgs::protocol::EntityId* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_id_);
  }
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  entity_id_ = entity_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.UnsubscribeRequest.entity_id)
}

// optional uint64 object_id = 3;
inline bool UnsubscribeRequest::_internal_has_object_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UnsubscribeRequest::has_object_id() const {
  return _internal_has_object_id();
}
inline void UnsubscribeRequest::clear_object_id() {
  object_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsubscribeRequest::_internal_object_id() const {
  return object_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsubscribeRequest::object_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.UnsubscribeRequest.object_id)
  return _internal_object_id();
}
inline void UnsubscribeRequest::_internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  object_id_ = value;
}
inline void UnsubscribeRequest::set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.UnsubscribeRequest.object_id)
}

// -------------------------------------------------------------------

// UpdateRequest

// required .bgs.protocol.EntityId entity_id = 1;
inline bool UpdateRequest::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || entity_id_ != nullptr);
  return value;
}
inline bool UpdateRequest::has_entity_id() const {
  return _internal_has_entity_id();
}
inline const ::bgs::protocol::EntityId& UpdateRequest::_internal_entity_id() const {
  const ::bgs::protocol::EntityId* p = entity_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& UpdateRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.UpdateRequest.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityId* UpdateRequest::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.UpdateRequest.entity_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = entity_id_;
  entity_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* UpdateRequest::_internal_mutable_entity_id() {
  _has_bits_[0] |= 0x00000001u;
  if (entity_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    entity_id_ = p;
  }
  return entity_id_;
}
inline ::bgs::protocol::EntityId* UpdateRequest::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.UpdateRequest.entity_id)
  return _internal_mutable_entity_id();
}
inline void UpdateRequest::set_allocated_entity_id(::bgs::protocol::EntityId* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_id_);
  }
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_id_ = entity_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.UpdateRequest.entity_id)
}

// repeated .bgs.protocol.presence.v1.FieldOperation field_operation = 2;
inline int UpdateRequest::_internal_field_operation_size() const {
  return field_operation_.size();
}
inline int UpdateRequest::field_operation_size() const {
  return _internal_field_operation_size();
}
inline ::bgs::protocol::presence::v1::FieldOperation* UpdateRequest::mutable_field_operation(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.UpdateRequest.field_operation)
  return field_operation_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >*
UpdateRequest::mutable_field_operation() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.UpdateRequest.field_operation)
  return &field_operation_;
}
inline const ::bgs::protocol::presence::v1::FieldOperation& UpdateRequest::_internal_field_operation(int index) const {
  return field_operation_.Get(index);
}
inline const ::bgs::protocol::presence::v1::FieldOperation& UpdateRequest::field_operation(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.UpdateRequest.field_operation)
  return _internal_field_operation(index);
}
inline ::bgs::protocol::presence::v1::FieldOperation* UpdateRequest::_internal_add_field_operation() {
  return field_operation_.Add();
}
inline ::bgs::protocol::presence::v1::FieldOperation* UpdateRequest::add_field_operation() {
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.UpdateRequest.field_operation)
  return _internal_add_field_operation();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >&
UpdateRequest::field_operation() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.UpdateRequest.field_operation)
  return field_operation_;
}

// optional bool no_create = 3;
inline bool UpdateRequest::_internal_has_no_create() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UpdateRequest::has_no_create() const {
  return _internal_has_no_create();
}
inline void UpdateRequest::clear_no_create() {
  no_create_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool UpdateRequest::_internal_no_create() const {
  return no_create_;
}
inline bool UpdateRequest::no_create() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.UpdateRequest.no_create)
  return _internal_no_create();
}
inline void UpdateRequest::_internal_set_no_create(bool value) {
  _has_bits_[0] |= 0x00000004u;
  no_create_ = value;
}
inline void UpdateRequest::set_no_create(bool value) {
  _internal_set_no_create(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.UpdateRequest.no_create)
}

// optional .bgs.protocol.EntityId agent_id = 4;
inline bool UpdateRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool UpdateRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& UpdateRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& UpdateRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.UpdateRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* UpdateRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.UpdateRequest.agent_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* UpdateRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000002u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* UpdateRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.UpdateRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void UpdateRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.UpdateRequest.agent_id)
}

// -------------------------------------------------------------------

// QueryRequest

// required .bgs.protocol.EntityId entity_id = 1;
inline bool QueryRequest::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || entity_id_ != nullptr);
  return value;
}
inline bool QueryRequest::has_entity_id() const {
  return _internal_has_entity_id();
}
inline const ::bgs::protocol::EntityId& QueryRequest::_internal_entity_id() const {
  const ::bgs::protocol::EntityId* p = entity_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& QueryRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.QueryRequest.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityId* QueryRequest::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.QueryRequest.entity_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = entity_id_;
  entity_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* QueryRequest::_internal_mutable_entity_id() {
  _has_bits_[0] |= 0x00000001u;
  if (entity_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    entity_id_ = p;
  }
  return entity_id_;
}
inline ::bgs::protocol::EntityId* QueryRequest::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.QueryRequest.entity_id)
  return _internal_mutable_entity_id();
}
inline void QueryRequest::set_allocated_entity_id(::bgs::protocol::EntityId* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_id_);
  }
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_id_ = entity_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.QueryRequest.entity_id)
}

// repeated .bgs.protocol.presence.v1.FieldKey key = 2;
inline int QueryRequest::_internal_key_size() const {
  return key_.size();
}
inline int QueryRequest::key_size() const {
  return _internal_key_size();
}
inline ::bgs::protocol::presence::v1::FieldKey* QueryRequest::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.QueryRequest.key)
  return key_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >*
QueryRequest::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.QueryRequest.key)
  return &key_;
}
inline const ::bgs::protocol::presence::v1::FieldKey& QueryRequest::_internal_key(int index) const {
  return key_.Get(index);
}
inline const ::bgs::protocol::presence::v1::FieldKey& QueryRequest::key(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.QueryRequest.key)
  return _internal_key(index);
}
inline ::bgs::protocol::presence::v1::FieldKey* QueryRequest::_internal_add_key() {
  return key_.Add();
}
inline ::bgs::protocol::presence::v1::FieldKey* QueryRequest::add_key() {
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.QueryRequest.key)
  return _internal_add_key();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >&
QueryRequest::key() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.QueryRequest.key)
  return key_;
}

// optional .bgs.protocol.EntityId agent_id = 3;
inline bool QueryRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool QueryRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& QueryRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& QueryRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.QueryRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* QueryRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.QueryRequest.agent_id)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* QueryRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000002u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* QueryRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.QueryRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void QueryRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.QueryRequest.agent_id)
}

// -------------------------------------------------------------------

// QueryResponse

// repeated .bgs.protocol.presence.v1.Field field = 2;
inline int QueryResponse::_internal_field_size() const {
  return field_.size();
}
inline int QueryResponse::field_size() const {
  return _internal_field_size();
}
inline ::bgs::protocol::presence::v1::Field* QueryResponse::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.QueryResponse.field)
  return field_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::Field >*
QueryResponse::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.QueryResponse.field)
  return &field_;
}
inline const ::bgs::protocol::presence::v1::Field& QueryResponse::_internal_field(int index) const {
  return field_.Get(index);
}
inline const ::bgs::protocol::presence::v1::Field& QueryResponse::field(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.QueryResponse.field)
  return _internal_field(index);
}
inline ::bgs::protocol::presence::v1::Field* QueryResponse::_internal_add_field() {
  return field_.Add();
}
inline ::bgs::protocol::presence::v1::Field* QueryResponse::add_field() {
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.QueryResponse.field)
  return _internal_add_field();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::Field >&
QueryResponse::field() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.QueryResponse.field)
  return field_;
}

// -------------------------------------------------------------------

// OwnershipRequest

// required .bgs.protocol.EntityId entity_id = 1;
inline bool OwnershipRequest::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || entity_id_ != nullptr);
  return value;
}
inline bool OwnershipRequest::has_entity_id() const {
  return _internal_has_entity_id();
}
inline const ::bgs::protocol::EntityId& OwnershipRequest::_internal_entity_id() const {
  const ::bgs::protocol::EntityId* p = entity_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& OwnershipRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.OwnershipRequest.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityId* OwnershipRequest::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.OwnershipRequest.entity_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = entity_id_;
  entity_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* OwnershipRequest::_internal_mutable_entity_id() {
  _has_bits_[0] |= 0x00000001u;
  if (entity_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    entity_id_ = p;
  }
  return entity_id_;
}
inline ::bgs::protocol::EntityId* OwnershipRequest::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.OwnershipRequest.entity_id)
  return _internal_mutable_entity_id();
}
inline void OwnershipRequest::set_allocated_entity_id(::bgs::protocol::EntityId* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_id_);
  }
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_id_ = entity_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.OwnershipRequest.entity_id)
}

// optional bool release_ownership = 2;
inline bool OwnershipRequest::_internal_has_release_ownership() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool OwnershipRequest::has_release_ownership() const {
  return _internal_has_release_ownership();
}
inline void OwnershipRequest::clear_release_ownership() {
  release_ownership_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool OwnershipRequest::_internal_release_ownership() const {
  return release_ownership_;
}
inline bool OwnershipRequest::release_ownership() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.OwnershipRequest.release_ownership)
  return _internal_release_ownership();
}
inline void OwnershipRequest::_internal_set_release_ownership(bool value) {
  _has_bits_[0] |= 0x00000002u;
  release_ownership_ = value;
}
inline void OwnershipRequest::set_release_ownership(bool value) {
  _internal_set_release_ownership(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.OwnershipRequest.release_ownership)
}

// -------------------------------------------------------------------

// BatchSubscribeRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool BatchSubscribeRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool BatchSubscribeRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& BatchSubscribeRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& BatchSubscribeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.BatchSubscribeRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* BatchSubscribeRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.BatchSubscribeRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* BatchSubscribeRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* BatchSubscribeRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.BatchSubscribeRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void BatchSubscribeRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.BatchSubscribeRequest.agent_id)
}

// repeated .bgs.protocol.EntityId entity_id = 2 [(.bgs.protocol.valid) = {
inline int BatchSubscribeRequest::_internal_entity_id_size() const {
  return entity_id_.size();
}
inline int BatchSubscribeRequest::entity_id_size() const {
  return _internal_entity_id_size();
}
inline ::bgs::protocol::EntityId* BatchSubscribeRequest::mutable_entity_id(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.BatchSubscribeRequest.entity_id)
  return entity_id_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >*
BatchSubscribeRequest::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.BatchSubscribeRequest.entity_id)
  return &entity_id_;
}
inline const ::bgs::protocol::EntityId& BatchSubscribeRequest::_internal_entity_id(int index) const {
  return entity_id_.Get(index);
}
inline const ::bgs::protocol::EntityId& BatchSubscribeRequest::entity_id(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.BatchSubscribeRequest.entity_id)
  return _internal_entity_id(index);
}
inline ::bgs::protocol::EntityId* BatchSubscribeRequest::_internal_add_entity_id() {
  return entity_id_.Add();
}
inline ::bgs::protocol::EntityId* BatchSubscribeRequest::add_entity_id() {
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.BatchSubscribeRequest.entity_id)
  return _internal_add_entity_id();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >&
BatchSubscribeRequest::entity_id() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.BatchSubscribeRequest.entity_id)
  return entity_id_;
}

// repeated fixed32 program = 3 [(.bgs.protocol.valid) = {
inline int BatchSubscribeRequest::_internal_program_size() const {
  return program_.size();
}
inline int BatchSubscribeRequest::program_size() const {
  return _internal_program_size();
}
inline void BatchSubscribeRequest::clear_program() {
  program_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BatchSubscribeRequest::_internal_program(int index) const {
  return program_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BatchSubscribeRequest::program(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.BatchSubscribeRequest.program)
  return _internal_program(index);
}
inline void BatchSubscribeRequest::set_program(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  program_.Set(index, value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.BatchSubscribeRequest.program)
}
inline void BatchSubscribeRequest::_internal_add_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  program_.Add(value);
}
inline void BatchSubscribeRequest::add_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_program(value);
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.BatchSubscribeRequest.program)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
BatchSubscribeRequest::_internal_program() const {
  return program_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
BatchSubscribeRequest::program() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.BatchSubscribeRequest.program)
  return _internal_program();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
BatchSubscribeRequest::_internal_mutable_program() {
  return &program_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
BatchSubscribeRequest::mutable_program() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.BatchSubscribeRequest.program)
  return _internal_mutable_program();
}

// repeated .bgs.protocol.presence.v1.FieldKey key = 4 [(.bgs.protocol.valid) = {
inline int BatchSubscribeRequest::_internal_key_size() const {
  return key_.size();
}
inline int BatchSubscribeRequest::key_size() const {
  return _internal_key_size();
}
inline ::bgs::protocol::presence::v1::FieldKey* BatchSubscribeRequest::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.BatchSubscribeRequest.key)
  return key_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >*
BatchSubscribeRequest::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.BatchSubscribeRequest.key)
  return &key_;
}
inline const ::bgs::protocol::presence::v1::FieldKey& BatchSubscribeRequest::_internal_key(int index) const {
  return key_.Get(index);
}
inline const ::bgs::protocol::presence::v1::FieldKey& BatchSubscribeRequest::key(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.BatchSubscribeRequest.key)
  return _internal_key(index);
}
inline ::bgs::protocol::presence::v1::FieldKey* BatchSubscribeRequest::_internal_add_key() {
  return key_.Add();
}
inline ::bgs::protocol::presence::v1::FieldKey* BatchSubscribeRequest::add_key() {
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.BatchSubscribeRequest.key)
  return _internal_add_key();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldKey >&
BatchSubscribeRequest::key() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.BatchSubscribeRequest.key)
  return key_;
}

// optional uint64 object_id = 5;
inline bool BatchSubscribeRequest::_internal_has_object_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool BatchSubscribeRequest::has_object_id() const {
  return _internal_has_object_id();
}
inline void BatchSubscribeRequest::clear_object_id() {
  object_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BatchSubscribeRequest::_internal_object_id() const {
  return object_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BatchSubscribeRequest::object_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.BatchSubscribeRequest.object_id)
  return _internal_object_id();
}
inline void BatchSubscribeRequest::_internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  object_id_ = value;
}
inline void BatchSubscribeRequest::set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.BatchSubscribeRequest.object_id)
}

// -------------------------------------------------------------------

// SubscribeResult

// optional .bgs.protocol.EntityId entity_id = 1;
inline bool SubscribeResult::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || entity_id_ != nullptr);
  return value;
}
inline bool SubscribeResult::has_entity_id() const {
  return _internal_has_entity_id();
}
inline const ::bgs::protocol::EntityId& SubscribeResult::_internal_entity_id() const {
  const ::bgs::protocol::EntityId* p = entity_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& SubscribeResult::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.SubscribeResult.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityId* SubscribeResult::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.SubscribeResult.entity_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = entity_id_;
  entity_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* SubscribeResult::_internal_mutable_entity_id() {
  _has_bits_[0] |= 0x00000001u;
  if (entity_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    entity_id_ = p;
  }
  return entity_id_;
}
inline ::bgs::protocol::EntityId* SubscribeResult::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.SubscribeResult.entity_id)
  return _internal_mutable_entity_id();
}
inline void SubscribeResult::set_allocated_entity_id(::bgs::protocol::EntityId* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_id_);
  }
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_id_ = entity_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.SubscribeResult.entity_id)
}

// optional uint32 result = 2;
inline bool SubscribeResult::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SubscribeResult::has_result() const {
  return _internal_has_result();
}
inline void SubscribeResult::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SubscribeResult::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SubscribeResult::result() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.SubscribeResult.result)
  return _internal_result();
}
inline void SubscribeResult::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void SubscribeResult::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.SubscribeResult.result)
}

// -------------------------------------------------------------------

// BatchSubscribeResponse

// repeated .bgs.protocol.presence.v1.SubscribeResult subscribe_failed = 1;
inline int BatchSubscribeResponse::_internal_subscribe_failed_size() const {
  return subscribe_failed_.size();
}
inline int BatchSubscribeResponse::subscribe_failed_size() const {
  return _internal_subscribe_failed_size();
}
inline void BatchSubscribeResponse::clear_subscribe_failed() {
  subscribe_failed_.Clear();
}
inline ::bgs::protocol::presence::v1::SubscribeResult* BatchSubscribeResponse::mutable_subscribe_failed(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.BatchSubscribeResponse.subscribe_failed)
  return subscribe_failed_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::SubscribeResult >*
BatchSubscribeResponse::mutable_subscribe_failed() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.BatchSubscribeResponse.subscribe_failed)
  return &subscribe_failed_;
}
inline const ::bgs::protocol::presence::v1::SubscribeResult& BatchSubscribeResponse::_internal_subscribe_failed(int index) const {
  return subscribe_failed_.Get(index);
}
inline const ::bgs::protocol::presence::v1::SubscribeResult& BatchSubscribeResponse::subscribe_failed(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.BatchSubscribeResponse.subscribe_failed)
  return _internal_subscribe_failed(index);
}
inline ::bgs::protocol::presence::v1::SubscribeResult* BatchSubscribeResponse::_internal_add_subscribe_failed() {
  return subscribe_failed_.Add();
}
inline ::bgs::protocol::presence::v1::SubscribeResult* BatchSubscribeResponse::add_subscribe_failed() {
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.BatchSubscribeResponse.subscribe_failed)
  return _internal_add_subscribe_failed();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::SubscribeResult >&
BatchSubscribeResponse::subscribe_failed() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.BatchSubscribeResponse.subscribe_failed)
  return subscribe_failed_;
}

// -------------------------------------------------------------------

// BatchUnsubscribeRequest

// optional .bgs.protocol.EntityId agent_id = 1;
inline bool BatchUnsubscribeRequest::_internal_has_agent_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || agent_id_ != nullptr);
  return value;
}
inline bool BatchUnsubscribeRequest::has_agent_id() const {
  return _internal_has_agent_id();
}
inline const ::bgs::protocol::EntityId& BatchUnsubscribeRequest::_internal_agent_id() const {
  const ::bgs::protocol::EntityId* p = agent_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& BatchUnsubscribeRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.BatchUnsubscribeRequest.agent_id)
  return _internal_agent_id();
}
inline ::bgs::protocol::EntityId* BatchUnsubscribeRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.BatchUnsubscribeRequest.agent_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = agent_id_;
  agent_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* BatchUnsubscribeRequest::_internal_mutable_agent_id() {
  _has_bits_[0] |= 0x00000001u;
  if (agent_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    agent_id_ = p;
  }
  return agent_id_;
}
inline ::bgs::protocol::EntityId* BatchUnsubscribeRequest::mutable_agent_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.BatchUnsubscribeRequest.agent_id)
  return _internal_mutable_agent_id();
}
inline void BatchUnsubscribeRequest::set_allocated_agent_id(::bgs::protocol::EntityId* agent_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent_id_);
  }
  if (agent_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      agent_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agent_id_ = agent_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.BatchUnsubscribeRequest.agent_id)
}

// repeated .bgs.protocol.EntityId entity_id = 2 [(.bgs.protocol.valid) = {
inline int BatchUnsubscribeRequest::_internal_entity_id_size() const {
  return entity_id_.size();
}
inline int BatchUnsubscribeRequest::entity_id_size() const {
  return _internal_entity_id_size();
}
inline ::bgs::protocol::EntityId* BatchUnsubscribeRequest::mutable_entity_id(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.BatchUnsubscribeRequest.entity_id)
  return entity_id_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >*
BatchUnsubscribeRequest::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.BatchUnsubscribeRequest.entity_id)
  return &entity_id_;
}
inline const ::bgs::protocol::EntityId& BatchUnsubscribeRequest::_internal_entity_id(int index) const {
  return entity_id_.Get(index);
}
inline const ::bgs::protocol::EntityId& BatchUnsubscribeRequest::entity_id(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.BatchUnsubscribeRequest.entity_id)
  return _internal_entity_id(index);
}
inline ::bgs::protocol::EntityId* BatchUnsubscribeRequest::_internal_add_entity_id() {
  return entity_id_.Add();
}
inline ::bgs::protocol::EntityId* BatchUnsubscribeRequest::add_entity_id() {
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.BatchUnsubscribeRequest.entity_id)
  return _internal_add_entity_id();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::EntityId >&
BatchUnsubscribeRequest::entity_id() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.BatchUnsubscribeRequest.entity_id)
  return entity_id_;
}

// optional uint64 object_id = 3;
inline bool BatchUnsubscribeRequest::_internal_has_object_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool BatchUnsubscribeRequest::has_object_id() const {
  return _internal_has_object_id();
}
inline void BatchUnsubscribeRequest::clear_object_id() {
  object_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BatchUnsubscribeRequest::_internal_object_id() const {
  return object_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BatchUnsubscribeRequest::object_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.BatchUnsubscribeRequest.object_id)
  return _internal_object_id();
}
inline void BatchUnsubscribeRequest::_internal_set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  object_id_ = value;
}
inline void BatchUnsubscribeRequest::set_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_object_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.BatchUnsubscribeRequest.object_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace presence
}  // namespace protocol
}  // namespace bgs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fpresence_5fservice_2eproto
