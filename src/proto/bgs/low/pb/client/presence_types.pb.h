// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/presence_types.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "bgs/low/pb/client/attribute_types.pb.h"
#include "bgs/low/pb/client/entity_types.pb.h"
#include "bgs/low/pb/client/channel_types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto;
namespace bgs {
namespace protocol {
namespace presence {
namespace v1 {
class ChannelState;
class ChannelStateDefaultTypeInternal;
extern ChannelStateDefaultTypeInternal _ChannelState_default_instance_;
class Field;
class FieldDefaultTypeInternal;
extern FieldDefaultTypeInternal _Field_default_instance_;
class FieldKey;
class FieldKeyDefaultTypeInternal;
extern FieldKeyDefaultTypeInternal _FieldKey_default_instance_;
class FieldOperation;
class FieldOperationDefaultTypeInternal;
extern FieldOperationDefaultTypeInternal _FieldOperation_default_instance_;
class PresenceState;
class PresenceStateDefaultTypeInternal;
extern PresenceStateDefaultTypeInternal _PresenceState_default_instance_;
class RichPresenceLocalizationKey;
class RichPresenceLocalizationKeyDefaultTypeInternal;
extern RichPresenceLocalizationKeyDefaultTypeInternal _RichPresenceLocalizationKey_default_instance_;
}  // namespace v1
}  // namespace presence
}  // namespace protocol
}  // namespace bgs
PROTOBUF_NAMESPACE_OPEN
template<> ::bgs::protocol::presence::v1::ChannelState* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::ChannelState>(Arena*);
template<> ::bgs::protocol::presence::v1::Field* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::Field>(Arena*);
template<> ::bgs::protocol::presence::v1::FieldKey* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::FieldKey>(Arena*);
template<> ::bgs::protocol::presence::v1::FieldOperation* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::FieldOperation>(Arena*);
template<> ::bgs::protocol::presence::v1::PresenceState* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::PresenceState>(Arena*);
template<> ::bgs::protocol::presence::v1::RichPresenceLocalizationKey* Arena::CreateMaybeMessage<::bgs::protocol::presence::v1::RichPresenceLocalizationKey>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bgs {
namespace protocol {
namespace presence {
namespace v1 {

enum FieldOperation_OperationType : int {
  FieldOperation_OperationType_SET = 0,
  FieldOperation_OperationType_CLEAR = 1
};
bool FieldOperation_OperationType_IsValid(int value);
constexpr FieldOperation_OperationType FieldOperation_OperationType_OperationType_MIN = FieldOperation_OperationType_SET;
constexpr FieldOperation_OperationType FieldOperation_OperationType_OperationType_MAX = FieldOperation_OperationType_CLEAR;
constexpr int FieldOperation_OperationType_OperationType_ARRAYSIZE = FieldOperation_OperationType_OperationType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FieldOperation_OperationType_descriptor();
template<typename T>
inline const std::string& FieldOperation_OperationType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, FieldOperation_OperationType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function FieldOperation_OperationType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    FieldOperation_OperationType_descriptor(), enum_t_value);
}
inline bool FieldOperation_OperationType_Parse(
    const std::string& name, FieldOperation_OperationType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<FieldOperation_OperationType>(
    FieldOperation_OperationType_descriptor(), name, value);
}
// ===================================================================

class RichPresenceLocalizationKey :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.RichPresenceLocalizationKey) */ {
 public:
  RichPresenceLocalizationKey();
  virtual ~RichPresenceLocalizationKey();

  RichPresenceLocalizationKey(const RichPresenceLocalizationKey& from);
  RichPresenceLocalizationKey(RichPresenceLocalizationKey&& from) noexcept
    : RichPresenceLocalizationKey() {
    *this = ::std::move(from);
  }

  inline RichPresenceLocalizationKey& operator=(const RichPresenceLocalizationKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline RichPresenceLocalizationKey& operator=(RichPresenceLocalizationKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RichPresenceLocalizationKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RichPresenceLocalizationKey* internal_default_instance() {
    return reinterpret_cast<const RichPresenceLocalizationKey*>(
               &_RichPresenceLocalizationKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RichPresenceLocalizationKey& a, RichPresenceLocalizationKey& b) {
    a.Swap(&b);
  }
  inline void Swap(RichPresenceLocalizationKey* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RichPresenceLocalizationKey* New() const final {
    return CreateMaybeMessage<RichPresenceLocalizationKey>(nullptr);
  }

  RichPresenceLocalizationKey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RichPresenceLocalizationKey>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RichPresenceLocalizationKey& from);
  void MergeFrom(const RichPresenceLocalizationKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RichPresenceLocalizationKey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.RichPresenceLocalizationKey";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProgramFieldNumber = 1,
    kStreamFieldNumber = 2,
    kLocalizationIdFieldNumber = 3,
  };
  // required fixed32 program = 1;
  bool has_program() const;
  private:
  bool _internal_has_program() const;
  public:
  void clear_program();
  ::PROTOBUF_NAMESPACE_ID::uint32 program() const;
  void set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program() const;
  void _internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required fixed32 stream = 2;
  bool has_stream() const;
  private:
  bool _internal_has_stream() const;
  public:
  void clear_stream();
  ::PROTOBUF_NAMESPACE_ID::uint32 stream() const;
  void set_stream(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stream() const;
  void _internal_set_stream(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 localization_id = 3;
  bool has_localization_id() const;
  private:
  bool _internal_has_localization_id() const;
  public:
  void clear_localization_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 localization_id() const;
  void set_localization_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_localization_id() const;
  void _internal_set_localization_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.RichPresenceLocalizationKey)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 program_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stream_;
  ::PROTOBUF_NAMESPACE_ID::uint32 localization_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class FieldKey :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.FieldKey) */ {
 public:
  FieldKey();
  virtual ~FieldKey();

  FieldKey(const FieldKey& from);
  FieldKey(FieldKey&& from) noexcept
    : FieldKey() {
    *this = ::std::move(from);
  }

  inline FieldKey& operator=(const FieldKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline FieldKey& operator=(FieldKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FieldKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldKey* internal_default_instance() {
    return reinterpret_cast<const FieldKey*>(
               &_FieldKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FieldKey& a, FieldKey& b) {
    a.Swap(&b);
  }
  inline void Swap(FieldKey* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FieldKey* New() const final {
    return CreateMaybeMessage<FieldKey>(nullptr);
  }

  FieldKey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FieldKey>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FieldKey& from);
  void MergeFrom(const FieldKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldKey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.FieldKey";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProgramFieldNumber = 1,
    kGroupFieldNumber = 2,
    kUniqueIdFieldNumber = 4,
    kFieldFieldNumber = 3,
  };
  // required uint32 program = 1;
  bool has_program() const;
  private:
  bool _internal_has_program() const;
  public:
  void clear_program();
  ::PROTOBUF_NAMESPACE_ID::uint32 program() const;
  void set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_program() const;
  void _internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 group = 2;
  bool has_group() const;
  private:
  bool _internal_has_group() const;
  public:
  void clear_group();
  ::PROTOBUF_NAMESPACE_ID::uint32 group() const;
  void set_group(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_group() const;
  void _internal_set_group(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 unique_id = 4 [default = 0];
  bool has_unique_id() const;
  private:
  bool _internal_has_unique_id() const;
  public:
  void clear_unique_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 unique_id() const;
  void set_unique_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_unique_id() const;
  void _internal_set_unique_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required uint32 field = 3;
  bool has_field() const;
  private:
  bool _internal_has_field() const;
  public:
  void clear_field();
  ::PROTOBUF_NAMESPACE_ID::uint32 field() const;
  void set_field(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_field() const;
  void _internal_set_field(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.FieldKey)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 program_;
  ::PROTOBUF_NAMESPACE_ID::uint32 group_;
  ::PROTOBUF_NAMESPACE_ID::uint64 unique_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 field_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class Field :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.Field) */ {
 public:
  Field();
  virtual ~Field();

  Field(const Field& from);
  Field(Field&& from) noexcept
    : Field() {
    *this = ::std::move(from);
  }

  inline Field& operator=(const Field& from) {
    CopyFrom(from);
    return *this;
  }
  inline Field& operator=(Field&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Field& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Field* internal_default_instance() {
    return reinterpret_cast<const Field*>(
               &_Field_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Field& a, Field& b) {
    a.Swap(&b);
  }
  inline void Swap(Field* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Field* New() const final {
    return CreateMaybeMessage<Field>(nullptr);
  }

  Field* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Field>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Field& from);
  void MergeFrom(const Field& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Field* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.Field";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // required .bgs.protocol.presence.v1.FieldKey key = 1;
  bool has_key() const;
  private:
  bool _internal_has_key() const;
  public:
  void clear_key();
  const ::bgs::protocol::presence::v1::FieldKey& key() const;
  ::bgs::protocol::presence::v1::FieldKey* release_key();
  ::bgs::protocol::presence::v1::FieldKey* mutable_key();
  void set_allocated_key(::bgs::protocol::presence::v1::FieldKey* key);
  private:
  const ::bgs::protocol::presence::v1::FieldKey& _internal_key() const;
  ::bgs::protocol::presence::v1::FieldKey* _internal_mutable_key();
  public:

  // required .bgs.protocol.Variant value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::bgs::protocol::Variant& value() const;
  ::bgs::protocol::Variant* release_value();
  ::bgs::protocol::Variant* mutable_value();
  void set_allocated_value(::bgs::protocol::Variant* value);
  private:
  const ::bgs::protocol::Variant& _internal_value() const;
  ::bgs::protocol::Variant* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.Field)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::presence::v1::FieldKey* key_;
  ::bgs::protocol::Variant* value_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class FieldOperation :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.FieldOperation) */ {
 public:
  FieldOperation();
  virtual ~FieldOperation();

  FieldOperation(const FieldOperation& from);
  FieldOperation(FieldOperation&& from) noexcept
    : FieldOperation() {
    *this = ::std::move(from);
  }

  inline FieldOperation& operator=(const FieldOperation& from) {
    CopyFrom(from);
    return *this;
  }
  inline FieldOperation& operator=(FieldOperation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FieldOperation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldOperation* internal_default_instance() {
    return reinterpret_cast<const FieldOperation*>(
               &_FieldOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(FieldOperation& a, FieldOperation& b) {
    a.Swap(&b);
  }
  inline void Swap(FieldOperation* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FieldOperation* New() const final {
    return CreateMaybeMessage<FieldOperation>(nullptr);
  }

  FieldOperation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FieldOperation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FieldOperation& from);
  void MergeFrom(const FieldOperation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldOperation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.FieldOperation";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef FieldOperation_OperationType OperationType;
  static constexpr OperationType SET =
    FieldOperation_OperationType_SET;
  static constexpr OperationType CLEAR =
    FieldOperation_OperationType_CLEAR;
  static inline bool OperationType_IsValid(int value) {
    return FieldOperation_OperationType_IsValid(value);
  }
  static constexpr OperationType OperationType_MIN =
    FieldOperation_OperationType_OperationType_MIN;
  static constexpr OperationType OperationType_MAX =
    FieldOperation_OperationType_OperationType_MAX;
  static constexpr int OperationType_ARRAYSIZE =
    FieldOperation_OperationType_OperationType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  OperationType_descriptor() {
    return FieldOperation_OperationType_descriptor();
  }
  template<typename T>
  static inline const std::string& OperationType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, OperationType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function OperationType_Name.");
    return FieldOperation_OperationType_Name(enum_t_value);
  }
  static inline bool OperationType_Parse(const std::string& name,
      OperationType* value) {
    return FieldOperation_OperationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 1,
    kOperationFieldNumber = 2,
  };
  // required .bgs.protocol.presence.v1.Field field = 1;
  bool has_field() const;
  private:
  bool _internal_has_field() const;
  public:
  void clear_field();
  const ::bgs::protocol::presence::v1::Field& field() const;
  ::bgs::protocol::presence::v1::Field* release_field();
  ::bgs::protocol::presence::v1::Field* mutable_field();
  void set_allocated_field(::bgs::protocol::presence::v1::Field* field);
  private:
  const ::bgs::protocol::presence::v1::Field& _internal_field() const;
  ::bgs::protocol::presence::v1::Field* _internal_mutable_field();
  public:

  // optional .bgs.protocol.presence.v1.FieldOperation.OperationType operation = 2 [default = SET];
  bool has_operation() const;
  private:
  bool _internal_has_operation() const;
  public:
  void clear_operation();
  ::bgs::protocol::presence::v1::FieldOperation_OperationType operation() const;
  void set_operation(::bgs::protocol::presence::v1::FieldOperation_OperationType value);
  private:
  ::bgs::protocol::presence::v1::FieldOperation_OperationType _internal_operation() const;
  void _internal_set_operation(::bgs::protocol::presence::v1::FieldOperation_OperationType value);
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.FieldOperation)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::bgs::protocol::presence::v1::Field* field_;
  int operation_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class PresenceState :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.PresenceState) */ {
 public:
  PresenceState();
  virtual ~PresenceState();

  PresenceState(const PresenceState& from);
  PresenceState(PresenceState&& from) noexcept
    : PresenceState() {
    *this = ::std::move(from);
  }

  inline PresenceState& operator=(const PresenceState& from) {
    CopyFrom(from);
    return *this;
  }
  inline PresenceState& operator=(PresenceState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PresenceState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PresenceState* internal_default_instance() {
    return reinterpret_cast<const PresenceState*>(
               &_PresenceState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PresenceState& a, PresenceState& b) {
    a.Swap(&b);
  }
  inline void Swap(PresenceState* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PresenceState* New() const final {
    return CreateMaybeMessage<PresenceState>(nullptr);
  }

  PresenceState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PresenceState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PresenceState& from);
  void MergeFrom(const PresenceState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PresenceState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.PresenceState";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldOperationFieldNumber = 2,
    kEntityIdFieldNumber = 1,
  };
  // repeated .bgs.protocol.presence.v1.FieldOperation field_operation = 2;
  int field_operation_size() const;
  private:
  int _internal_field_operation_size() const;
  public:
  void clear_field_operation();
  ::bgs::protocol::presence::v1::FieldOperation* mutable_field_operation(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >*
      mutable_field_operation();
  private:
  const ::bgs::protocol::presence::v1::FieldOperation& _internal_field_operation(int index) const;
  ::bgs::protocol::presence::v1::FieldOperation* _internal_add_field_operation();
  public:
  const ::bgs::protocol::presence::v1::FieldOperation& field_operation(int index) const;
  ::bgs::protocol::presence::v1::FieldOperation* add_field_operation();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >&
      field_operation() const;

  // optional .bgs.protocol.EntityId entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityId& entity_id() const;
  ::bgs::protocol::EntityId* release_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityId* entity_id);
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_entity_id();
  public:

  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.PresenceState)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation > field_operation_;
  ::bgs::protocol::EntityId* entity_id_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto;
};
// -------------------------------------------------------------------

class ChannelState :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bgs.protocol.presence.v1.ChannelState) */ {
 public:
  ChannelState();
  virtual ~ChannelState();

  ChannelState(const ChannelState& from);
  ChannelState(ChannelState&& from) noexcept
    : ChannelState() {
    *this = ::std::move(from);
  }

  inline ChannelState& operator=(const ChannelState& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelState& operator=(ChannelState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ChannelState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChannelState* internal_default_instance() {
    return reinterpret_cast<const ChannelState*>(
               &_ChannelState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ChannelState& a, ChannelState& b) {
    a.Swap(&b);
  }
  inline void Swap(ChannelState* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ChannelState* New() const final {
    return CreateMaybeMessage<ChannelState>(nullptr);
  }

  ChannelState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ChannelState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ChannelState& from);
  void MergeFrom(const ChannelState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChannelState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bgs.protocol.presence.v1.ChannelState";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto);
    return ::descriptor_table_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldOperationFieldNumber = 2,
    kEntityIdFieldNumber = 1,
    kHealingFieldNumber = 3,
  };
  // repeated .bgs.protocol.presence.v1.FieldOperation field_operation = 2;
  int field_operation_size() const;
  private:
  int _internal_field_operation_size() const;
  public:
  void clear_field_operation();
  ::bgs::protocol::presence::v1::FieldOperation* mutable_field_operation(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >*
      mutable_field_operation();
  private:
  const ::bgs::protocol::presence::v1::FieldOperation& _internal_field_operation(int index) const;
  ::bgs::protocol::presence::v1::FieldOperation* _internal_add_field_operation();
  public:
  const ::bgs::protocol::presence::v1::FieldOperation& field_operation(int index) const;
  ::bgs::protocol::presence::v1::FieldOperation* add_field_operation();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >&
      field_operation() const;

  // optional .bgs.protocol.EntityId entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  const ::bgs::protocol::EntityId& entity_id() const;
  ::bgs::protocol::EntityId* release_entity_id();
  ::bgs::protocol::EntityId* mutable_entity_id();
  void set_allocated_entity_id(::bgs::protocol::EntityId* entity_id);
  private:
  const ::bgs::protocol::EntityId& _internal_entity_id() const;
  ::bgs::protocol::EntityId* _internal_mutable_entity_id();
  public:

  // optional bool healing = 3 [default = false];
  bool has_healing() const;
  private:
  bool _internal_has_healing() const;
  public:
  void clear_healing();
  bool healing() const;
  void set_healing(bool value);
  private:
  bool _internal_healing() const;
  void _internal_set_healing(bool value);
  public:

  static const int kPresenceFieldNumber = 101;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::bgs::protocol::channel::v1::ChannelState,
      ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::bgs::protocol::presence::v1::ChannelState >, 11, false >
    presence;
  // @@protoc_insertion_point(class_scope:bgs.protocol.presence.v1.ChannelState)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation > field_operation_;
  ::bgs::protocol::EntityId* entity_id_;
  bool healing_;
  friend struct ::TableStruct_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RichPresenceLocalizationKey

// required fixed32 program = 1;
inline bool RichPresenceLocalizationKey::_internal_has_program() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RichPresenceLocalizationKey::has_program() const {
  return _internal_has_program();
}
inline void RichPresenceLocalizationKey::clear_program() {
  program_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RichPresenceLocalizationKey::_internal_program() const {
  return program_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RichPresenceLocalizationKey::program() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.RichPresenceLocalizationKey.program)
  return _internal_program();
}
inline void RichPresenceLocalizationKey::_internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  program_ = value;
}
inline void RichPresenceLocalizationKey::set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_program(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.RichPresenceLocalizationKey.program)
}

// required fixed32 stream = 2;
inline bool RichPresenceLocalizationKey::_internal_has_stream() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RichPresenceLocalizationKey::has_stream() const {
  return _internal_has_stream();
}
inline void RichPresenceLocalizationKey::clear_stream() {
  stream_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RichPresenceLocalizationKey::_internal_stream() const {
  return stream_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RichPresenceLocalizationKey::stream() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.RichPresenceLocalizationKey.stream)
  return _internal_stream();
}
inline void RichPresenceLocalizationKey::_internal_set_stream(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  stream_ = value;
}
inline void RichPresenceLocalizationKey::set_stream(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stream(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.RichPresenceLocalizationKey.stream)
}

// required uint32 localization_id = 3;
inline bool RichPresenceLocalizationKey::_internal_has_localization_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool RichPresenceLocalizationKey::has_localization_id() const {
  return _internal_has_localization_id();
}
inline void RichPresenceLocalizationKey::clear_localization_id() {
  localization_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RichPresenceLocalizationKey::_internal_localization_id() const {
  return localization_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RichPresenceLocalizationKey::localization_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.RichPresenceLocalizationKey.localization_id)
  return _internal_localization_id();
}
inline void RichPresenceLocalizationKey::_internal_set_localization_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  localization_id_ = value;
}
inline void RichPresenceLocalizationKey::set_localization_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_localization_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.RichPresenceLocalizationKey.localization_id)
}

// -------------------------------------------------------------------

// FieldKey

// required uint32 program = 1;
inline bool FieldKey::_internal_has_program() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool FieldKey::has_program() const {
  return _internal_has_program();
}
inline void FieldKey::clear_program() {
  program_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FieldKey::_internal_program() const {
  return program_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FieldKey::program() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.FieldKey.program)
  return _internal_program();
}
inline void FieldKey::_internal_set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  program_ = value;
}
inline void FieldKey::set_program(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_program(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.FieldKey.program)
}

// required uint32 group = 2;
inline bool FieldKey::_internal_has_group() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool FieldKey::has_group() const {
  return _internal_has_group();
}
inline void FieldKey::clear_group() {
  group_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FieldKey::_internal_group() const {
  return group_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FieldKey::group() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.FieldKey.group)
  return _internal_group();
}
inline void FieldKey::_internal_set_group(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  group_ = value;
}
inline void FieldKey::set_group(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_group(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.FieldKey.group)
}

// required uint32 field = 3;
inline bool FieldKey::_internal_has_field() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool FieldKey::has_field() const {
  return _internal_has_field();
}
inline void FieldKey::clear_field() {
  field_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FieldKey::_internal_field() const {
  return field_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FieldKey::field() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.FieldKey.field)
  return _internal_field();
}
inline void FieldKey::_internal_set_field(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  field_ = value;
}
inline void FieldKey::set_field(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_field(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.FieldKey.field)
}

// optional uint64 unique_id = 4 [default = 0];
inline bool FieldKey::_internal_has_unique_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool FieldKey::has_unique_id() const {
  return _internal_has_unique_id();
}
inline void FieldKey::clear_unique_id() {
  unique_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FieldKey::_internal_unique_id() const {
  return unique_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FieldKey::unique_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.FieldKey.unique_id)
  return _internal_unique_id();
}
inline void FieldKey::_internal_set_unique_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  unique_id_ = value;
}
inline void FieldKey::set_unique_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_unique_id(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.FieldKey.unique_id)
}

// -------------------------------------------------------------------

// Field

// required .bgs.protocol.presence.v1.FieldKey key = 1;
inline bool Field::_internal_has_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || key_ != nullptr);
  return value;
}
inline bool Field::has_key() const {
  return _internal_has_key();
}
inline void Field::clear_key() {
  if (key_ != nullptr) key_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::bgs::protocol::presence::v1::FieldKey& Field::_internal_key() const {
  const ::bgs::protocol::presence::v1::FieldKey* p = key_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::presence::v1::FieldKey*>(
      &::bgs::protocol::presence::v1::_FieldKey_default_instance_);
}
inline const ::bgs::protocol::presence::v1::FieldKey& Field::key() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.Field.key)
  return _internal_key();
}
inline ::bgs::protocol::presence::v1::FieldKey* Field::release_key() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.Field.key)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::presence::v1::FieldKey* temp = key_;
  key_ = nullptr;
  return temp;
}
inline ::bgs::protocol::presence::v1::FieldKey* Field::_internal_mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  if (key_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::presence::v1::FieldKey>(GetArenaNoVirtual());
    key_ = p;
  }
  return key_;
}
inline ::bgs::protocol::presence::v1::FieldKey* Field::mutable_key() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.Field.key)
  return _internal_mutable_key();
}
inline void Field::set_allocated_key(::bgs::protocol::presence::v1::FieldKey* key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete key_;
  }
  if (key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_ = key;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.Field.key)
}

// required .bgs.protocol.Variant value = 2;
inline bool Field::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || value_ != nullptr);
  return value;
}
inline bool Field::has_value() const {
  return _internal_has_value();
}
inline const ::bgs::protocol::Variant& Field::_internal_value() const {
  const ::bgs::protocol::Variant* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::Variant*>(
      &::bgs::protocol::_Variant_default_instance_);
}
inline const ::bgs::protocol::Variant& Field::value() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.Field.value)
  return _internal_value();
}
inline ::bgs::protocol::Variant* Field::release_value() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.Field.value)
  _has_bits_[0] &= ~0x00000002u;
  ::bgs::protocol::Variant* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::bgs::protocol::Variant* Field::_internal_mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::Variant>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::bgs::protocol::Variant* Field::mutable_value() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.Field.value)
  return _internal_mutable_value();
}
inline void Field::set_allocated_value(::bgs::protocol::Variant* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.Field.value)
}

// -------------------------------------------------------------------

// FieldOperation

// required .bgs.protocol.presence.v1.Field field = 1;
inline bool FieldOperation::_internal_has_field() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || field_ != nullptr);
  return value;
}
inline bool FieldOperation::has_field() const {
  return _internal_has_field();
}
inline void FieldOperation::clear_field() {
  if (field_ != nullptr) field_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::bgs::protocol::presence::v1::Field& FieldOperation::_internal_field() const {
  const ::bgs::protocol::presence::v1::Field* p = field_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::presence::v1::Field*>(
      &::bgs::protocol::presence::v1::_Field_default_instance_);
}
inline const ::bgs::protocol::presence::v1::Field& FieldOperation::field() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.FieldOperation.field)
  return _internal_field();
}
inline ::bgs::protocol::presence::v1::Field* FieldOperation::release_field() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.FieldOperation.field)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::presence::v1::Field* temp = field_;
  field_ = nullptr;
  return temp;
}
inline ::bgs::protocol::presence::v1::Field* FieldOperation::_internal_mutable_field() {
  _has_bits_[0] |= 0x00000001u;
  if (field_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::presence::v1::Field>(GetArenaNoVirtual());
    field_ = p;
  }
  return field_;
}
inline ::bgs::protocol::presence::v1::Field* FieldOperation::mutable_field() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.FieldOperation.field)
  return _internal_mutable_field();
}
inline void FieldOperation::set_allocated_field(::bgs::protocol::presence::v1::Field* field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete field_;
  }
  if (field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, field, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  field_ = field;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.FieldOperation.field)
}

// optional .bgs.protocol.presence.v1.FieldOperation.OperationType operation = 2 [default = SET];
inline bool FieldOperation::_internal_has_operation() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool FieldOperation::has_operation() const {
  return _internal_has_operation();
}
inline void FieldOperation::clear_operation() {
  operation_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::bgs::protocol::presence::v1::FieldOperation_OperationType FieldOperation::_internal_operation() const {
  return static_cast< ::bgs::protocol::presence::v1::FieldOperation_OperationType >(operation_);
}
inline ::bgs::protocol::presence::v1::FieldOperation_OperationType FieldOperation::operation() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.FieldOperation.operation)
  return _internal_operation();
}
inline void FieldOperation::_internal_set_operation(::bgs::protocol::presence::v1::FieldOperation_OperationType value) {
  assert(::bgs::protocol::presence::v1::FieldOperation_OperationType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  operation_ = value;
}
inline void FieldOperation::set_operation(::bgs::protocol::presence::v1::FieldOperation_OperationType value) {
  _internal_set_operation(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.FieldOperation.operation)
}

// -------------------------------------------------------------------

// PresenceState

// optional .bgs.protocol.EntityId entity_id = 1;
inline bool PresenceState::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || entity_id_ != nullptr);
  return value;
}
inline bool PresenceState::has_entity_id() const {
  return _internal_has_entity_id();
}
inline const ::bgs::protocol::EntityId& PresenceState::_internal_entity_id() const {
  const ::bgs::protocol::EntityId* p = entity_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& PresenceState::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.PresenceState.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityId* PresenceState::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.PresenceState.entity_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = entity_id_;
  entity_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* PresenceState::_internal_mutable_entity_id() {
  _has_bits_[0] |= 0x00000001u;
  if (entity_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    entity_id_ = p;
  }
  return entity_id_;
}
inline ::bgs::protocol::EntityId* PresenceState::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.PresenceState.entity_id)
  return _internal_mutable_entity_id();
}
inline void PresenceState::set_allocated_entity_id(::bgs::protocol::EntityId* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_id_);
  }
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_id_ = entity_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.PresenceState.entity_id)
}

// repeated .bgs.protocol.presence.v1.FieldOperation field_operation = 2;
inline int PresenceState::_internal_field_operation_size() const {
  return field_operation_.size();
}
inline int PresenceState::field_operation_size() const {
  return _internal_field_operation_size();
}
inline void PresenceState::clear_field_operation() {
  field_operation_.Clear();
}
inline ::bgs::protocol::presence::v1::FieldOperation* PresenceState::mutable_field_operation(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.PresenceState.field_operation)
  return field_operation_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >*
PresenceState::mutable_field_operation() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.PresenceState.field_operation)
  return &field_operation_;
}
inline const ::bgs::protocol::presence::v1::FieldOperation& PresenceState::_internal_field_operation(int index) const {
  return field_operation_.Get(index);
}
inline const ::bgs::protocol::presence::v1::FieldOperation& PresenceState::field_operation(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.PresenceState.field_operation)
  return _internal_field_operation(index);
}
inline ::bgs::protocol::presence::v1::FieldOperation* PresenceState::_internal_add_field_operation() {
  return field_operation_.Add();
}
inline ::bgs::protocol::presence::v1::FieldOperation* PresenceState::add_field_operation() {
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.PresenceState.field_operation)
  return _internal_add_field_operation();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >&
PresenceState::field_operation() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.PresenceState.field_operation)
  return field_operation_;
}

// -------------------------------------------------------------------

// ChannelState

// optional .bgs.protocol.EntityId entity_id = 1;
inline bool ChannelState::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || entity_id_ != nullptr);
  return value;
}
inline bool ChannelState::has_entity_id() const {
  return _internal_has_entity_id();
}
inline const ::bgs::protocol::EntityId& ChannelState::_internal_entity_id() const {
  const ::bgs::protocol::EntityId* p = entity_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bgs::protocol::EntityId*>(
      &::bgs::protocol::_EntityId_default_instance_);
}
inline const ::bgs::protocol::EntityId& ChannelState::entity_id() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.ChannelState.entity_id)
  return _internal_entity_id();
}
inline ::bgs::protocol::EntityId* ChannelState::release_entity_id() {
  // @@protoc_insertion_point(field_release:bgs.protocol.presence.v1.ChannelState.entity_id)
  _has_bits_[0] &= ~0x00000001u;
  ::bgs::protocol::EntityId* temp = entity_id_;
  entity_id_ = nullptr;
  return temp;
}
inline ::bgs::protocol::EntityId* ChannelState::_internal_mutable_entity_id() {
  _has_bits_[0] |= 0x00000001u;
  if (entity_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::bgs::protocol::EntityId>(GetArenaNoVirtual());
    entity_id_ = p;
  }
  return entity_id_;
}
inline ::bgs::protocol::EntityId* ChannelState::mutable_entity_id() {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.ChannelState.entity_id)
  return _internal_mutable_entity_id();
}
inline void ChannelState::set_allocated_entity_id(::bgs::protocol::EntityId* entity_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_id_);
  }
  if (entity_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      entity_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_id_ = entity_id;
  // @@protoc_insertion_point(field_set_allocated:bgs.protocol.presence.v1.ChannelState.entity_id)
}

// repeated .bgs.protocol.presence.v1.FieldOperation field_operation = 2;
inline int ChannelState::_internal_field_operation_size() const {
  return field_operation_.size();
}
inline int ChannelState::field_operation_size() const {
  return _internal_field_operation_size();
}
inline void ChannelState::clear_field_operation() {
  field_operation_.Clear();
}
inline ::bgs::protocol::presence::v1::FieldOperation* ChannelState::mutable_field_operation(int index) {
  // @@protoc_insertion_point(field_mutable:bgs.protocol.presence.v1.ChannelState.field_operation)
  return field_operation_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >*
ChannelState::mutable_field_operation() {
  // @@protoc_insertion_point(field_mutable_list:bgs.protocol.presence.v1.ChannelState.field_operation)
  return &field_operation_;
}
inline const ::bgs::protocol::presence::v1::FieldOperation& ChannelState::_internal_field_operation(int index) const {
  return field_operation_.Get(index);
}
inline const ::bgs::protocol::presence::v1::FieldOperation& ChannelState::field_operation(int index) const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.ChannelState.field_operation)
  return _internal_field_operation(index);
}
inline ::bgs::protocol::presence::v1::FieldOperation* ChannelState::_internal_add_field_operation() {
  return field_operation_.Add();
}
inline ::bgs::protocol::presence::v1::FieldOperation* ChannelState::add_field_operation() {
  // @@protoc_insertion_point(field_add:bgs.protocol.presence.v1.ChannelState.field_operation)
  return _internal_add_field_operation();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bgs::protocol::presence::v1::FieldOperation >&
ChannelState::field_operation() const {
  // @@protoc_insertion_point(field_list:bgs.protocol.presence.v1.ChannelState.field_operation)
  return field_operation_;
}

// optional bool healing = 3 [default = false];
inline bool ChannelState::_internal_has_healing() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ChannelState::has_healing() const {
  return _internal_has_healing();
}
inline void ChannelState::clear_healing() {
  healing_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool ChannelState::_internal_healing() const {
  return healing_;
}
inline bool ChannelState::healing() const {
  // @@protoc_insertion_point(field_get:bgs.protocol.presence.v1.ChannelState.healing)
  return _internal_healing();
}
inline void ChannelState::_internal_set_healing(bool value) {
  _has_bits_[0] |= 0x00000002u;
  healing_ = value;
}
inline void ChannelState::set_healing(bool value) {
  _internal_set_healing(value);
  // @@protoc_insertion_point(field_set:bgs.protocol.presence.v1.ChannelState.healing)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace presence
}  // namespace protocol
}  // namespace bgs

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::bgs::protocol::presence::v1::FieldOperation_OperationType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bgs::protocol::presence::v1::FieldOperation_OperationType>() {
  return ::bgs::protocol::presence::v1::FieldOperation_OperationType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bgs_2flow_2fpb_2fclient_2fpresence_5ftypes_2eproto
